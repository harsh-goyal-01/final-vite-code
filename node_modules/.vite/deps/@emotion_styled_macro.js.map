{
  "version": 3,
  "sources": ["browser-external:path", "../../../../../node_modules/source-map/lib/base64.js", "../../../../../node_modules/source-map/lib/base64-vlq.js", "../../../../../node_modules/source-map/lib/util.js", "../../../../../node_modules/source-map/lib/array-set.js", "../../../../../node_modules/source-map/lib/mapping-list.js", "../../../../../node_modules/source-map/lib/source-map-generator.js", "../../../../../node_modules/source-map/lib/binary-search.js", "../../../../../node_modules/source-map/lib/quick-sort.js", "../../../../../node_modules/source-map/lib/source-map-consumer.js", "../../../../../node_modules/source-map/lib/source-node.js", "../../../../../node_modules/source-map/source-map.js", "vite:cjs-external-facade:fs", "../../../../../node_modules/convert-source-map/index.js", "../../../../../node_modules/find-root/index.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/escape-string-regexp/index.js", "../../../../../node_modules/assert/node_modules/util/support/isBufferBrowser.js", "../../../../../node_modules/assert/node_modules/inherits/inherits_browser.js", "../../../../../node_modules/assert/node_modules/util/util.js", "../../../../../node_modules/assert/assert.js", "../../../../../node_modules/@babel/types/src/utils/shallowEqual.ts", "../../../../../node_modules/@babel/types/src/utils/deprecationWarning.ts", "../../../../../node_modules/@babel/types/src/validators/generated/index.ts", "../../../../../node_modules/@babel/types/src/validators/matchesPattern.ts", "../../../../../node_modules/@babel/types/src/validators/buildMatchMemberExpression.ts", "../../../../../node_modules/@babel/types/src/validators/react/isReactComponent.ts", "../../../../../node_modules/@babel/types/src/validators/react/isCompatTag.ts", "../../../../../node_modules/to-fast-properties/index.js", "../../../../../node_modules/@babel/types/src/validators/isType.ts", "../../../../../node_modules/@babel/types/src/validators/isPlaceholderType.ts", "../../../../../node_modules/@babel/types/src/validators/is.ts", "../../../../../node_modules/@babel/helper-validator-identifier/src/identifier.ts", "../../../../../node_modules/@babel/helper-validator-identifier/src/keyword.ts", "../../../../../node_modules/@babel/helper-validator-identifier/src/index.ts", "../../../../../node_modules/@babel/types/src/validators/isValidIdentifier.ts", "../../../../../node_modules/@babel/helper-string-parser/src/index.ts", "../../../../../node_modules/@babel/types/src/constants/index.ts", "../../../../../node_modules/@babel/types/src/definitions/utils.ts", "../../../../../node_modules/@babel/types/src/definitions/core.ts", "../../../../../node_modules/@babel/types/src/definitions/flow.ts", "../../../../../node_modules/@babel/types/src/definitions/jsx.ts", "../../../../../node_modules/@babel/types/src/definitions/placeholders.ts", "../../../../../node_modules/@babel/types/src/definitions/misc.ts", "../../../../../node_modules/@babel/types/src/definitions/experimental.ts", "../../../../../node_modules/@babel/types/src/definitions/typescript.ts", "../../../../../node_modules/@babel/types/src/definitions/deprecated-aliases.ts", "../../../../../node_modules/@babel/types/src/definitions/index.ts", "../../../../../node_modules/@babel/types/src/validators/validate.ts", "../../../../../node_modules/@babel/types/src/builders/validateNode.ts", "../../../../../node_modules/@babel/types/src/builders/generated/index.ts", "../../../../../node_modules/@babel/types/src/utils/react/cleanJSXElementLiteralChild.ts", "../../../../../node_modules/@babel/types/src/builders/react/buildChildren.ts", "../../../../../node_modules/@babel/types/src/validators/isNode.ts", "../../../../../node_modules/@babel/types/src/asserts/assertNode.ts", "../../../../../node_modules/@babel/types/src/asserts/generated/index.ts", "../../../../../node_modules/@babel/types/src/builders/flow/createTypeAnnotationBasedOnTypeof.ts", "../../../../../node_modules/@babel/types/src/modifications/flow/removeTypeDuplicates.ts", "../../../../../node_modules/@babel/types/src/builders/flow/createFlowUnionType.ts", "../../../../../node_modules/@babel/types/src/modifications/typescript/removeTypeDuplicates.ts", "../../../../../node_modules/@babel/types/src/builders/typescript/createTSUnionType.ts", "../../../../../node_modules/@babel/types/src/builders/generated/uppercase.js", "../../../../../node_modules/@babel/types/src/clone/cloneNode.ts", "../../../../../node_modules/@babel/types/src/clone/clone.ts", "../../../../../node_modules/@babel/types/src/clone/cloneDeep.ts", "../../../../../node_modules/@babel/types/src/clone/cloneDeepWithoutLoc.ts", "../../../../../node_modules/@babel/types/src/clone/cloneWithoutLoc.ts", "../../../../../node_modules/@babel/types/src/comments/addComments.ts", "../../../../../node_modules/@babel/types/src/comments/addComment.ts", "../../../../../node_modules/@babel/types/src/utils/inherit.ts", "../../../../../node_modules/@babel/types/src/comments/inheritInnerComments.ts", "../../../../../node_modules/@babel/types/src/comments/inheritLeadingComments.ts", "../../../../../node_modules/@babel/types/src/comments/inheritTrailingComments.ts", "../../../../../node_modules/@babel/types/src/comments/inheritsComments.ts", "../../../../../node_modules/@babel/types/src/comments/removeComments.ts", "../../../../../node_modules/@babel/types/src/constants/generated/index.ts", "../../../../../node_modules/@babel/types/src/converters/toBlock.ts", "../../../../../node_modules/@babel/types/src/converters/ensureBlock.ts", "../../../../../node_modules/@babel/types/src/converters/toIdentifier.ts", "../../../../../node_modules/@babel/types/src/converters/toBindingIdentifierName.ts", "../../../../../node_modules/@babel/types/src/converters/toComputedKey.ts", "../../../../../node_modules/@babel/types/src/converters/toExpression.ts", "../../../../../node_modules/@babel/types/src/traverse/traverseFast.ts", "../../../../../node_modules/@babel/types/src/modifications/removeProperties.ts", "../../../../../node_modules/@babel/types/src/modifications/removePropertiesDeep.ts", "../../../../../node_modules/@babel/types/src/converters/toKeyAlias.ts", "../../../../../node_modules/@babel/types/src/retrievers/getBindingIdentifiers.ts", "../../../../../node_modules/@babel/types/src/converters/gatherSequenceExpressions.ts", "../../../../../node_modules/@babel/types/src/converters/toSequenceExpression.ts", "../../../../../node_modules/@babel/types/src/converters/toStatement.ts", "../../../../../node_modules/@babel/types/src/converters/valueToNode.ts", "../../../../../node_modules/@babel/types/src/modifications/appendToMemberExpression.ts", "../../../../../node_modules/@babel/types/src/modifications/inherits.ts", "../../../../../node_modules/@babel/types/src/modifications/prependToMemberExpression.ts", "../../../../../node_modules/@babel/types/src/retrievers/getOuterBindingIdentifiers.ts", "../../../../../node_modules/@babel/types/src/traverse/traverse.ts", "../../../../../node_modules/@babel/types/src/validators/isBinding.ts", "../../../../../node_modules/@babel/types/src/validators/isLet.ts", "../../../../../node_modules/@babel/types/src/validators/isBlockScoped.ts", "../../../../../node_modules/@babel/types/src/validators/isImmutable.ts", "../../../../../node_modules/@babel/types/src/validators/isNodesEquivalent.ts", "../../../../../node_modules/@babel/types/src/validators/isReferenced.ts", "../../../../../node_modules/@babel/types/src/validators/isScope.ts", "../../../../../node_modules/@babel/types/src/validators/isSpecifierDefault.ts", "../../../../../node_modules/@babel/types/src/validators/isValidES3Identifier.ts", "../../../../../node_modules/@babel/types/src/validators/isVar.ts", "../../../../../node_modules/@babel/types/src/index.ts", "../../../../../node_modules/@babel/helper-module-imports/src/import-builder.ts", "../../../../../node_modules/@babel/helper-module-imports/src/is-module.ts", "../../../../../node_modules/@babel/helper-module-imports/src/import-injector.ts", "../../../../../node_modules/@babel/helper-module-imports/src/index.ts", "../../../../../node_modules/@babel/runtime/helpers/interopRequireDefault.js", "../../../../../node_modules/@babel/runtime/helpers/extends.js", "../../../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js", "browser-external:os", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/homedir.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/caller.js", "../../../../../node_modules/path-parse/index.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/node-modules-paths.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/normalize-options.js", "../../../../../node_modules/function-bind/implementation.js", "../../../../../node_modules/function-bind/index.js", "../../../../../node_modules/has/src/index.js", "../../../../../node_modules/is-core-module/core.json", "../../../../../node_modules/is-core-module/index.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/async.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/core.json", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/core.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/is-core.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/lib/sync.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/resolve/index.js", "browser-external:module", "../../../../../node_modules/resolve-from/index.js", "../../../../../node_modules/callsites/index.js", "../../../../../node_modules/parent-module/index.js", "../../../../../node_modules/import-fresh/index.js", "../../../../../node_modules/has-symbols/shams.js", "../../../../../node_modules/has-tostringtag/shams.js", "../../../../../node_modules/has-symbols/index.js", "../../../../../node_modules/has-proto/index.js", "../../../../../node_modules/get-intrinsic/index.js", "../../../../../node_modules/call-bind/index.js", "../../../../../node_modules/call-bind/callBound.js", "../../../../../node_modules/is-arguments/index.js", "../../../../../node_modules/is-generator-function/index.js", "../../../../../node_modules/is-callable/index.js", "../../../../../node_modules/for-each/index.js", "../../../../../node_modules/available-typed-arrays/index.js", "../../../../../node_modules/gopd/index.js", "../../../../../node_modules/is-typed-array/index.js", "../../../../../node_modules/which-typed-array/index.js", "../../../../../node_modules/util/support/types.js", "../../../../../node_modules/util/support/isBufferBrowser.js", "../../../../../node_modules/inherits/inherits_browser.js", "../../../../../node_modules/util/util.js", "../../../../../node_modules/is-arrayish/index.js", "../../../../../node_modules/error-ex/index.js", "../../../../../node_modules/json-parse-even-better-errors/index.js", "../../../../../node_modules/lines-and-columns/build/index.js", "../../../../../node_modules/js-tokens/index.js", "../../../../../node_modules/@babel/highlight/node_modules/escape-string-regexp/index.js", "../../../../../node_modules/@babel/highlight/node_modules/color-name/index.js", "../../../../../node_modules/@babel/highlight/node_modules/color-convert/conversions.js", "../../../../../node_modules/@babel/highlight/node_modules/color-convert/route.js", "../../../../../node_modules/@babel/highlight/node_modules/color-convert/index.js", "../../../../../node_modules/@babel/highlight/node_modules/ansi-styles/index.js", "../../../../../node_modules/@babel/highlight/node_modules/supports-color/browser.js", "../../../../../node_modules/@babel/highlight/node_modules/chalk/templates.js", "../../../../../node_modules/@babel/highlight/node_modules/chalk/index.js", "../../../../../node_modules/@babel/highlight/src/index.ts", "../../../../../node_modules/@babel/code-frame/lib/index.js", "../../../../../node_modules/parse-json/index.js", "../../../../../node_modules/yaml/browser/dist/PlainValue-b8036b75.js", "../../../../../node_modules/yaml/browser/dist/parse-cst.js", "../../../../../node_modules/yaml/browser/dist/resolveSeq-492ab440.js", "../../../../../node_modules/yaml/browser/dist/warnings-df54cb69.js", "../../../../../node_modules/yaml/browser/dist/Schema-e94716c8.js", "../../../../../node_modules/yaml/browser/dist/index.js", "../../../../../node_modules/yaml/browser/index.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/loaders.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/getPropertyByPath.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/ExplorerBase.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/readFile.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/cacheWrapper.ts", "../../../../../node_modules/path-type/index.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/getDirectory.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/Explorer.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/ExplorerSync.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/dist/types.js", "../../../../../node_modules/babel-plugin-emotion/node_modules/cosmiconfig/src/index.ts", "../../../../../node_modules/babel-plugin-emotion/node_modules/babel-plugin-macros/dist/index.js", "../../../../../node_modules/babel-plugin-syntax-jsx/lib/index.js", "../../../../../node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.esm.js", "../../../../../node_modules/@emotion/styled/macro.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "import * as m from \"vite-cjs-external-facade:fs\";module.exports = m;", "'use strict';\nvar fs = require('fs');\nvar path = require('path');\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\n\nvar decodeBase64;\nif (typeof Buffer !== 'undefined') {\n  if (typeof Buffer.from === 'function') {\n    decodeBase64 = decodeBase64WithBufferFrom;\n  } else {\n    decodeBase64 = decodeBase64WithNewBuffer;\n  }\n} else {\n  decodeBase64 = decodeBase64WithAtob;\n}\n\nfunction decodeBase64WithBufferFrom(base64) {\n  return Buffer.from(base64, 'base64').toString();\n}\n\nfunction decodeBase64WithNewBuffer(base64) {\n  if (typeof value === 'number') {\n    throw new TypeError('The value to decode must not be of type number.');\n  }\n  return new Buffer(base64, 'base64').toString();\n}\n\nfunction decodeBase64WithAtob(base64) {\n  return decodeURIComponent(escape(atob(base64)));\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nif (typeof Buffer !== 'undefined') {\n  if (typeof Buffer.from === 'function') {\n    Converter.prototype.toBase64 = encodeBase64WithBufferFrom;\n  } else {\n    Converter.prototype.toBase64 = encodeBase64WithNewBuffer;\n  }\n} else {\n  Converter.prototype.toBase64 = encodeBase64WithBtoa;\n}\n\nfunction encodeBase64WithBufferFrom() {\n  var json = this.toJSON();\n  return Buffer.from(json, 'utf8').toString('base64');\n}\n\nfunction encodeBase64WithNewBuffer() {\n  var json = this.toJSON();\n  if (typeof json === 'number') {\n    throw new TypeError('The json to encode must not be of type number.');\n  }\n  return new Buffer(json, 'utf8').toString('base64');\n}\n\nfunction encodeBase64WithBtoa() {\n  var json = this.toJSON();\n  return btoa(unescape(encodeURIComponent(json)));\n}\n\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { isEncoded: true });\n};\n\nexports.fromComment = function (comment) {\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n\n  return new Converter(comment, { isEncoded: true, hasComment: true });\n};\n\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n", "var path = require('path')\nvar fs = require('fs')\n\nfunction defaultCheck (dir) {\n  return fs.existsSync(path.join(dir, 'package.json'))\n}\n\nfunction findRoot (start, check) {\n  start = start || module.parent.filename\n  check = check || defaultCheck\n\n  if (typeof start === 'string') {\n    if (start[start.length - 1] !== path.sep) {\n      start += path.sep\n    }\n    start = start.split(path.sep)\n  }\n  if (!start.length) {\n    throw new Error('package.json not found in path')\n  }\n  start.pop()\n  var dir = start.join(path.sep)\n  try {\n    if (check(dir)) {\n      return dir\n    }\n  } catch (e) {}\n  return findRoot(start, check)\n}\n\nmodule.exports = findRoot\n", "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n", "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n", "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n", "export default function shallowEqual<T extends object>(\n  actual: object,\n  expected: T,\n): actual is T {\n  const keys = Object.keys(expected) as (keyof T)[];\n\n  for (const key of keys) {\n    if (\n      // @ts-expect-error maybe we should check whether key exists first\n      actual[key] !== expected[key]\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "const warnings = new Set();\n\nexport default function deprecationWarning(\n  oldName: string,\n  newName: string,\n  prefix: string = \"\",\n) {\n  if (warnings.has(oldName)) return;\n  warnings.add(oldName);\n\n  const { internal, trace } = captureShortStackTrace(1, 2);\n  if (internal) {\n    // If usage comes from an internal package, there is no point in warning because\n    // 1. The new version of the package will already use the new API\n    // 2. When the deprecation will become an error (in a future major version), users\n    //    will have to update every package anyway.\n    return;\n  }\n  console.warn(\n    `${prefix}\\`${oldName}\\` has been deprecated, please migrate to \\`${newName}\\`\\n${trace}`,\n  );\n}\n\nfunction captureShortStackTrace(skip: number, length: number) {\n  const { stackTraceLimit, prepareStackTrace } = Error;\n  let stackTrace: NodeJS.CallSite[];\n  // We add 1 to also take into account this function.\n  Error.stackTraceLimit = 1 + skip + length;\n  Error.prepareStackTrace = function (err, stack) {\n    stackTrace = stack;\n  };\n  new Error().stack;\n  Error.stackTraceLimit = stackTraceLimit;\n  Error.prepareStackTrace = prepareStackTrace;\n\n  if (!stackTrace) return { internal: false, trace: \"\" };\n\n  const shortStackTrace = stackTrace.slice(1 + skip, 1 + skip + length);\n  return {\n    internal: /[\\\\/]@babel[\\\\/]/.test(shortStackTrace[1].getFileName()),\n    trace: shortStackTrace.map(frame => `    at ${frame}`).join(\"\\n\"),\n  };\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/* eslint-disable no-fallthrough */\n\nimport shallowEqual from \"../../utils/shallowEqual\";\nimport type * as t from \"../..\";\nimport deprecationWarning from \"../../utils/deprecationWarning\";\n\ntype Opts<Object> = Partial<{\n  [Prop in keyof Object]: Object[Prop] extends t.Node\n    ? t.Node | Object[Prop]\n    : Object[Prop] extends t.Node[]\n    ? t.Node[] | Object[Prop]\n    : Object[Prop];\n}>;\n\nexport function isArrayExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayExpression> | null,\n): node is t.ArrayExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentExpression> | null,\n): node is t.AssignmentExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BinaryExpression> | null,\n): node is t.BinaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BinaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterpreterDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterpreterDirective> | null,\n): node is t.InterpreterDirective {\n  if (!node) return false;\n\n  if (node.type !== \"InterpreterDirective\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Directive> | null,\n): node is t.Directive {\n  if (!node) return false;\n\n  if (node.type !== \"Directive\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirectiveLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DirectiveLiteral> | null,\n): node is t.DirectiveLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DirectiveLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockStatement> | null,\n): node is t.BlockStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BlockStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBreakStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BreakStatement> | null,\n): node is t.BreakStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BreakStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CallExpression> | null,\n): node is t.CallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"CallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCatchClause(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CatchClause> | null,\n): node is t.CatchClause {\n  if (!node) return false;\n\n  if (node.type !== \"CatchClause\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditionalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ConditionalExpression> | null,\n): node is t.ConditionalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ConditionalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isContinueStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ContinueStatement> | null,\n): node is t.ContinueStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ContinueStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDebuggerStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DebuggerStatement> | null,\n): node is t.DebuggerStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DebuggerStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoWhileStatement> | null,\n): node is t.DoWhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DoWhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyStatement> | null,\n): node is t.EmptyStatement {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionStatement> | null,\n): node is t.ExpressionStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ExpressionStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.File> | null,\n): node is t.File {\n  if (!node) return false;\n\n  if (node.type !== \"File\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForInStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForInStatement> | null,\n): node is t.ForInStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForInStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForStatement> | null,\n): node is t.ForStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionDeclaration> | null,\n): node is t.FunctionDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionExpression> | null,\n): node is t.FunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Identifier> | null,\n): node is t.Identifier {\n  if (!node) return false;\n\n  if (node.type !== \"Identifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IfStatement> | null,\n): node is t.IfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"IfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLabeledStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LabeledStatement> | null,\n): node is t.LabeledStatement {\n  if (!node) return false;\n\n  if (node.type !== \"LabeledStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteral> | null,\n): node is t.StringLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumericLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumericLiteral> | null,\n): node is t.NumericLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NumericLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteral> | null,\n): node is t.NullLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteral> | null,\n): node is t.BooleanLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRegExpLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegExpLiteral> | null,\n): node is t.RegExpLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"RegExpLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLogicalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LogicalExpression> | null,\n): node is t.LogicalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"LogicalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MemberExpression> | null,\n): node is t.MemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"MemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNewExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NewExpression> | null,\n): node is t.NewExpression {\n  if (!node) return false;\n\n  if (node.type !== \"NewExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProgram(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Program> | null,\n): node is t.Program {\n  if (!node) return false;\n\n  if (node.type !== \"Program\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectExpression> | null,\n): node is t.ObjectExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMethod> | null,\n): node is t.ObjectMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectProperty> | null,\n): node is t.ObjectProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRestElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestElement> | null,\n): node is t.RestElement {\n  if (!node) return false;\n\n  if (node.type !== \"RestElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isReturnStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ReturnStatement> | null,\n): node is t.ReturnStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ReturnStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSequenceExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SequenceExpression> | null,\n): node is t.SequenceExpression {\n  if (!node) return false;\n\n  if (node.type !== \"SequenceExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isParenthesizedExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ParenthesizedExpression> | null,\n): node is t.ParenthesizedExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ParenthesizedExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchCase(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchCase> | null,\n): node is t.SwitchCase {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchCase\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchStatement> | null,\n): node is t.SwitchStatement {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisExpression> | null,\n): node is t.ThisExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ThisExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThrowStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThrowStatement> | null,\n): node is t.ThrowStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ThrowStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTryStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TryStatement> | null,\n): node is t.TryStatement {\n  if (!node) return false;\n\n  if (node.type !== \"TryStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryExpression> | null,\n): node is t.UnaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UnaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUpdateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UpdateExpression> | null,\n): node is t.UpdateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UpdateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclaration> | null,\n): node is t.VariableDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclarator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclarator> | null,\n): node is t.VariableDeclarator {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclarator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WhileStatement> | null,\n): node is t.WhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWithStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WithStatement> | null,\n): node is t.WithStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WithStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentPattern> | null,\n): node is t.AssignmentPattern {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayPattern> | null,\n): node is t.ArrayPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrowFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrowFunctionExpression> | null,\n): node is t.ArrowFunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrowFunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassBody> | null,\n): node is t.ClassBody {\n  if (!node) return false;\n\n  if (node.type !== \"ClassBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassExpression> | null,\n): node is t.ClassExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ClassExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassDeclaration> | null,\n): node is t.ClassDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ClassDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportAllDeclaration> | null,\n): node is t.ExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultDeclaration> | null,\n): node is t.ExportDefaultDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamedDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamedDeclaration> | null,\n): node is t.ExportNamedDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamedDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportSpecifier> | null,\n): node is t.ExportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForOfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForOfStatement> | null,\n): node is t.ForOfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForOfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDeclaration> | null,\n): node is t.ImportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDefaultSpecifier> | null,\n): node is t.ImportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportNamespaceSpecifier> | null,\n): node is t.ImportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportSpecifier> | null,\n): node is t.ImportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMetaProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MetaProperty> | null,\n): node is t.MetaProperty {\n  if (!node) return false;\n\n  if (node.type !== \"MetaProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassMethod> | null,\n): node is t.ClassMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectPattern> | null,\n): node is t.ObjectPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSpreadElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadElement> | null,\n): node is t.SpreadElement {\n  if (!node) return false;\n\n  if (node.type !== \"SpreadElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSuper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Super> | null,\n): node is t.Super {\n  if (!node) return false;\n\n  if (node.type !== \"Super\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTaggedTemplateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TaggedTemplateExpression> | null,\n): node is t.TaggedTemplateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TaggedTemplateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateElement> | null,\n): node is t.TemplateElement {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateLiteral> | null,\n): node is t.TemplateLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isYieldExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.YieldExpression> | null,\n): node is t.YieldExpression {\n  if (!node) return false;\n\n  if (node.type !== \"YieldExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAwaitExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AwaitExpression> | null,\n): node is t.AwaitExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AwaitExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImport(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Import> | null,\n): node is t.Import {\n  if (!node) return false;\n\n  if (node.type !== \"Import\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBigIntLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BigIntLiteral> | null,\n): node is t.BigIntLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BigIntLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamespaceSpecifier> | null,\n): node is t.ExportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalMemberExpression> | null,\n): node is t.OptionalMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalCallExpression> | null,\n): node is t.OptionalCallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalCallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassProperty> | null,\n): node is t.ClassProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassAccessorProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassAccessorProperty> | null,\n): node is t.ClassAccessorProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassAccessorProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateProperty> | null,\n): node is t.ClassPrivateProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateMethod> | null,\n): node is t.ClassPrivateMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivateName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PrivateName> | null,\n): node is t.PrivateName {\n  if (!node) return false;\n\n  if (node.type !== \"PrivateName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStaticBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StaticBlock> | null,\n): node is t.StaticBlock {\n  if (!node) return false;\n\n  if (node.type !== \"StaticBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAnyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AnyTypeAnnotation> | null,\n): node is t.AnyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"AnyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayTypeAnnotation> | null,\n): node is t.ArrayTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanTypeAnnotation> | null,\n): node is t.BooleanTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteralTypeAnnotation> | null,\n): node is t.BooleanLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteralTypeAnnotation> | null,\n): node is t.NullLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassImplements(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassImplements> | null,\n): node is t.ClassImplements {\n  if (!node) return false;\n\n  if (node.type !== \"ClassImplements\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareClass> | null,\n): node is t.DeclareClass {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareClass\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareFunction> | null,\n): node is t.DeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareInterface(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareInterface> | null,\n): node is t.DeclareInterface {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareInterface\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModule(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModule> | null,\n): node is t.DeclareModule {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModule\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModuleExports(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModuleExports> | null,\n): node is t.DeclareModuleExports {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModuleExports\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareTypeAlias> | null,\n): node is t.DeclareTypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareTypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareOpaqueType> | null,\n): node is t.DeclareOpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareOpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareVariable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareVariable> | null,\n): node is t.DeclareVariable {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareVariable\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportDeclaration> | null,\n): node is t.DeclareExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportAllDeclaration> | null,\n): node is t.DeclareExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclaredPredicate> | null,\n): node is t.DeclaredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"DeclaredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExistsTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExistsTypeAnnotation> | null,\n): node is t.ExistsTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ExistsTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeAnnotation> | null,\n): node is t.FunctionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeParam(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeParam> | null,\n): node is t.FunctionTypeParam {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeParam\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isGenericTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.GenericTypeAnnotation> | null,\n): node is t.GenericTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"GenericTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInferredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InferredPredicate> | null,\n): node is t.InferredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"InferredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceExtends(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceExtends> | null,\n): node is t.InterfaceExtends {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceExtends\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceDeclaration> | null,\n): node is t.InterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceTypeAnnotation> | null,\n): node is t.InterfaceTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIntersectionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IntersectionTypeAnnotation> | null,\n): node is t.IntersectionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"IntersectionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMixedTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MixedTypeAnnotation> | null,\n): node is t.MixedTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"MixedTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyTypeAnnotation> | null,\n): node is t.EmptyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullableTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullableTypeAnnotation> | null,\n): node is t.NullableTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullableTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteralTypeAnnotation> | null,\n): node is t.NumberLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberTypeAnnotation> | null,\n): node is t.NumberTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeAnnotation> | null,\n): node is t.ObjectTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeInternalSlot(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeInternalSlot> | null,\n): node is t.ObjectTypeInternalSlot {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeInternalSlot\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeCallProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeCallProperty> | null,\n): node is t.ObjectTypeCallProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeCallProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeIndexer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeIndexer> | null,\n): node is t.ObjectTypeIndexer {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeIndexer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeProperty> | null,\n): node is t.ObjectTypeProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeSpreadProperty> | null,\n): node is t.ObjectTypeSpreadProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeSpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OpaqueType> | null,\n): node is t.OpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"OpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isQualifiedTypeIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.QualifiedTypeIdentifier> | null,\n): node is t.QualifiedTypeIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"QualifiedTypeIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteralTypeAnnotation> | null,\n): node is t.StringLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringTypeAnnotation> | null,\n): node is t.StringTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSymbolTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SymbolTypeAnnotation> | null,\n): node is t.SymbolTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"SymbolTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisTypeAnnotation> | null,\n): node is t.ThisTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ThisTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleTypeAnnotation> | null,\n): node is t.TupleTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TupleTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeofTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeofTypeAnnotation> | null,\n): node is t.TypeofTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeofTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAlias> | null,\n): node is t.TypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAnnotation> | null,\n): node is t.TypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeCastExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeCastExpression> | null,\n): node is t.TypeCastExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TypeCastExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameter> | null,\n): node is t.TypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterDeclaration> | null,\n): node is t.TypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterInstantiation> | null,\n): node is t.TypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnionTypeAnnotation> | null,\n): node is t.UnionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"UnionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariance(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Variance> | null,\n): node is t.Variance {\n  if (!node) return false;\n\n  if (node.type !== \"Variance\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVoidTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VoidTypeAnnotation> | null,\n): node is t.VoidTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"VoidTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDeclaration> | null,\n): node is t.EnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanBody> | null,\n): node is t.EnumBooleanBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberBody> | null,\n): node is t.EnumNumberBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringBody> | null,\n): node is t.EnumStringBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumSymbolBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumSymbolBody> | null,\n): node is t.EnumSymbolBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumSymbolBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanMember> | null,\n): node is t.EnumBooleanMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberMember> | null,\n): node is t.EnumNumberMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringMember> | null,\n): node is t.EnumStringMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDefaultedMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDefaultedMember> | null,\n): node is t.EnumDefaultedMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDefaultedMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IndexedAccessType> | null,\n): node is t.IndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"IndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalIndexedAccessType> | null,\n): node is t.OptionalIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXAttribute> | null,\n): node is t.JSXAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingElement> | null,\n): node is t.JSXClosingElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXElement> | null,\n): node is t.JSXElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXEmptyExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXEmptyExpression> | null,\n): node is t.JSXEmptyExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXEmptyExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXExpressionContainer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXExpressionContainer> | null,\n): node is t.JSXExpressionContainer {\n  if (!node) return false;\n\n  if (node.type !== \"JSXExpressionContainer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadChild(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadChild> | null,\n): node is t.JSXSpreadChild {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadChild\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXIdentifier> | null,\n): node is t.JSXIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"JSXIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXMemberExpression> | null,\n): node is t.JSXMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXNamespacedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXNamespacedName> | null,\n): node is t.JSXNamespacedName {\n  if (!node) return false;\n\n  if (node.type !== \"JSXNamespacedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningElement> | null,\n): node is t.JSXOpeningElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadAttribute> | null,\n): node is t.JSXSpreadAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXText(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXText> | null,\n): node is t.JSXText {\n  if (!node) return false;\n\n  if (node.type !== \"JSXText\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXFragment> | null,\n): node is t.JSXFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningFragment> | null,\n): node is t.JSXOpeningFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingFragment> | null,\n): node is t.JSXClosingFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Noop> | null,\n): node is t.Noop {\n  if (!node) return false;\n\n  if (node.type !== \"Noop\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Placeholder> | null,\n): node is t.Placeholder {\n  if (!node) return false;\n\n  if (node.type !== \"Placeholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isV8IntrinsicIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.V8IntrinsicIdentifier> | null,\n): node is t.V8IntrinsicIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"V8IntrinsicIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArgumentPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArgumentPlaceholder> | null,\n): node is t.ArgumentPlaceholder {\n  if (!node) return false;\n\n  if (node.type !== \"ArgumentPlaceholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBindExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BindExpression> | null,\n): node is t.BindExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BindExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportAttribute> | null,\n): node is t.ImportAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"ImportAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecorator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Decorator> | null,\n): node is t.Decorator {\n  if (!node) return false;\n\n  if (node.type !== \"Decorator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoExpression> | null,\n): node is t.DoExpression {\n  if (!node) return false;\n\n  if (node.type !== \"DoExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultSpecifier> | null,\n): node is t.ExportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRecordExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RecordExpression> | null,\n): node is t.RecordExpression {\n  if (!node) return false;\n\n  if (node.type !== \"RecordExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleExpression> | null,\n): node is t.TupleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TupleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecimalLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DecimalLiteral> | null,\n): node is t.DecimalLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DecimalLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleExpression> | null,\n): node is t.ModuleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ModuleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TopicReference> | null,\n): node is t.TopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"TopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineTopicExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineTopicExpression> | null,\n): node is t.PipelineTopicExpression {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineTopicExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineBareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineBareFunction> | null,\n): node is t.PipelineBareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineBareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelinePrimaryTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelinePrimaryTopicReference> | null,\n): node is t.PipelinePrimaryTopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"PipelinePrimaryTopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParameterProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParameterProperty> | null,\n): node is t.TSParameterProperty {\n  if (!node) return false;\n\n  if (node.type !== \"TSParameterProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareFunction> | null,\n): node is t.TSDeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareMethod> | null,\n): node is t.TSDeclareMethod {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSQualifiedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSQualifiedName> | null,\n): node is t.TSQualifiedName {\n  if (!node) return false;\n\n  if (node.type !== \"TSQualifiedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSCallSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSCallSignatureDeclaration> | null,\n): node is t.TSCallSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSCallSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructSignatureDeclaration> | null,\n): node is t.TSConstructSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSPropertySignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSPropertySignature> | null,\n): node is t.TSPropertySignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSPropertySignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMethodSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMethodSignature> | null,\n): node is t.TSMethodSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSMethodSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexSignature> | null,\n): node is t.TSIndexSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAnyKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAnyKeyword> | null,\n): node is t.TSAnyKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSAnyKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBooleanKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBooleanKeyword> | null,\n): node is t.TSBooleanKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBooleanKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBigIntKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBigIntKeyword> | null,\n): node is t.TSBigIntKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBigIntKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntrinsicKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntrinsicKeyword> | null,\n): node is t.TSIntrinsicKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntrinsicKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNeverKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNeverKeyword> | null,\n): node is t.TSNeverKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNeverKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNullKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNullKeyword> | null,\n): node is t.TSNullKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNullKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNumberKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNumberKeyword> | null,\n): node is t.TSNumberKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNumberKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSObjectKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSObjectKeyword> | null,\n): node is t.TSObjectKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSObjectKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSStringKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSStringKeyword> | null,\n): node is t.TSStringKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSStringKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSymbolKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSymbolKeyword> | null,\n): node is t.TSSymbolKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSSymbolKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUndefinedKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUndefinedKeyword> | null,\n): node is t.TSUndefinedKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUndefinedKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnknownKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnknownKeyword> | null,\n): node is t.TSUnknownKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnknownKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSVoidKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSVoidKeyword> | null,\n): node is t.TSVoidKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSVoidKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSThisType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSThisType> | null,\n): node is t.TSThisType {\n  if (!node) return false;\n\n  if (node.type !== \"TSThisType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSFunctionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSFunctionType> | null,\n): node is t.TSFunctionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSFunctionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructorType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructorType> | null,\n): node is t.TSConstructorType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructorType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeReference> | null,\n): node is t.TSTypeReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypePredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypePredicate> | null,\n): node is t.TSTypePredicate {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypePredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeQuery(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeQuery> | null,\n): node is t.TSTypeQuery {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeQuery\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeLiteral> | null,\n): node is t.TSTypeLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSArrayType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSArrayType> | null,\n): node is t.TSArrayType {\n  if (!node) return false;\n\n  if (node.type !== \"TSArrayType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTupleType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTupleType> | null,\n): node is t.TSTupleType {\n  if (!node) return false;\n\n  if (node.type !== \"TSTupleType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSOptionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSOptionalType> | null,\n): node is t.TSOptionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSOptionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSRestType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSRestType> | null,\n): node is t.TSRestType {\n  if (!node) return false;\n\n  if (node.type !== \"TSRestType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamedTupleMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamedTupleMember> | null,\n): node is t.TSNamedTupleMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamedTupleMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnionType> | null,\n): node is t.TSUnionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntersectionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntersectionType> | null,\n): node is t.TSIntersectionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntersectionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConditionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConditionalType> | null,\n): node is t.TSConditionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConditionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInferType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInferType> | null,\n): node is t.TSInferType {\n  if (!node) return false;\n\n  if (node.type !== \"TSInferType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParenthesizedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParenthesizedType> | null,\n): node is t.TSParenthesizedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSParenthesizedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeOperator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeOperator> | null,\n): node is t.TSTypeOperator {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeOperator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexedAccessType> | null,\n): node is t.TSIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMappedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMappedType> | null,\n): node is t.TSMappedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSMappedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSLiteralType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSLiteralType> | null,\n): node is t.TSLiteralType {\n  if (!node) return false;\n\n  if (node.type !== \"TSLiteralType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExpressionWithTypeArguments(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExpressionWithTypeArguments> | null,\n): node is t.TSExpressionWithTypeArguments {\n  if (!node) return false;\n\n  if (node.type !== \"TSExpressionWithTypeArguments\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceDeclaration> | null,\n): node is t.TSInterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceBody> | null,\n): node is t.TSInterfaceBody {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAliasDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAliasDeclaration> | null,\n): node is t.TSTypeAliasDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAliasDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInstantiationExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInstantiationExpression> | null,\n): node is t.TSInstantiationExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSInstantiationExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAsExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAsExpression> | null,\n): node is t.TSAsExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSAsExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSatisfiesExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSatisfiesExpression> | null,\n): node is t.TSSatisfiesExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSSatisfiesExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAssertion(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAssertion> | null,\n): node is t.TSTypeAssertion {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAssertion\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumDeclaration> | null,\n): node is t.TSEnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumMember> | null,\n): node is t.TSEnumMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleDeclaration> | null,\n): node is t.TSModuleDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleBlock> | null,\n): node is t.TSModuleBlock {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportType> | null,\n): node is t.TSImportType {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportEqualsDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportEqualsDeclaration> | null,\n): node is t.TSImportEqualsDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportEqualsDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExternalModuleReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExternalModuleReference> | null,\n): node is t.TSExternalModuleReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSExternalModuleReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNonNullExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNonNullExpression> | null,\n): node is t.TSNonNullExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSNonNullExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExportAssignment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExportAssignment> | null,\n): node is t.TSExportAssignment {\n  if (!node) return false;\n\n  if (node.type !== \"TSExportAssignment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamespaceExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamespaceExportDeclaration> | null,\n): node is t.TSNamespaceExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamespaceExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAnnotation> | null,\n): node is t.TSTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterInstantiation> | null,\n): node is t.TSTypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterDeclaration> | null,\n): node is t.TSTypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameter> | null,\n): node is t.TSTypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStandardized(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Standardized> | null,\n): node is t.Standardized {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"InterpreterDirective\":\n    case \"Directive\":\n    case \"DirectiveLiteral\":\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"CallExpression\":\n    case \"CatchClause\":\n    case \"ConditionalExpression\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"File\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"Program\":\n    case \"ObjectExpression\":\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"RestElement\":\n    case \"ReturnStatement\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"SwitchCase\":\n    case \"SwitchStatement\":\n    case \"ThisExpression\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"VariableDeclaration\":\n    case \"VariableDeclarator\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassBody\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ExportSpecifier\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"MetaProperty\":\n    case \"ClassMethod\":\n    case \"ObjectPattern\":\n    case \"SpreadElement\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateElement\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"ExportNamespaceSpecifier\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n    case \"StaticBlock\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Identifier\":\n        case \"StringLiteral\":\n        case \"BlockStatement\":\n        case \"ClassBody\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Expression> | null,\n): node is t.Expression {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"CallExpression\":\n    case \"ConditionalExpression\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"ObjectExpression\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"ThisExpression\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"MetaProperty\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"TypeCastExpression\":\n    case \"JSXElement\":\n    case \"JSXFragment\":\n    case \"BindExpression\":\n    case \"DoExpression\":\n    case \"RecordExpression\":\n    case \"TupleExpression\":\n    case \"DecimalLiteral\":\n    case \"ModuleExpression\":\n    case \"TopicReference\":\n    case \"PipelineTopicExpression\":\n    case \"PipelineBareFunction\":\n    case \"PipelinePrimaryTopicReference\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Expression\":\n        case \"Identifier\":\n        case \"StringLiteral\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinary(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Binary> | null,\n): node is t.Binary {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isScopable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Scopable> | null,\n): node is t.Scopable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockParent> | null,\n): node is t.BlockParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Block> | null,\n): node is t.Block {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"Program\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Statement> | null,\n): node is t.Statement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"ReturnStatement\":\n    case \"SwitchStatement\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"VariableDeclaration\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Statement\":\n        case \"Declaration\":\n        case \"BlockStatement\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTerminatorless(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Terminatorless> | null,\n): node is t.Terminatorless {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCompletionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CompletionStatement> | null,\n): node is t.CompletionStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditional(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Conditional> | null,\n): node is t.Conditional {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Loop> | null,\n): node is t.Loop {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"WhileStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.While> | null,\n): node is t.While {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"WhileStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionWrapper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionWrapper> | null,\n): node is t.ExpressionWrapper {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExpressionStatement\":\n    case \"ParenthesizedExpression\":\n    case \"TypeCastExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.For> | null,\n): node is t.For {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForXStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForXStatement> | null,\n): node is t.ForXStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Function> | null,\n): node is t.Function {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionParent> | null,\n): node is t.FunctionParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPureish(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pureish> | null,\n): node is t.Pureish {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"ArrowFunctionExpression\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Declaration> | null,\n): node is t.Declaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"VariableDeclaration\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Declaration\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPatternLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PatternLike> | null,\n): node is t.PatternLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLVal(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LVal> | null,\n): node is t.LVal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSParameterProperty\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEntityName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEntityName> | null,\n): node is t.TSEntityName {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"TSQualifiedName\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Identifier\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Literal> | null,\n): node is t.Literal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"TemplateLiteral\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImmutable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Immutable> | null,\n): node is t.Immutable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"BigIntLiteral\":\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXOpeningElement\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUserWhitespacable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UserWhitespacable> | null,\n): node is t.UserWhitespacable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Method> | null,\n): node is t.Method {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMember> | null,\n): node is t.ObjectMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Property> | null,\n): node is t.Property {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectProperty\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryLike> | null,\n): node is t.UnaryLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pattern> | null,\n): node is t.Pattern {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Pattern\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Class> | null,\n): node is t.Class {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportOrExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportOrExportDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDeclaration> | null,\n): node is t.ExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleSpecifier> | null,\n): node is t.ModuleSpecifier {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportSpecifier\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAccessor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Accessor> | null,\n): node is t.Accessor {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassAccessorProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Private> | null,\n): node is t.Private {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlow(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Flow> | null,\n): node is t.Flow {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ClassImplements\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"DeclaredPredicate\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"FunctionTypeParam\":\n    case \"GenericTypeAnnotation\":\n    case \"InferredPredicate\":\n    case \"InterfaceExtends\":\n    case \"InterfaceDeclaration\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n    case \"OpaqueType\":\n    case \"QualifiedTypeIdentifier\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"TypeAlias\":\n    case \"TypeAnnotation\":\n    case \"TypeCastExpression\":\n    case \"TypeParameter\":\n    case \"TypeParameterDeclaration\":\n    case \"TypeParameterInstantiation\":\n    case \"UnionTypeAnnotation\":\n    case \"Variance\":\n    case \"VoidTypeAnnotation\":\n    case \"EnumDeclaration\":\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowType> | null,\n): node is t.FlowType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"GenericTypeAnnotation\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"UnionTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowBaseAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowBaseAnnotation> | null,\n): node is t.FlowBaseAnnotation {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowDeclaration> | null,\n): node is t.FlowDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowPredicate> | null,\n): node is t.FlowPredicate {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclaredPredicate\":\n    case \"InferredPredicate\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBody> | null,\n): node is t.EnumBody {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumMember> | null,\n): node is t.EnumMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSX(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSX> | null,\n): node is t.JSX {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXEmptyExpression\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXIdentifier\":\n    case \"JSXMemberExpression\":\n    case \"JSXNamespacedName\":\n    case \"JSXOpeningElement\":\n    case \"JSXSpreadAttribute\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMiscellaneous(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Miscellaneous> | null,\n): node is t.Miscellaneous {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Noop\":\n    case \"Placeholder\":\n    case \"V8IntrinsicIdentifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeScript(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeScript> | null,\n): node is t.TypeScript {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSParameterProperty\":\n    case \"TSDeclareFunction\":\n    case \"TSDeclareMethod\":\n    case \"TSQualifiedName\":\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSNamedTupleMember\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSInterfaceBody\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSEnumDeclaration\":\n    case \"TSEnumMember\":\n    case \"TSModuleDeclaration\":\n    case \"TSModuleBlock\":\n    case \"TSImportType\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExternalModuleReference\":\n    case \"TSNonNullExpression\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n    case \"TSTypeAnnotation\":\n    case \"TSTypeParameterInstantiation\":\n    case \"TSTypeParameterDeclaration\":\n    case \"TSTypeParameter\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeElement> | null,\n): node is t.TSTypeElement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSType> | null,\n): node is t.TSType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSImportType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBaseType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBaseType> | null,\n): node is t.TSBaseType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSLiteralType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isNumericLiteral`\n */\nexport function isNumberLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteral> | null,\n): boolean {\n  deprecationWarning(\"isNumberLiteral\", \"isNumericLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRegExpLiteral`\n */\nexport function isRegexLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegexLiteral> | null,\n): boolean {\n  deprecationWarning(\"isRegexLiteral\", \"isRegExpLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"RegexLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRestElement`\n */\nexport function isRestProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestProperty> | null,\n): boolean {\n  deprecationWarning(\"isRestProperty\", \"isRestElement\");\n  if (!node) return false;\n\n  if (node.type !== \"RestProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isSpreadElement`\n */\nexport function isSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadProperty> | null,\n): boolean {\n  deprecationWarning(\"isSpreadProperty\", \"isSpreadElement\");\n  if (!node) return false;\n\n  if (node.type !== \"SpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isImportOrExportDeclaration`\n */\nexport function isModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  deprecationWarning(\"isModuleDeclaration\", \"isImportOrExportDeclaration\");\n  return isImportOrExportDeclaration(node, opts);\n}\n", "import {\n  isIdentifier,\n  isMemberExpression,\n  isStringLiteral,\n  isThisExpression,\n} from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Determines whether or not the input node `member` matches the\n * input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function matchesPattern(\n  member: t.Node | null | undefined,\n  match: string | string[],\n  allowPartial?: boolean,\n): boolean {\n  // not a member expression\n  if (!isMemberExpression(member)) return false;\n\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n\n  let node;\n  for (node = member; isMemberExpression(node); node = node.object) {\n    nodes.push(node.property);\n  }\n  nodes.push(node);\n\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n    if (isIdentifier(node)) {\n      value = node.name;\n    } else if (isStringLiteral(node)) {\n      value = node.value;\n    } else if (isThisExpression(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}\n", "import matchesPattern from \"./matchesPattern\";\nimport type * as t from \"..\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n", "import buildMatchMemberExpression from \"../buildMatchMemberExpression\";\n\nconst isReactComponent = buildMatchMemberExpression(\"React.Component\");\n\nexport default isReactComponent;\n", "export default function isCompatTag(tagName?: string): boolean {\n  // Must start with a lowercase ASCII letter\n  return !!tagName && /^[a-z]/.test(tagName);\n}\n", "'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n", "import { FLIPPED_ALIAS_KEYS, ALIAS_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function isType<T extends t.Node[\"type\"]>(\n  nodeType: string,\n  targetType: T,\n): nodeType is T;\n\nexport default function isType(\n  nodeType: string | null | undefined,\n  targetType: string,\n): boolean;\n\n/**\n * Test if a `nodeType` is a `targetType` or if `targetType` is an alias of `nodeType`.\n */\nexport default function isType(nodeType: string, targetType: string): boolean {\n  if (nodeType === targetType) return true;\n\n  // This is a fast-path. If the test above failed, but an alias key is found, then the\n  // targetType was a primary node type, so there's no need to check the aliases.\n  // @ts-expect-error targetType may not index ALIAS_KEYS\n  if (ALIAS_KEYS[targetType]) return false;\n\n  const aliases: Array<string> | undefined = FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}\n", "import { PLACEHOLDERS_ALIAS } from \"../definitions\";\n\n/**\n * Test if a `placeholderType` is a `targetType` or if `targetType` is an alias of `placeholderType`.\n */\nexport default function isPlaceholderType(\n  placeholderType: string,\n  targetType: string,\n): boolean {\n  if (placeholderType === targetType) return true;\n\n  const aliases: Array<string> | undefined =\n    PLACEHOLDERS_ALIAS[placeholderType];\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}\n", "import shallowEqual from \"../utils/shallowEqual\";\nimport isType from \"./isType\";\nimport isPlaceholderType from \"./isPlaceholderType\";\nimport { FLIPPED_ALIAS_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function is<T extends t.Node[\"type\"]>(\n  type: T,\n  node: t.Node | null | undefined,\n  opts?: undefined,\n): node is Extract<t.Node, { type: T }>;\n\nexport default function is<\n  T extends t.Node[\"type\"],\n  P extends Extract<t.Node, { type: T }>,\n>(type: T, n: t.Node | null | undefined, required: Partial<P>): n is P;\n\nexport default function is<P extends t.Node>(\n  type: string,\n  node: t.Node | null | undefined,\n  opts: Partial<P>,\n): node is P;\n\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node;\n/**\n * Returns whether `node` is of given `type`.\n *\n * For better performance, use this instead of `is[Type]` when `type` is unknown.\n */\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node {\n  if (!node) return false;\n\n  const matches = isType(node.type, type);\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in FLIPPED_ALIAS_KEYS) {\n      // We can only return true if the placeholder doesn't replace a real node,\n      // but it replaces a category of nodes (an alias).\n      //\n      // t.is(\"Identifier\", node) gives some guarantees about node's shape, so we\n      // can't say that Placeholder(expectedNode: \"Identifier\") is an identifier\n      // because it doesn't have the same properties.\n      // On the other hand, t.is(\"Expression\", node) doesn't say anything about\n      // the shape of node because Expression can be many different nodes: we can,\n      // and should, safely report expression placeholders as Expressions.\n      return isPlaceholderType(node.expectedNode, type);\n    }\n    return false;\n  }\n\n  if (typeof opts === \"undefined\") {\n    return true;\n  } else {\n    return shallowEqual(node, opts);\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "export {\n  isIdentifierName,\n  isIdentifierChar,\n  isIdentifierStart,\n} from \"./identifier\";\nexport {\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"./keyword\";\n", "import {\n  isIdentifierName,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\nexport default function isValidIdentifier(\n  name: string,\n  reserved: boolean = true,\n): boolean {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    // \"await\" is invalid in module, valid in script; better be safe (see #4952)\n    if (isKeyword(name) || isStrictReservedWord(name, true)) {\n      return false;\n    }\n  }\n\n  return isIdentifierName(name);\n}\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      );\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = { pos, lineStart, curLine };\n      } else {\n        out += res.ch;\n      }\n      ({ pos, lineStart, curLine } = res);\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return process.env.BABEL_8_BREAKING\n    ? { pos, str: out, firstInvalidLoc, lineStart, curLine }\n    : {\n        pos,\n        str: out,\n        firstInvalidLoc,\n        lineStart,\n        curLine,\n        containsInvalid: !!firstInvalidLoc,\n      };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n    /* bailOnError */ !throwOnInvalid,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n  bailOnError: boolean,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        if (bailOnError) return { n: null, pos };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        if (bailOnError) return { n: null, pos };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && bailOnError) {\n        return { n: null, pos };\n      } else if (\n        val <= 9 &&\n        errors.invalidDigit(pos, lineStart, curLine, radix)\n      ) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "export const STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexport const FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexport const FOR_INIT_KEYS = [\"left\", \"init\"];\nexport const COMMENT_KEYS = [\n  \"leadingComments\",\n  \"trailingComments\",\n  \"innerComments\",\n] as const;\n\nexport const LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexport const UPDATE_OPERATORS = [\"++\", \"--\"];\n\nexport const BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexport const EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexport const COMPARISON_BINARY_OPERATORS = [\n  ...EQUALITY_BINARY_OPERATORS,\n  \"in\",\n  \"instanceof\",\n];\nexport const BOOLEAN_BINARY_OPERATORS = [\n  ...COMPARISON_BINARY_OPERATORS,\n  ...BOOLEAN_NUMBER_BINARY_OPERATORS,\n];\nexport const NUMBER_BINARY_OPERATORS = [\n  \"-\",\n  \"/\",\n  \"%\",\n  \"*\",\n  \"**\",\n  \"&\",\n  \"|\",\n  \">>\",\n  \">>>\",\n  \"<<\",\n  \"^\",\n];\nexport const BINARY_OPERATORS = [\n  \"+\",\n  ...NUMBER_BINARY_OPERATORS,\n  ...BOOLEAN_BINARY_OPERATORS,\n  \"|>\",\n];\n\nexport const ASSIGNMENT_OPERATORS = [\n  \"=\",\n  \"+=\",\n  ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"),\n  ...LOGICAL_OPERATORS.map(op => op + \"=\"),\n];\n\nexport const BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexport const NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexport const STRING_UNARY_OPERATORS = [\"typeof\"];\nexport const UNARY_OPERATORS = [\n  \"void\",\n  \"throw\",\n  ...BOOLEAN_UNARY_OPERATORS,\n  ...NUMBER_UNARY_OPERATORS,\n  ...STRING_UNARY_OPERATORS,\n];\n\nexport const INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"],\n} as const;\n\nexport const BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexport const NOT_LOCAL_BINDING = Symbol.for(\n  \"should not be considered a local binding\",\n);\n", "import is from \"../validators/is\";\nimport { validateField, validateChild } from \"../validators/validate\";\nimport type * as t from \"..\";\n\nexport const VISITOR_KEYS: Record<string, string[]> = {};\nexport const ALIAS_KEYS: Partial<Record<NodeTypesWithoutComment, string[]>> =\n  {};\nexport const FLIPPED_ALIAS_KEYS: Record<string, NodeTypesWithoutComment[]> = {};\nexport const NODE_FIELDS: Record<string, FieldDefinitions> = {};\nexport const BUILDER_KEYS: Record<string, string[]> = {};\nexport const DEPRECATED_KEYS: Record<string, NodeTypesWithoutComment> = {};\nexport const NODE_PARENT_VALIDATIONS: Record<string, Validator> = {};\n\nfunction getType(val: any) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\ntype NodeTypesWithoutComment = t.Node[\"type\"] | keyof t.Aliases;\n\ntype NodeTypes = NodeTypesWithoutComment | t.Comment[\"type\"];\n\ntype PrimitiveTypes = ReturnType<typeof getType>;\n\ntype FieldDefinitions = {\n  [x: string]: FieldOptions;\n};\n\ntype DefineTypeOpts = {\n  fields?: FieldDefinitions;\n  visitor?: Array<string>;\n  aliases?: Array<string>;\n  builder?: Array<string>;\n  inherits?: NodeTypes;\n  deprecatedAlias?: string;\n  validate?: Validator;\n};\n\nexport type Validator = (\n  | { type: PrimitiveTypes }\n  | { each: Validator }\n  | { chainOf: Validator[] }\n  | { oneOf: any[] }\n  | { oneOfNodeTypes: NodeTypes[] }\n  | { oneOfNodeOrValueTypes: (NodeTypes | PrimitiveTypes)[] }\n  | { shapeOf: { [x: string]: FieldOptions } }\n  | {}\n) &\n  ((node: t.Node, key: string, val: any) => void);\n\nexport type FieldOptions = {\n  default?: string | number | boolean | [];\n  optional?: boolean;\n  deprecated?: boolean;\n  validate?: Validator;\n};\n\nexport function validate(validate: Validator): FieldOptions {\n  return { validate };\n}\n\nexport function typeIs(typeName: NodeTypes | NodeTypes[]) {\n  return typeof typeName === \"string\"\n    ? assertNodeType(typeName)\n    : assertNodeType(...typeName);\n}\n\nexport function validateType(typeName: NodeTypes | NodeTypes[]) {\n  return validate(typeIs(typeName));\n}\n\nexport function validateOptional(validate: Validator): FieldOptions {\n  return { validate, optional: true };\n}\n\nexport function validateOptionalType(\n  typeName: NodeTypes | NodeTypes[],\n): FieldOptions {\n  return { validate: typeIs(typeName), optional: true };\n}\n\nexport function arrayOf(elementType: Validator): Validator {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nexport function arrayOfType(typeName: NodeTypes | NodeTypes[]) {\n  return arrayOf(typeIs(typeName));\n}\n\nexport function validateArrayOfType(typeName: NodeTypes | NodeTypes[]) {\n  return validate(arrayOfType(typeName));\n}\n\nexport function assertEach(callback: Validator): Validator {\n  function validator(node: t.Node, key: string, val: any) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      if (process.env.BABEL_TYPES_8_BREAKING) validateChild(node, subkey, v);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nexport function assertOneOf(...values: Array<any>): Validator {\n  function validate(node: any, key: string, val: any) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(\n        `Property ${key} expected value to be one of ${JSON.stringify(\n          values,\n        )} but got ${JSON.stringify(val)}`,\n      );\n    }\n  }\n\n  validate.oneOf = values;\n\n  return validate;\n}\n\nexport function assertNodeType(...types: NodeTypes[]): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nexport function assertNodeOrValueType(\n  ...types: (NodeTypes | PrimitiveTypes)[]\n): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (getType(val) === type || is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nexport function assertValueType(type: PrimitiveTypes): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} expected type of ${type} but got ${getType(val)}`,\n      );\n    }\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nexport function assertShape(shape: { [x: string]: FieldOptions }): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const errors = [];\n    for (const property of Object.keys(shape)) {\n      try {\n        validateField(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n        throw error;\n      }\n    }\n    if (errors.length) {\n      throw new TypeError(\n        `Property ${key} of ${\n          node.type\n        } expected to have the following:\\n${errors.join(\"\\n\")}`,\n      );\n    }\n  }\n\n  validate.shapeOf = shape;\n\n  return validate;\n}\n\nexport function assertOptionalChainStart(): Validator {\n  function validate(node: t.Node) {\n    let current = node;\n    while (node) {\n      const { type } = current;\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(\n      `Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${current?.type}`,\n    );\n  }\n\n  return validate;\n}\n\nexport function chain(...fns: Array<Validator>): Validator {\n  function validate(...args: Parameters<Validator>) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n  validate.chainOf = fns;\n\n  if (\n    fns.length >= 2 &&\n    \"type\" in fns[0] &&\n    fns[0].type === \"array\" &&\n    !(\"each\" in fns[1])\n  ) {\n    throw new Error(\n      `An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`,\n    );\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = [\n  \"aliases\",\n  \"builder\",\n  \"deprecatedAlias\",\n  \"fields\",\n  \"inherits\",\n  \"visitor\",\n  \"validate\",\n];\nconst validFieldKeys = [\"default\", \"optional\", \"deprecated\", \"validate\"];\n\nconst store = {} as Record<string, DefineTypeOpts>;\n\n// Wraps defineType to ensure these aliases are included.\nexport function defineAliasedType(...aliases: string[]) {\n  return (type: string, opts: DefineTypeOpts = {}) => {\n    let defined = opts.aliases;\n    if (!defined) {\n      if (opts.inherits) defined = store[opts.inherits].aliases?.slice();\n      defined ??= [];\n      opts.aliases = defined;\n    }\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    defineType(type, opts);\n  };\n}\n\nexport default function defineType(type: string, opts: DefineTypeOpts = {}) {\n  const inherits = (opts.inherits && store[opts.inherits]) || {};\n\n  let fields = opts.fields;\n  if (!fields) {\n    fields = {};\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n        if (\n          Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\"\n        ) {\n          throw new Error(\n            \"field defaults can only be primitives or empty arrays currently\",\n          );\n        }\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          deprecated: field.deprecated,\n          validate: field.validate,\n        };\n      }\n    }\n  }\n\n  const visitor: Array<string> = opts.visitor || inherits.visitor || [];\n  const aliases: Array<string> = opts.aliases || inherits.aliases || [];\n  const builder: Array<string> =\n    opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (validTypeOpts.indexOf(k) === -1) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type as NodeTypesWithoutComment;\n  }\n\n  // ensure all field keys are represented in `fields`\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (validFieldKeys.indexOf(k) === -1) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type as NodeTypesWithoutComment] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type as NodeTypesWithoutComment);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n", "import is from \"../validators/is\";\nimport isValidIdentifier from \"../validators/isValidIdentifier\";\nimport { isKeyword, isReservedWord } from \"@babel/helper-validator-identifier\";\nimport type * as t from \"..\";\nimport { readStringContents } from \"@babel/helper-string-parser\";\n\nimport {\n  BINARY_OPERATORS,\n  LOGICAL_OPERATORS,\n  ASSIGNMENT_OPERATORS,\n  UNARY_OPERATORS,\n  UPDATE_OPERATORS,\n} from \"../constants\";\n\nimport {\n  defineAliasedType,\n  assertShape,\n  assertOptionalChainStart,\n  assertValueType,\n  assertNodeType,\n  assertNodeOrValueType,\n  assertEach,\n  chain,\n  assertOneOf,\n  validateOptional,\n  type Validator,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"Standardized\");\n\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeOrValueType(\"null\", \"Expression\", \"SpreadElement\"),\n        ),\n      ),\n      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined,\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertValueType(\"string\");\n        }\n\n        const identifier = assertOneOf(...ASSIGNMENT_OPERATORS);\n        const pattern = assertOneOf(\"=\");\n\n        return function (node: t.AssignmentExpression, key, val) {\n          const validator = is(\"Pattern\", node.left) ? pattern : identifier;\n          validator(node, key, val);\n        };\n      })(),\n    },\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"LVal\")\n        : assertNodeType(\n            \"Identifier\",\n            \"MemberExpression\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...BINARY_OPERATORS),\n    },\n    left: {\n      validate: (function () {\n        const expression = assertNodeType(\"Expression\");\n        const inOp = assertNodeType(\"Expression\", \"PrivateName\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.BinaryExpression, key, val) {\n            const validator = node.operator === \"in\" ? inOp : expression;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `operator` property\n          { oneOfNodeTypes: [\"Expression\", \"PrivateName\"] },\n        );\n        return validator;\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n});\n\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: assertNodeType(\"DirectiveLiteral\"),\n    },\n  },\n});\n\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Directive\")),\n      ),\n      default: [],\n    },\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"],\n});\n\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\"),\n    },\n    arguments: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            \"SpreadElement\",\n            \"JSXNamespacedName\",\n            \"ArgumentPlaceholder\",\n          ),\n        ),\n      ),\n    },\n    ...(!process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertOneOf(true, false),\n            optional: true,\n          },\n        }\n      : {}),\n    typeArguments: {\n      validate: assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\"],\n});\n\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    alternate: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\", \"Conditional\"],\n});\n\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n});\n\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"],\n});\n\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: assertNodeType(\"Program\"),\n    },\n    comments: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? Object.assign(() => {}, {\n            each: { oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"] },\n          })\n        : assertEach(assertNodeType(\"CommentBlock\", \"CommentLine\")),\n      optional: true,\n    },\n    tokens: {\n      // todo(ts): add Token type\n      validate: assertEach(Object.assign(() => {}, { type: \"any\" })),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"VariableDeclaration\", \"LVal\")\n        : assertNodeType(\n            \"VariableDeclaration\",\n            \"Identifier\",\n            \"MemberExpression\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: assertNodeType(\"VariableDeclaration\", \"Expression\"),\n      optional: true,\n    },\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    update: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\nexport const functionCommon = () => ({\n  params: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Identifier\", \"Pattern\", \"RestElement\")),\n    ),\n  },\n  generator: {\n    default: false,\n  },\n  async: {\n    default: false,\n  },\n});\n\nexport const functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\")\n      : assertNodeType(\n          \"TypeParameterDeclaration\",\n          \"TSTypeParameterDeclaration\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n});\n\nexport const functionDeclarationCommon = () => ({\n  ...functionCommon(),\n  declare: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  id: {\n    validate: assertNodeType(\"Identifier\"),\n    optional: true, // May be null for `export default function`\n  },\n});\n\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Statement\",\n    \"Pureish\",\n    \"Declaration\",\n  ],\n  validate: (function () {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};\n\n    const identifier = assertNodeType(\"Identifier\");\n\n    return function (parent, key, node) {\n      if (!is(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  })(),\n});\n\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\nexport const patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  decorators: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Decorator\")),\n    ),\n    optional: true,\n  },\n});\n\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\" /* for legacy param decorators */],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: {\n    ...patternLikeCommon(),\n    name: {\n      validate: chain(\n        assertValueType(\"string\"),\n        Object.assign(\n          function (node, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (!isValidIdentifier(val, false)) {\n              throw new TypeError(`\"${val}\" is not a valid identifier name`);\n            }\n          } as Validator,\n          { type: \"string\" },\n        ),\n      ),\n    },\n  },\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    const match = /\\.(\\w+)$/.exec(key);\n    if (!match) return;\n\n    const [, parentKey] = match;\n    const nonComp = { computed: false };\n\n    // We can't check if `parent.property === node`, because nodes are validated\n    // before replacing them in the AST.\n    if (parentKey === \"property\") {\n      if (is(\"MemberExpression\", parent, nonComp)) return;\n      if (is(\"OptionalMemberExpression\", parent, nonComp)) return;\n    } else if (parentKey === \"key\") {\n      if (is(\"Property\", parent, nonComp)) return;\n      if (is(\"Method\", parent, nonComp)) return;\n    } else if (parentKey === \"exported\") {\n      if (is(\"ExportSpecifier\", parent)) return;\n    } else if (parentKey === \"imported\") {\n      if (is(\"ImportSpecifier\", parent, { imported: node })) return;\n    } else if (parentKey === \"meta\") {\n      if (is(\"MetaProperty\", parent, { meta: node })) return;\n    }\n\n    if (\n      // Ideally we should call isStrictReservedWord if this node is a descendant\n      // of a block in strict mode. Also, we should pass the inModule option so\n      // we can disable \"await\" in module.\n      (isKeyword(node.name) || isReservedWord(node.name, false)) &&\n      // Even if \"this\" is a keyword, we are using the Identifier\n      // node to represent it.\n      node.name !== \"this\"\n    ) {\n      throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n    }\n  },\n});\n\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    alternate: {\n      optional: true,\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: assertValueType(\"number\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"boolean\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: assertValueType(\"string\"),\n    },\n    flags: {\n      validate: chain(\n        assertValueType(\"string\"),\n        Object.assign(\n          function (node, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            const invalid = /[^gimsuy]/.exec(val);\n            if (invalid) {\n              throw new TypeError(`\"${invalid[0]}\" is not a valid RegExp flag`);\n            }\n          } as Validator,\n          { type: \"string\" },\n        ),\n      ),\n      default: \"\",\n    },\n  },\n});\n\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...LOGICAL_OPERATORS),\n    },\n    left: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"MemberExpression\", {\n  builder: [\n    \"object\",\n    \"property\",\n    \"computed\",\n    ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"optional\"] : []),\n  ],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\", \"Super\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\", \"PrivateName\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (\n          node: t.MemberExpression,\n          key,\n          val,\n        ) {\n          const validator: Validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    ...(!process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertOneOf(true, false),\n            optional: true,\n          },\n        }\n      : {}),\n  },\n});\n\ndefineType(\"NewExpression\", { inherits: \"CallExpression\" });\n\ndefineType(\"Program\", {\n  // Note: We explicitly leave 'interpreter' out here because it is\n  // conceptually comment-like, and Babel does not traverse comments either.\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceFile: {\n      validate: assertValueType(\"string\"),\n    },\n    sourceType: {\n      validate: assertOneOf(\"script\", \"module\"),\n      default: \"script\",\n    },\n    interpreter: {\n      validate: assertNodeType(\"InterpreterDirective\"),\n      default: null,\n      optional: true,\n    },\n    directives: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Directive\")),\n      ),\n      default: [],\n    },\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"],\n});\n\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"ObjectMethod\", \"ObjectProperty\", \"SpreadElement\"),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n      ...(!process.env.BABEL_TYPES_8_BREAKING ? { default: \"method\" } : {}),\n    },\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (node: t.ObjectMethod, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\n          \"Expression\",\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        ];\n        return validator;\n      })(),\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  aliases: [\n    \"UserWhitespacable\",\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"ObjectMember\",\n  ],\n});\n\ndefineType(\"ObjectProperty\", {\n  builder: [\n    \"key\",\n    \"value\",\n    \"computed\",\n    \"shorthand\",\n    ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"decorators\"] : []),\n  ],\n  fields: {\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"DecimalLiteral\",\n          \"PrivateName\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          {\n            // todo(ts): can be discriminated union by `computed` property\n            oneOfNodeTypes: [\n              \"Expression\",\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              \"DecimalLiteral\",\n              \"PrivateName\",\n            ],\n          },\n        );\n        return validator;\n      })(),\n    },\n    value: {\n      // Value may be PatternLike if this is an AssignmentProperty\n      // https://github.com/babel/babylon/issues/434\n      validate: assertNodeType(\"Expression\", \"PatternLike\"),\n    },\n    shorthand: {\n      validate: chain(\n        assertValueType(\"boolean\"),\n        Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (val && node.computed) {\n              throw new TypeError(\n                \"Property shorthand of ObjectProperty cannot be true if computed is true\",\n              );\n            }\n          } as Validator,\n          { type: \"boolean\" },\n        ),\n        function (node: t.ObjectProperty, key, val) {\n          if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n          if (val && !is(\"Identifier\", node.key)) {\n            throw new TypeError(\n              \"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\",\n            );\n          }\n        } as Validator,\n      ),\n      default: false,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate: (function () {\n    const pattern = assertNodeType(\n      \"Identifier\",\n      \"Pattern\",\n      \"TSAsExpression\",\n      \"TSSatisfiesExpression\",\n      \"TSNonNullExpression\",\n      \"TSTypeAssertion\",\n    );\n    const expression = assertNodeType(\"Expression\");\n\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      const validator = is(\"ObjectPattern\", parent) ? pattern : expression;\n      validator(node, \"value\", node.value);\n    };\n  })(),\n});\n\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: {\n    ...patternLikeCommon(),\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"LVal\")\n        : assertNodeType(\n            \"Identifier\",\n            \"ArrayPattern\",\n            \"ObjectPattern\",\n            \"MemberExpression\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSTypeAssertion\",\n            \"TSNonNullExpression\",\n          ),\n    },\n  },\n  validate(parent: t.ArrayPattern | t.ObjectPattern, key) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n    if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n\n    const [, listKey, index] = match as unknown as [\n      string,\n      keyof typeof parent,\n      string,\n    ];\n    if ((parent[listKey] as t.Node[]).length > +index + 1) {\n      throw new TypeError(`RestElement must be last element of ${listKey}`);\n    }\n  },\n});\n\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\")),\n      ),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    consequent: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    cases: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"SwitchCase\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ThisExpression\", {\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate: chain(\n        assertNodeType(\"BlockStatement\"),\n        Object.assign(\n          function (node: t.TryStatement) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            // This validator isn't put at the top level because we can run it\n            // even if this node doesn't have a parent.\n\n            if (!node.handler && !node.finalizer) {\n              throw new TypeError(\n                \"TryStatement expects either a handler or finalizer, or both\",\n              );\n            }\n          } as Validator,\n          {\n            oneOfNodeTypes: [\"BlockStatement\"],\n          },\n        ),\n      ),\n    },\n    handler: {\n      optional: true,\n      validate: assertNodeType(\"CatchClause\"),\n    },\n    finalizer: {\n      optional: true,\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true,\n    },\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UNARY_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"],\n});\n\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false,\n    },\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertNodeType(\"Expression\")\n        : assertNodeType(\"Identifier\", \"MemberExpression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UPDATE_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    kind: {\n      validate: assertOneOf(\n        \"var\",\n        \"let\",\n        \"const\",\n        // https://github.com/tc39/proposal-explicit-resource-management\n        \"using\",\n        // https://github.com/tc39/proposal-async-explicit-resource-management\n        \"await using\",\n      ),\n    },\n    declarations: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"VariableDeclarator\")),\n      ),\n    },\n  },\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n    if (!is(\"ForXStatement\", parent, { left: node })) return;\n    if (node.declarations.length !== 1) {\n      throw new TypeError(\n        `Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`,\n      );\n    }\n  },\n});\n\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertNodeType(\"LVal\");\n        }\n\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n        );\n        const without = assertNodeType(\"Identifier\");\n\n        return function (node: t.VariableDeclarator, key, val) {\n          const validator = node.init ? normal : without;\n          validator(node, key, val);\n        };\n      })(),\n    },\n    definite: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    init: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\n// --- ES2015 ---\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\" /* for legacy param decorators */],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    left: {\n      validate: assertNodeType(\n        \"Identifier\",\n        \"ObjectPattern\",\n        \"ArrayPattern\",\n        \"MemberExpression\",\n        \"TSAsExpression\",\n        \"TSSatisfiesExpression\",\n        \"TSTypeAssertion\",\n        \"TSNonNullExpression\",\n      ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    // For TypeScript\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeOrValueType(\"null\", \"PatternLike\", \"LVal\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    expression: {\n      // https://github.com/babel/babylon/issues/505\n      validate: assertValueType(\"boolean\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\", \"Expression\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"ClassMethod\",\n            \"ClassPrivateMethod\",\n            \"ClassProperty\",\n            \"ClassPrivateProperty\",\n            \"ClassAccessorProperty\",\n            \"TSDeclareMethod\",\n            \"TSIndexSignature\",\n            \"StaticBlock\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\n    \"id\",\n    \"body\",\n    \"superClass\",\n    \"mixins\",\n    \"typeParameters\",\n    \"superTypeParameters\",\n    \"implements\",\n    \"decorators\",\n  ],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      // In declarations, this is missing if this is the\n      // child of an ExportDefaultDeclaration.\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    superTypeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"TSExpressionWithTypeArguments\", \"ClassImplements\"),\n        ),\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    superTypeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\"TSExpressionWithTypeArguments\", \"ClassImplements\"),\n        ),\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    abstract: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate: (function () {\n    const identifier = assertNodeType(\"Identifier\");\n\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      if (!is(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  })(),\n});\n\ndefineType(\"ExportAllDeclaration\", {\n  builder: [\"source\"],\n  visitor: [\"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    attributes: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    // TODO(Babel 8): Deprecated\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      validate: assertNodeType(\n        \"TSDeclareFunction\",\n        \"FunctionDeclaration\",\n        \"ClassDeclaration\",\n        \"Expression\",\n      ),\n    },\n    exportKind: validateOptional(assertOneOf(\"value\")),\n  },\n});\n\ndefineType(\"ExportNamedDeclaration\", {\n  builder: [\"declaration\", \"specifiers\", \"source\"],\n  visitor: [\"declaration\", \"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      optional: true,\n      validate: chain(\n        assertNodeType(\"Declaration\"),\n        Object.assign(\n          function (node: t.ExportNamedDeclaration, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            // This validator isn't put at the top level because we can run it\n            // even if this node doesn't have a parent.\n\n            if (val && node.specifiers.length) {\n              throw new TypeError(\n                \"Only declaration or specifiers is allowed on ExportNamedDeclaration\",\n              );\n            }\n          } as Validator,\n          { oneOfNodeTypes: [\"Declaration\"] },\n        ),\n        function (node: t.ExportNamedDeclaration, key, val) {\n          if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n          // This validator isn't put at the top level because we can run it\n          // even if this node doesn't have a parent.\n\n          if (val && node.source) {\n            throw new TypeError(\"Cannot export a declaration from a source\");\n          }\n        },\n      ),\n    },\n    attributes: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    // TODO(Babel 8): Deprecated\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    specifiers: {\n      default: [],\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          (function () {\n            const sourced = assertNodeType(\n              \"ExportSpecifier\",\n              \"ExportDefaultSpecifier\",\n              \"ExportNamespaceSpecifier\",\n            );\n            const sourceless = assertNodeType(\"ExportSpecifier\");\n\n            if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;\n\n            return function (node: t.ExportNamedDeclaration, key, val) {\n              const validator = node.source ? sourced : sourceless;\n              validator(node, key, val);\n            } as Validator;\n          })(),\n        ),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n      optional: true,\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    exported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    exportKind: {\n      // And TypeScript's \"export { type foo } from\"\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: (function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return assertNodeType(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = assertNodeType(\"VariableDeclaration\");\n        const lval = assertNodeType(\n          \"Identifier\",\n          \"MemberExpression\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n          \"TSAsExpression\",\n          \"TSSatisfiesExpression\",\n          \"TSTypeAssertion\",\n          \"TSNonNullExpression\",\n        );\n\n        return function (node, key, val) {\n          if (is(\"VariableDeclaration\", val)) {\n            declaration(node, key, val);\n          } else {\n            lval(node, key, val);\n          }\n        };\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    await: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ImportDeclaration\", {\n  builder: [\"specifiers\", \"source\"],\n  visitor: [\"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\"Statement\", \"Declaration\", \"ImportOrExportDeclaration\"],\n  fields: {\n    attributes: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    // TODO(Babel 8): Deprecated\n    assertions: {\n      optional: true,\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ImportAttribute\")),\n      ),\n    },\n    module: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    specifiers: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"ImportSpecifier\",\n            \"ImportDefaultSpecifier\",\n            \"ImportNamespaceSpecifier\",\n          ),\n        ),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    importKind: {\n      // Handle TypeScript/Flowtype's extension \"import type foo from\"\n      // TypeScript doesn't support typeof\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    imported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    importKind: {\n      // Handle Flowtype's extension \"import {typeof foo} from\"\n      // And TypeScript's \"import { type foo } from\"\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: chain(\n        assertNodeType(\"Identifier\"),\n        Object.assign(\n          function (node: t.MetaProperty, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            let property;\n            switch (val.name) {\n              case \"function\":\n                property = \"sent\";\n                break;\n              case \"new\":\n                property = \"target\";\n                break;\n              case \"import\":\n                property = \"meta\";\n                break;\n            }\n            if (!is(\"Identifier\", node.property, { name: property })) {\n              throw new TypeError(\"Unrecognised MetaProperty\");\n            }\n          } as Validator,\n          { oneOfNodeTypes: [\"Identifier\"] },\n        ),\n      ),\n    },\n    property: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\nexport const classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  accessibility: {\n    validate: assertOneOf(\"public\", \"private\", \"protected\"),\n    optional: true,\n  },\n  static: {\n    default: false,\n  },\n  override: {\n    default: false,\n  },\n  computed: {\n    default: false,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  key: {\n    validate: chain(\n      (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        return function (node: any, key: string, val: any) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      })(),\n      assertNodeType(\n        \"Identifier\",\n        \"StringLiteral\",\n        \"NumericLiteral\",\n        \"BigIntLiteral\",\n        \"Expression\",\n      ),\n    ),\n  },\n});\n\nexport const classMethodOrDeclareMethodCommon = () => ({\n  ...functionCommon(),\n  ...classMethodOrPropertyCommon(),\n  params: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(\n        assertNodeType(\n          \"Identifier\",\n          \"Pattern\",\n          \"RestElement\",\n          \"TSParameterProperty\",\n        ),\n      ),\n    ),\n  },\n  kind: {\n    validate: assertOneOf(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\",\n  },\n  access: {\n    validate: chain(\n      assertValueType(\"string\"),\n      assertOneOf(\"public\", \"private\", \"protected\"),\n    ),\n    optional: true,\n  },\n  decorators: {\n    validate: chain(\n      assertValueType(\"array\"),\n      assertEach(assertNodeType(\"Decorator\")),\n    ),\n    optional: true,\n  },\n});\n\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\n    \"kind\",\n    \"key\",\n    \"params\",\n    \"body\",\n    \"computed\",\n    \"static\",\n    \"generator\",\n    \"async\",\n  ],\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"ObjectPattern\", {\n  visitor: [\n    \"properties\",\n    \"typeAnnotation\",\n    \"decorators\" /* for legacy param decorators */,\n  ],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"RestElement\", \"ObjectProperty\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\n  \"Super\",\n  process.env.BABEL_8_BREAKING\n    ? undefined\n    : {\n        aliases: [\"Expression\"],\n      },\n);\n\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\", \"typeParameters\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    quasi: {\n      validate: assertNodeType(\"TemplateLiteral\"),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: chain(\n        assertShape({\n          raw: {\n            validate: assertValueType(\"string\"),\n          },\n          cooked: {\n            validate: assertValueType(\"string\"),\n            optional: true,\n          },\n        }),\n        function templateElementCookedValidator(node: t.TemplateElement) {\n          const raw = node.value.raw;\n\n          let unterminatedCalled = false;\n\n          const error = () => {\n            // unreachable\n            throw new Error(\"Internal @babel/types error.\");\n          };\n          const { str, firstInvalidLoc } = readStringContents(\n            \"template\",\n            raw,\n            0,\n            0,\n            0,\n            {\n              unterminated() {\n                unterminatedCalled = true;\n              },\n              strictNumericEscape: error,\n              invalidEscapeSequence: error,\n              numericSeparatorInEscapeSequence: error,\n              unexpectedNumericSeparator: error,\n              invalidDigit: error,\n              invalidCodePoint: error,\n            },\n          );\n          if (!unterminatedCalled) throw new Error(\"Invalid raw\");\n\n          node.value.cooked = firstInvalidLoc ? null : str;\n        },\n      ),\n    },\n    tail: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TemplateElement\")),\n      ),\n    },\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            // For TypeScript template literal types\n            \"TSType\",\n          ),\n        ),\n        function (node: t.TemplateLiteral, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of expressions.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: chain(\n        assertValueType(\"boolean\"),\n        Object.assign(\n          function (node: t.YieldExpression, key, val) {\n            if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n            if (val && !node.argument) {\n              throw new TypeError(\n                \"Property delegate of YieldExpression cannot be true if there is no argument\",\n              );\n            }\n          } as Validator,\n          { type: \"boolean\" },\n        ),\n      ),\n      default: false,\n    },\n    argument: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2017 ---\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2019 ---\ndefineType(\"Import\", {\n  aliases: [\"Expression\"],\n});\n\n// --- ES2020 ---\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.OptionalMemberExpression, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `computed` property\n          { oneOfNodeTypes: [\"Expression\", \"Identifier\"] },\n        );\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertValueType(\"boolean\")\n        : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n  },\n});\n\ndefineType(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    arguments: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            \"SpreadElement\",\n            \"JSXNamespacedName\",\n            \"ArgumentPlaceholder\",\n          ),\n        ),\n      ),\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING\n        ? assertValueType(\"boolean\")\n        : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n    typeArguments: {\n      validate: assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n      optional: true,\n    },\n  },\n});\n\n// --- ES2022 ---\ndefineType(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    key: {\n      validate: chain(\n        (function () {\n          const normal = assertNodeType(\n            \"Identifier\",\n            \"StringLiteral\",\n            \"NumericLiteral\",\n            \"BigIntLiteral\",\n            \"PrivateName\",\n          );\n          const computed = assertNodeType(\"Expression\");\n\n          return function (node: any, key: string, val: any) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          };\n        })(),\n        assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"Expression\",\n          \"PrivateName\",\n        ),\n      ),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\", \"typeAnnotation\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n    static: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\n    \"key\",\n    \"params\",\n    \"body\",\n    \"decorators\",\n    \"returnType\",\n    \"typeParameters\",\n  ],\n  aliases: [\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"Private\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\", \"method\"),\n      default: \"method\",\n    },\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Statement\")),\n      ),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"],\n});\n", "import {\n  defineAliasedType,\n  arrayOfType,\n  assertOneOf,\n  assertValueType,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"Flow\");\n\nconst defineInterfaceishType = (\n  name: \"DeclareClass\" | \"DeclareInterface\" | \"InterfaceDeclaration\",\n) => {\n  const isDeclareClass = name === \"DeclareClass\";\n\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\n      \"id\",\n      \"typeParameters\",\n      \"extends\",\n      ...(isDeclareClass ? [\"mixins\", \"implements\"] : []),\n      \"body\",\n    ],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: validateType(\"Identifier\"),\n      typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n      extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n      ...(isDeclareClass\n        ? {\n            mixins: validateOptional(arrayOfType(\"InterfaceExtends\")),\n            implements: validateOptional(arrayOfType(\"ClassImplements\")),\n          }\n        : {}),\n      body: validateType(\"ObjectTypeAnnotation\"),\n    },\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareClass\");\n\ndefineType(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    predicate: validateOptionalType(\"DeclaredPredicate\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareInterface\");\n\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    body: validateType(\"BlockStatement\"),\n    kind: validateOptional(assertOneOf(\"CommonJS\", \"ES\")),\n  },\n});\n\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateOptionalType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: validateOptionalType(\"Flow\"),\n    specifiers: validateOptional(\n      arrayOfType([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"]),\n    ),\n    source: validateOptionalType(\"StringLiteral\"),\n    default: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: validateType(\"StringLiteral\"),\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: validateType(\"Flow\"),\n  },\n});\n\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"],\n});\n\ndefineType(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    params: validate(arrayOfType(\"FunctionTypeParam\")),\n    rest: validateOptionalType(\"FunctionTypeParam\"),\n    this: validateOptionalType(\"FunctionTypeParam\"),\n    returnType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: validateOptionalType(\"Identifier\"),\n    typeAnnotation: validateType(\"FlowType\"),\n    optional: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"],\n});\n\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"InterfaceDeclaration\");\n\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n    body: validateType(\"ObjectTypeAnnotation\"),\n  },\n});\n\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"number\")),\n  },\n});\n\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\n    \"properties\",\n    \"indexers\",\n    \"callProperties\",\n    \"internalSlots\",\n    \"exact\",\n  ],\n  fields: {\n    properties: validate(\n      arrayOfType([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"]),\n    ),\n    indexers: {\n      validate: arrayOfType(\"ObjectTypeIndexer\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    callProperties: {\n      validate: arrayOfType(\"ObjectTypeCallProperty\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    internalSlots: {\n      validate: arrayOfType(\"ObjectTypeInternalSlot\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    exact: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    // If the inexact flag is present then this is an object type, and not a\n    // declare class, declare interface, or interface. If it is true, the\n    // object uses ... to express that it is inexact.\n    inexact: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    value: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n    static: validate(assertValueType(\"boolean\")),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateOptionalType(\"Identifier\"),\n    key: validateType(\"FlowType\"),\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: validateType([\"Identifier\", \"StringLiteral\"]),\n    value: validateType(\"FlowType\"),\n    kind: validate(assertOneOf(\"init\", \"get\", \"set\")),\n    static: validate(assertValueType(\"boolean\")),\n    proto: validate(assertValueType(\"boolean\")),\n    optional: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    qualification: validateType([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n  },\n});\n\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"string\")),\n  },\n});\n\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: validate(assertValueType(\"string\")),\n    bound: validateOptionalType(\"TypeAnnotation\"),\n    default: validateOptionalType(\"FlowType\"),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"TypeParameter\")),\n  },\n});\n\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: validate(assertOneOf(\"minus\", \"plus\")),\n  },\n});\n\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\n// Enums\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    body: validateType([\n      \"EnumBooleanBody\",\n      \"EnumNumberBody\",\n      \"EnumStringBody\",\n      \"EnumSymbolBody\",\n    ]),\n  },\n});\n\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumBooleanMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumNumberMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType([\"EnumStringMember\", \"EnumDefaultedMember\"]),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"BooleanLiteral\"),\n  },\n});\n\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"NumericLiteral\"),\n  },\n});\n\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n  },\n});\n", "import {\n  defineAliasedType,\n  assertNodeType,\n  assertValueType,\n  chain,\n  assertEach,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"JSX\");\n\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\"),\n    },\n    value: {\n      optional: true,\n      validate: assertNodeType(\n        \"JSXElement\",\n        \"JSXFragment\",\n        \"StringLiteral\",\n        \"JSXExpressionContainer\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXElement\", {\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"openingElement\", \"closingElement\", \"children\"]\n    : [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: assertNodeType(\"JSXOpeningElement\"),\n    },\n    closingElement: {\n      optional: true,\n      validate: assertNodeType(\"JSXClosingElement\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          selfClosing: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXEmptyExpression\", {});\n\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\", \"JSXEmptyExpression\"),\n    },\n  },\n});\n\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n    selfClosing: {\n      default: false,\n    },\n    attributes: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"JSXAttribute\", \"JSXSpreadAttribute\")),\n      ),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: assertNodeType(\"JSXOpeningFragment\"),\n    },\n    closingFragment: {\n      validate: assertNodeType(\"JSXClosingFragment\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"],\n});\n\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"],\n});\n", "import { ALIAS_KEYS } from \"./utils\";\n\nexport const PLACEHOLDERS = [\n  \"Identifier\",\n  \"StringLiteral\",\n  \"Expression\",\n  \"Statement\",\n  \"Declaration\",\n  \"BlockStatement\",\n  \"ClassBody\",\n  \"Pattern\",\n] as const;\n\nexport const PLACEHOLDERS_ALIAS: Record<string, string[]> = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"],\n};\n\nfor (const type of PLACEHOLDERS) {\n  const alias = ALIAS_KEYS[type];\n  if (alias?.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nexport const PLACEHOLDERS_FLIPPED_ALIAS: Record<string, string[]> = {};\n\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});\n", "import {\n  defineAliasedType,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n} from \"./utils\";\nimport { PLACEHOLDERS } from \"./placeholders\";\n\nconst defineType = defineAliasedType(\"Miscellaneous\");\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"Noop\", {\n    visitor: [],\n  });\n}\n\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  // aliases: [], defined in placeholders.js\n  fields: {\n    name: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    expectedNode: {\n      validate: assertOneOf(...PLACEHOLDERS),\n    },\n  },\n});\n\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n", "import defineType, {\n  assertEach,\n  assertNodeType,\n  assertValueType,\n  chain,\n} from \"./utils\";\n\ndefineType(\"ArgumentPlaceholder\", {});\n\ndefineType(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING\n    ? {\n        object: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n        callee: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n      }\n    : {\n        object: {\n          validate: assertNodeType(\"Expression\"),\n        },\n        callee: {\n          validate: assertNodeType(\"Expression\"),\n        },\n      },\n});\n\ndefineType(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    value: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n  },\n});\n\ndefineType(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    async: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ObjectProperty\", \"SpreadElement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\", \"SpreadElement\")),\n      ),\n      default: [],\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\n// https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"Program\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\", {\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"],\n});\n", "import {\n  defineAliasedType,\n  arrayOfType,\n  assertEach,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n  chain,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils\";\nimport {\n  functionDeclarationCommon,\n  classMethodOrDeclareMethodCommon,\n} from \"./core\";\nimport is from \"../validators/is\";\n\nconst defineType = defineAliasedType(\"TypeScript\");\n\nconst bool = assertValueType(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeAnnotation\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeParameterDeclaration\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true,\n  },\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"], // TODO: This isn't usable in general as an LVal. Should have a \"Parameter\" alias.\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: assertOneOf(\"public\", \"private\", \"protected\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    parameter: {\n      validate: assertNodeType(\"Identifier\", \"AssignmentPattern\"),\n    },\n    override: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    decorators: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Decorator\")),\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: validateType(\"TSEntityName\"),\n    right: validateType(\"Identifier\"),\n  },\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n  [process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\"]: validateArrayOfType(\n    [\"Identifier\", \"RestElement\"],\n  ),\n  [process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\"]:\n    validateOptionalType(\"TSTypeAnnotation\"),\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: signatureDeclarationCommon(),\n};\n\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\n  \"TSConstructSignatureDeclaration\",\n  callConstructSignatureDeclaration,\n);\n\nconst namedTypeElementCommon = () => ({\n  key: validateType(\"Expression\"),\n  computed: { default: false },\n  optional: validateOptional(bool),\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\", \"initializer\"],\n  fields: {\n    ...namedTypeElementCommon(),\n    readonly: validateOptional(bool),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    initializer: validateOptionalType(\"Expression\"),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"key\",\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: {\n    ...signatureDeclarationCommon(),\n    ...namedTypeElementCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: validateOptional(bool),\n    static: validateOptional(bool),\n    parameters: validateArrayOfType(\"Identifier\"), // Length must be 1\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n  },\n});\n\nconst tsKeywordTypes = [\n  \"TSAnyKeyword\",\n  \"TSBooleanKeyword\",\n  \"TSBigIntKeyword\",\n  \"TSIntrinsicKeyword\",\n  \"TSNeverKeyword\",\n  \"TSNullKeyword\",\n  \"TSNumberKeyword\",\n  \"TSObjectKeyword\",\n  \"TSStringKeyword\",\n  \"TSSymbolKeyword\",\n  \"TSUndefinedKeyword\",\n  \"TSUnknownKeyword\",\n  \"TSVoidKeyword\",\n] as const;\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {},\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {},\n});\n\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n};\n\ndefineType(\"TSFunctionType\", {\n  ...fnOrCtrBase,\n  fields: signatureDeclarationCommon(),\n});\ndefineType(\"TSConstructorType\", {\n  ...fnOrCtrBase,\n  fields: {\n    ...signatureDeclarationCommon(),\n    abstract: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeName\", \"typeParameters\"],\n  fields: {\n    typeName: validateType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: validateType([\"Identifier\", \"TSThisType\"]),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    asserts: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\"exprName\", \"typeParameters\"],\n  fields: {\n    exprName: validateType([\"TSEntityName\", \"TSImportType\"]),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: validateArrayOfType([\"TSType\", \"TSNamedTupleMember\"]),\n  },\n});\n\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: validateType(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false,\n    },\n    elementType: validateType(\"TSType\"),\n  },\n});\n\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: validateArrayOfType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\n\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: validateType(\"TSType\"),\n    extendsType: validateType(\"TSType\"),\n    trueType: validateType(\"TSType\"),\n    falseType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: validateType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: validate(assertValueType(\"string\")),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: validateType(\"TSType\"),\n    indexType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    readonly: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeParameter: validateType(\"TSTypeParameter\"),\n    optional: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeAnnotation: validateOptionalType(\"TSType\"),\n    nameType: validateOptionalType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: (function () {\n        const unaryExpression = assertNodeType(\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const unaryOperator = assertOneOf(\"-\");\n\n        const literal = assertNodeType(\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n        );\n        function validator(parent: any, key: string, node: any) {\n          // type A = -1 | 1;\n          if (is(\"UnaryExpression\", node)) {\n            // check operator first\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            // type A = 'foo' | 'bar' | false | 1;\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n          \"UnaryExpression\",\n        ];\n\n        return validator;\n      })(),\n    },\n  },\n});\n\ndefineType(\"TSExpressionWithTypeArguments\", {\n  aliases: [\"TSType\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSInterfaceDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    extends: validateOptional(arrayOfType(\"TSExpressionWithTypeArguments\")),\n    body: validateType(\"TSInterfaceBody\"),\n  },\n});\n\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\nconst TSTypeExpression = {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSAsExpression\", TSTypeExpression);\ndefineType(\"TSSatisfiesExpression\", TSTypeExpression);\n\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"members\"],\n  fields: {\n    declare: validateOptional(bool),\n    const: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    members: validateArrayOfType(\"TSEnumMember\"),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    global: validateOptional(bool),\n    id: validateType([\"Identifier\", \"StringLiteral\"]),\n    body: validateType([\"TSModuleBlock\", \"TSModuleDeclaration\"]),\n  },\n});\n\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\", \"FunctionParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"argument\", \"qualifier\", \"typeParameters\"],\n  fields: {\n    argument: validateType(\"StringLiteral\"),\n    qualifier: validateOptionalType(\"TSEntityName\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    isExport: validate(bool),\n    id: validateType(\"Identifier\"),\n    moduleReference: validateType([\n      \"TSEntityName\",\n      \"TSExternalModuleReference\",\n    ]),\n    importKind: {\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: assertNodeType(\"TSType\"),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSType\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSTypeParameter\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: !process.env.BABEL_8_BREAKING\n        ? assertValueType(\"string\")\n        : assertNodeType(\"Identifier\"),\n    },\n    in: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    out: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    const: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    constraint: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n    default: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n  },\n});\n", "export const DEPRECATED_ALIASES = {\n  ModuleDeclaration: \"ImportOrExportDeclaration\",\n};\n", "import toFastProperties from \"to-fast-properties\";\nimport \"./core\";\nimport \"./flow\";\nimport \"./jsx\";\nimport \"./misc\";\nimport \"./experimental\";\nimport \"./typescript\";\nimport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n} from \"./utils\";\nimport {\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n} from \"./placeholders\";\nimport { DEPRECATED_ALIASES } from \"./deprecated-aliases\";\n\n(\n  Object.keys(DEPRECATED_ALIASES) as (keyof typeof DEPRECATED_ALIASES)[]\n).forEach(deprecatedAlias => {\n  FLIPPED_ALIAS_KEYS[deprecatedAlias] =\n    FLIPPED_ALIAS_KEYS[DEPRECATED_ALIASES[deprecatedAlias]];\n});\n\n// We do this here, because at this point the visitor keys should be ready and setup\ntoFastProperties(VISITOR_KEYS);\ntoFastProperties(ALIAS_KEYS);\ntoFastProperties(FLIPPED_ALIAS_KEYS);\ntoFastProperties(NODE_FIELDS);\ntoFastProperties(BUILDER_KEYS);\ntoFastProperties(DEPRECATED_KEYS);\n\ntoFastProperties(PLACEHOLDERS_ALIAS);\ntoFastProperties(PLACEHOLDERS_FLIPPED_ALIAS);\n\nconst TYPES: Array<string> = [].concat(\n  Object.keys(VISITOR_KEYS),\n  Object.keys(FLIPPED_ALIAS_KEYS),\n  Object.keys(DEPRECATED_KEYS),\n);\n\nexport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_ALIASES,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n  TYPES,\n};\n\nexport type { FieldOptions } from \"./utils\";\n", "import {\n  NODE_FIELDS,\n  NODE_PARENT_VALIDATIONS,\n  type FieldOptions,\n} from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function validate(\n  node: t.Node | undefined | null,\n  key: string,\n  val: any,\n): void {\n  if (!node) return;\n\n  const fields = NODE_FIELDS[node.type];\n  if (!fields) return;\n\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nexport function validateField(\n  node: t.Node | undefined | null,\n  key: string,\n  val: any,\n  field: FieldOptions | undefined | null,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n}\n\nexport function validateChild(\n  node: t.Node | undefined | null,\n  key: string,\n  val?: t.Node | undefined | null,\n) {\n  if (val == null) return;\n  const validate = NODE_PARENT_VALIDATIONS[val.type];\n  if (!validate) return;\n  validate(node, key, val);\n}\n", "import validate from \"../validators/validate\";\nimport type * as t from \"..\";\nimport { BUILDER_KEYS } from \"..\";\n\nexport default function validateNode<N extends t.Node>(node: N) {\n  // todo: because keys not in BUILDER_KEYS are not validated - this actually allows invalid nodes in some cases\n  const keys = BUILDER_KEYS[node.type] as (keyof N & string)[];\n  for (const key of keys) {\n    validate(node, key, node[key]);\n  }\n  return node;\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport validateNode from \"../validateNode\";\nimport type * as t from \"../..\";\nimport deprecationWarning from \"../../utils/deprecationWarning\";\nexport function arrayExpression(\n  elements: Array<null | t.Expression | t.SpreadElement> = [],\n): t.ArrayExpression {\n  return validateNode<t.ArrayExpression>({\n    type: \"ArrayExpression\",\n    elements,\n  });\n}\nexport function assignmentExpression(\n  operator: string,\n  left: t.LVal,\n  right: t.Expression,\n): t.AssignmentExpression {\n  return validateNode<t.AssignmentExpression>({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function binaryExpression(\n  operator:\n    | \"+\"\n    | \"-\"\n    | \"/\"\n    | \"%\"\n    | \"*\"\n    | \"**\"\n    | \"&\"\n    | \"|\"\n    | \">>\"\n    | \">>>\"\n    | \"<<\"\n    | \"^\"\n    | \"==\"\n    | \"===\"\n    | \"!=\"\n    | \"!==\"\n    | \"in\"\n    | \"instanceof\"\n    | \">\"\n    | \"<\"\n    | \">=\"\n    | \"<=\"\n    | \"|>\",\n  left: t.Expression | t.PrivateName,\n  right: t.Expression,\n): t.BinaryExpression {\n  return validateNode<t.BinaryExpression>({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function interpreterDirective(value: string): t.InterpreterDirective {\n  return validateNode<t.InterpreterDirective>({\n    type: \"InterpreterDirective\",\n    value,\n  });\n}\nexport function directive(value: t.DirectiveLiteral): t.Directive {\n  return validateNode<t.Directive>({\n    type: \"Directive\",\n    value,\n  });\n}\nexport function directiveLiteral(value: string): t.DirectiveLiteral {\n  return validateNode<t.DirectiveLiteral>({\n    type: \"DirectiveLiteral\",\n    value,\n  });\n}\nexport function blockStatement(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n): t.BlockStatement {\n  return validateNode<t.BlockStatement>({\n    type: \"BlockStatement\",\n    body,\n    directives,\n  });\n}\nexport function breakStatement(\n  label: t.Identifier | null = null,\n): t.BreakStatement {\n  return validateNode<t.BreakStatement>({\n    type: \"BreakStatement\",\n    label,\n  });\n}\nexport function callExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n): t.CallExpression {\n  return validateNode<t.CallExpression>({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments,\n  });\n}\nexport function catchClause(\n  param:\n    | t.Identifier\n    | t.ArrayPattern\n    | t.ObjectPattern\n    | null\n    | undefined = null,\n  body: t.BlockStatement,\n): t.CatchClause {\n  return validateNode<t.CatchClause>({\n    type: \"CatchClause\",\n    param,\n    body,\n  });\n}\nexport function conditionalExpression(\n  test: t.Expression,\n  consequent: t.Expression,\n  alternate: t.Expression,\n): t.ConditionalExpression {\n  return validateNode<t.ConditionalExpression>({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate,\n  });\n}\nexport function continueStatement(\n  label: t.Identifier | null = null,\n): t.ContinueStatement {\n  return validateNode<t.ContinueStatement>({\n    type: \"ContinueStatement\",\n    label,\n  });\n}\nexport function debuggerStatement(): t.DebuggerStatement {\n  return {\n    type: \"DebuggerStatement\",\n  };\n}\nexport function doWhileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.DoWhileStatement {\n  return validateNode<t.DoWhileStatement>({\n    type: \"DoWhileStatement\",\n    test,\n    body,\n  });\n}\nexport function emptyStatement(): t.EmptyStatement {\n  return {\n    type: \"EmptyStatement\",\n  };\n}\nexport function expressionStatement(\n  expression: t.Expression,\n): t.ExpressionStatement {\n  return validateNode<t.ExpressionStatement>({\n    type: \"ExpressionStatement\",\n    expression,\n  });\n}\nexport function file(\n  program: t.Program,\n  comments: Array<t.CommentBlock | t.CommentLine> | null = null,\n  tokens: Array<any> | null = null,\n): t.File {\n  return validateNode<t.File>({\n    type: \"File\",\n    program,\n    comments,\n    tokens,\n  });\n}\nexport function forInStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n): t.ForInStatement {\n  return validateNode<t.ForInStatement>({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body,\n  });\n}\nexport function forStatement(\n  init: t.VariableDeclaration | t.Expression | null | undefined = null,\n  test: t.Expression | null | undefined = null,\n  update: t.Expression | null | undefined = null,\n  body: t.Statement,\n): t.ForStatement {\n  return validateNode<t.ForStatement>({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body,\n  });\n}\nexport function functionDeclaration(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionDeclaration {\n  return validateNode<t.FunctionDeclaration>({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  });\n}\nexport function functionExpression(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionExpression {\n  return validateNode<t.FunctionExpression>({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  });\n}\nexport function identifier(name: string): t.Identifier {\n  return validateNode<t.Identifier>({\n    type: \"Identifier\",\n    name,\n  });\n}\nexport function ifStatement(\n  test: t.Expression,\n  consequent: t.Statement,\n  alternate: t.Statement | null = null,\n): t.IfStatement {\n  return validateNode<t.IfStatement>({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate,\n  });\n}\nexport function labeledStatement(\n  label: t.Identifier,\n  body: t.Statement,\n): t.LabeledStatement {\n  return validateNode<t.LabeledStatement>({\n    type: \"LabeledStatement\",\n    label,\n    body,\n  });\n}\nexport function stringLiteral(value: string): t.StringLiteral {\n  return validateNode<t.StringLiteral>({\n    type: \"StringLiteral\",\n    value,\n  });\n}\nexport function numericLiteral(value: number): t.NumericLiteral {\n  return validateNode<t.NumericLiteral>({\n    type: \"NumericLiteral\",\n    value,\n  });\n}\nexport function nullLiteral(): t.NullLiteral {\n  return {\n    type: \"NullLiteral\",\n  };\n}\nexport function booleanLiteral(value: boolean): t.BooleanLiteral {\n  return validateNode<t.BooleanLiteral>({\n    type: \"BooleanLiteral\",\n    value,\n  });\n}\nexport function regExpLiteral(\n  pattern: string,\n  flags: string = \"\",\n): t.RegExpLiteral {\n  return validateNode<t.RegExpLiteral>({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags,\n  });\n}\nexport function logicalExpression(\n  operator: \"||\" | \"&&\" | \"??\",\n  left: t.Expression,\n  right: t.Expression,\n): t.LogicalExpression {\n  return validateNode<t.LogicalExpression>({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right,\n  });\n}\nexport function memberExpression(\n  object: t.Expression | t.Super,\n  property: t.Expression | t.Identifier | t.PrivateName,\n  computed: boolean = false,\n  optional: true | false | null = null,\n): t.MemberExpression {\n  return validateNode<t.MemberExpression>({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  });\n}\nexport function newExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n): t.NewExpression {\n  return validateNode<t.NewExpression>({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments,\n  });\n}\nexport function program(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n  sourceType: \"script\" | \"module\" = \"script\",\n  interpreter: t.InterpreterDirective | null = null,\n): t.Program {\n  return validateNode<t.Program>({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n    sourceFile: null,\n  });\n}\nexport function objectExpression(\n  properties: Array<t.ObjectMethod | t.ObjectProperty | t.SpreadElement>,\n): t.ObjectExpression {\n  return validateNode<t.ObjectExpression>({\n    type: \"ObjectExpression\",\n    properties,\n  });\n}\nexport function objectMethod(\n  kind: \"method\" | \"get\" | \"set\" | undefined = \"method\",\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ObjectMethod {\n  return validateNode<t.ObjectMethod>({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async,\n  });\n}\nexport function objectProperty(\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.DecimalLiteral\n    | t.PrivateName,\n  value: t.Expression | t.PatternLike,\n  computed: boolean = false,\n  shorthand: boolean = false,\n  decorators: Array<t.Decorator> | null = null,\n): t.ObjectProperty {\n  return validateNode<t.ObjectProperty>({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators,\n  });\n}\nexport function restElement(argument: t.LVal): t.RestElement {\n  return validateNode<t.RestElement>({\n    type: \"RestElement\",\n    argument,\n  });\n}\nexport function returnStatement(\n  argument: t.Expression | null = null,\n): t.ReturnStatement {\n  return validateNode<t.ReturnStatement>({\n    type: \"ReturnStatement\",\n    argument,\n  });\n}\nexport function sequenceExpression(\n  expressions: Array<t.Expression>,\n): t.SequenceExpression {\n  return validateNode<t.SequenceExpression>({\n    type: \"SequenceExpression\",\n    expressions,\n  });\n}\nexport function parenthesizedExpression(\n  expression: t.Expression,\n): t.ParenthesizedExpression {\n  return validateNode<t.ParenthesizedExpression>({\n    type: \"ParenthesizedExpression\",\n    expression,\n  });\n}\nexport function switchCase(\n  test: t.Expression | null | undefined = null,\n  consequent: Array<t.Statement>,\n): t.SwitchCase {\n  return validateNode<t.SwitchCase>({\n    type: \"SwitchCase\",\n    test,\n    consequent,\n  });\n}\nexport function switchStatement(\n  discriminant: t.Expression,\n  cases: Array<t.SwitchCase>,\n): t.SwitchStatement {\n  return validateNode<t.SwitchStatement>({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases,\n  });\n}\nexport function thisExpression(): t.ThisExpression {\n  return {\n    type: \"ThisExpression\",\n  };\n}\nexport function throwStatement(argument: t.Expression): t.ThrowStatement {\n  return validateNode<t.ThrowStatement>({\n    type: \"ThrowStatement\",\n    argument,\n  });\n}\nexport function tryStatement(\n  block: t.BlockStatement,\n  handler: t.CatchClause | null = null,\n  finalizer: t.BlockStatement | null = null,\n): t.TryStatement {\n  return validateNode<t.TryStatement>({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer,\n  });\n}\nexport function unaryExpression(\n  operator: \"void\" | \"throw\" | \"delete\" | \"!\" | \"+\" | \"-\" | \"~\" | \"typeof\",\n  argument: t.Expression,\n  prefix: boolean = true,\n): t.UnaryExpression {\n  return validateNode<t.UnaryExpression>({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix,\n  });\n}\nexport function updateExpression(\n  operator: \"++\" | \"--\",\n  argument: t.Expression,\n  prefix: boolean = false,\n): t.UpdateExpression {\n  return validateNode<t.UpdateExpression>({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix,\n  });\n}\nexport function variableDeclaration(\n  kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  declarations: Array<t.VariableDeclarator>,\n): t.VariableDeclaration {\n  return validateNode<t.VariableDeclaration>({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations,\n  });\n}\nexport function variableDeclarator(\n  id: t.LVal,\n  init: t.Expression | null = null,\n): t.VariableDeclarator {\n  return validateNode<t.VariableDeclarator>({\n    type: \"VariableDeclarator\",\n    id,\n    init,\n  });\n}\nexport function whileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.WhileStatement {\n  return validateNode<t.WhileStatement>({\n    type: \"WhileStatement\",\n    test,\n    body,\n  });\n}\nexport function withStatement(\n  object: t.Expression,\n  body: t.Statement,\n): t.WithStatement {\n  return validateNode<t.WithStatement>({\n    type: \"WithStatement\",\n    object,\n    body,\n  });\n}\nexport function assignmentPattern(\n  left:\n    | t.Identifier\n    | t.ObjectPattern\n    | t.ArrayPattern\n    | t.MemberExpression\n    | t.TSAsExpression\n    | t.TSSatisfiesExpression\n    | t.TSTypeAssertion\n    | t.TSNonNullExpression,\n  right: t.Expression,\n): t.AssignmentPattern {\n  return validateNode<t.AssignmentPattern>({\n    type: \"AssignmentPattern\",\n    left,\n    right,\n  });\n}\nexport function arrayPattern(\n  elements: Array<null | t.PatternLike | t.LVal>,\n): t.ArrayPattern {\n  return validateNode<t.ArrayPattern>({\n    type: \"ArrayPattern\",\n    elements,\n  });\n}\nexport function arrowFunctionExpression(\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement | t.Expression,\n  async: boolean = false,\n): t.ArrowFunctionExpression {\n  return validateNode<t.ArrowFunctionExpression>({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null,\n  });\n}\nexport function classBody(\n  body: Array<\n    | t.ClassMethod\n    | t.ClassPrivateMethod\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty\n    | t.TSDeclareMethod\n    | t.TSIndexSignature\n    | t.StaticBlock\n  >,\n): t.ClassBody {\n  return validateNode<t.ClassBody>({\n    type: \"ClassBody\",\n    body,\n  });\n}\nexport function classExpression(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassExpression {\n  return validateNode<t.ClassExpression>({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators,\n  });\n}\nexport function classDeclaration(\n  id: t.Identifier,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassDeclaration {\n  return validateNode<t.ClassDeclaration>({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators,\n  });\n}\nexport function exportAllDeclaration(\n  source: t.StringLiteral,\n): t.ExportAllDeclaration {\n  return validateNode<t.ExportAllDeclaration>({\n    type: \"ExportAllDeclaration\",\n    source,\n  });\n}\nexport function exportDefaultDeclaration(\n  declaration:\n    | t.TSDeclareFunction\n    | t.FunctionDeclaration\n    | t.ClassDeclaration\n    | t.Expression,\n): t.ExportDefaultDeclaration {\n  return validateNode<t.ExportDefaultDeclaration>({\n    type: \"ExportDefaultDeclaration\",\n    declaration,\n  });\n}\nexport function exportNamedDeclaration(\n  declaration: t.Declaration | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier\n  > = [],\n  source: t.StringLiteral | null = null,\n): t.ExportNamedDeclaration {\n  return validateNode<t.ExportNamedDeclaration>({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  });\n}\nexport function exportSpecifier(\n  local: t.Identifier,\n  exported: t.Identifier | t.StringLiteral,\n): t.ExportSpecifier {\n  return validateNode<t.ExportSpecifier>({\n    type: \"ExportSpecifier\",\n    local,\n    exported,\n  });\n}\nexport function forOfStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n  _await: boolean = false,\n): t.ForOfStatement {\n  return validateNode<t.ForOfStatement>({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await,\n  });\n}\nexport function importDeclaration(\n  specifiers: Array<\n    t.ImportSpecifier | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier\n  >,\n  source: t.StringLiteral,\n): t.ImportDeclaration {\n  return validateNode<t.ImportDeclaration>({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source,\n  });\n}\nexport function importDefaultSpecifier(\n  local: t.Identifier,\n): t.ImportDefaultSpecifier {\n  return validateNode<t.ImportDefaultSpecifier>({\n    type: \"ImportDefaultSpecifier\",\n    local,\n  });\n}\nexport function importNamespaceSpecifier(\n  local: t.Identifier,\n): t.ImportNamespaceSpecifier {\n  return validateNode<t.ImportNamespaceSpecifier>({\n    type: \"ImportNamespaceSpecifier\",\n    local,\n  });\n}\nexport function importSpecifier(\n  local: t.Identifier,\n  imported: t.Identifier | t.StringLiteral,\n): t.ImportSpecifier {\n  return validateNode<t.ImportSpecifier>({\n    type: \"ImportSpecifier\",\n    local,\n    imported,\n  });\n}\nexport function metaProperty(\n  meta: t.Identifier,\n  property: t.Identifier,\n): t.MetaProperty {\n  return validateNode<t.MetaProperty>({\n    type: \"MetaProperty\",\n    meta,\n    property,\n  });\n}\nexport function classMethod(\n  kind: \"get\" | \"set\" | \"method\" | \"constructor\" | undefined = \"method\",\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  _static: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ClassMethod {\n  return validateNode<t.ClassMethod>({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async,\n  });\n}\nexport function objectPattern(\n  properties: Array<t.RestElement | t.ObjectProperty>,\n): t.ObjectPattern {\n  return validateNode<t.ObjectPattern>({\n    type: \"ObjectPattern\",\n    properties,\n  });\n}\nexport function spreadElement(argument: t.Expression): t.SpreadElement {\n  return validateNode<t.SpreadElement>({\n    type: \"SpreadElement\",\n    argument,\n  });\n}\nfunction _super(): t.Super {\n  return {\n    type: \"Super\",\n  };\n}\nexport { _super as super };\nexport function taggedTemplateExpression(\n  tag: t.Expression,\n  quasi: t.TemplateLiteral,\n): t.TaggedTemplateExpression {\n  return validateNode<t.TaggedTemplateExpression>({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi,\n  });\n}\nexport function templateElement(\n  value: { raw: string; cooked?: string },\n  tail: boolean = false,\n): t.TemplateElement {\n  return validateNode<t.TemplateElement>({\n    type: \"TemplateElement\",\n    value,\n    tail,\n  });\n}\nexport function templateLiteral(\n  quasis: Array<t.TemplateElement>,\n  expressions: Array<t.Expression | t.TSType>,\n): t.TemplateLiteral {\n  return validateNode<t.TemplateLiteral>({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions,\n  });\n}\nexport function yieldExpression(\n  argument: t.Expression | null = null,\n  delegate: boolean = false,\n): t.YieldExpression {\n  return validateNode<t.YieldExpression>({\n    type: \"YieldExpression\",\n    argument,\n    delegate,\n  });\n}\nexport function awaitExpression(argument: t.Expression): t.AwaitExpression {\n  return validateNode<t.AwaitExpression>({\n    type: \"AwaitExpression\",\n    argument,\n  });\n}\nfunction _import(): t.Import {\n  return {\n    type: \"Import\",\n  };\n}\nexport { _import as import };\nexport function bigIntLiteral(value: string): t.BigIntLiteral {\n  return validateNode<t.BigIntLiteral>({\n    type: \"BigIntLiteral\",\n    value,\n  });\n}\nexport function exportNamespaceSpecifier(\n  exported: t.Identifier,\n): t.ExportNamespaceSpecifier {\n  return validateNode<t.ExportNamespaceSpecifier>({\n    type: \"ExportNamespaceSpecifier\",\n    exported,\n  });\n}\nexport function optionalMemberExpression(\n  object: t.Expression,\n  property: t.Expression | t.Identifier,\n  computed: boolean | undefined = false,\n  optional: boolean,\n): t.OptionalMemberExpression {\n  return validateNode<t.OptionalMemberExpression>({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  });\n}\nexport function optionalCallExpression(\n  callee: t.Expression,\n  _arguments: Array<\n    t.Expression | t.SpreadElement | t.JSXNamespacedName | t.ArgumentPlaceholder\n  >,\n  optional: boolean,\n): t.OptionalCallExpression {\n  return validateNode<t.OptionalCallExpression>({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional,\n  });\n}\nexport function classProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassProperty {\n  return validateNode<t.ClassProperty>({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  });\n}\nexport function classAccessorProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression\n    | t.PrivateName,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassAccessorProperty {\n  return validateNode<t.ClassAccessorProperty>({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  });\n}\nexport function classPrivateProperty(\n  key: t.PrivateName,\n  value: t.Expression | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  _static: boolean = false,\n): t.ClassPrivateProperty {\n  return validateNode<t.ClassPrivateProperty>({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static,\n  });\n}\nexport function classPrivateMethod(\n  kind: \"get\" | \"set\" | \"method\" | undefined = \"method\",\n  key: t.PrivateName,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  _static: boolean = false,\n): t.ClassPrivateMethod {\n  return validateNode<t.ClassPrivateMethod>({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static,\n  });\n}\nexport function privateName(id: t.Identifier): t.PrivateName {\n  return validateNode<t.PrivateName>({\n    type: \"PrivateName\",\n    id,\n  });\n}\nexport function staticBlock(body: Array<t.Statement>): t.StaticBlock {\n  return validateNode<t.StaticBlock>({\n    type: \"StaticBlock\",\n    body,\n  });\n}\nexport function anyTypeAnnotation(): t.AnyTypeAnnotation {\n  return {\n    type: \"AnyTypeAnnotation\",\n  };\n}\nexport function arrayTypeAnnotation(\n  elementType: t.FlowType,\n): t.ArrayTypeAnnotation {\n  return validateNode<t.ArrayTypeAnnotation>({\n    type: \"ArrayTypeAnnotation\",\n    elementType,\n  });\n}\nexport function booleanTypeAnnotation(): t.BooleanTypeAnnotation {\n  return {\n    type: \"BooleanTypeAnnotation\",\n  };\n}\nexport function booleanLiteralTypeAnnotation(\n  value: boolean,\n): t.BooleanLiteralTypeAnnotation {\n  return validateNode<t.BooleanLiteralTypeAnnotation>({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function nullLiteralTypeAnnotation(): t.NullLiteralTypeAnnotation {\n  return {\n    type: \"NullLiteralTypeAnnotation\",\n  };\n}\nexport function classImplements(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.ClassImplements {\n  return validateNode<t.ClassImplements>({\n    type: \"ClassImplements\",\n    id,\n    typeParameters,\n  });\n}\nexport function declareClass(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareClass {\n  return validateNode<t.DeclareClass>({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function declareFunction(id: t.Identifier): t.DeclareFunction {\n  return validateNode<t.DeclareFunction>({\n    type: \"DeclareFunction\",\n    id,\n  });\n}\nexport function declareInterface(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareInterface {\n  return validateNode<t.DeclareInterface>({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function declareModule(\n  id: t.Identifier | t.StringLiteral,\n  body: t.BlockStatement,\n  kind: \"CommonJS\" | \"ES\" | null = null,\n): t.DeclareModule {\n  return validateNode<t.DeclareModule>({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind,\n  });\n}\nexport function declareModuleExports(\n  typeAnnotation: t.TypeAnnotation,\n): t.DeclareModuleExports {\n  return validateNode<t.DeclareModuleExports>({\n    type: \"DeclareModuleExports\",\n    typeAnnotation,\n  });\n}\nexport function declareTypeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.DeclareTypeAlias {\n  return validateNode<t.DeclareTypeAlias>({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right,\n  });\n}\nexport function declareOpaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null = null,\n  supertype: t.FlowType | null = null,\n): t.DeclareOpaqueType {\n  return validateNode<t.DeclareOpaqueType>({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n  });\n}\nexport function declareVariable(id: t.Identifier): t.DeclareVariable {\n  return validateNode<t.DeclareVariable>({\n    type: \"DeclareVariable\",\n    id,\n  });\n}\nexport function declareExportDeclaration(\n  declaration: t.Flow | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportNamespaceSpecifier\n  > | null = null,\n  source: t.StringLiteral | null = null,\n): t.DeclareExportDeclaration {\n  return validateNode<t.DeclareExportDeclaration>({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  });\n}\nexport function declareExportAllDeclaration(\n  source: t.StringLiteral,\n): t.DeclareExportAllDeclaration {\n  return validateNode<t.DeclareExportAllDeclaration>({\n    type: \"DeclareExportAllDeclaration\",\n    source,\n  });\n}\nexport function declaredPredicate(value: t.Flow): t.DeclaredPredicate {\n  return validateNode<t.DeclaredPredicate>({\n    type: \"DeclaredPredicate\",\n    value,\n  });\n}\nexport function existsTypeAnnotation(): t.ExistsTypeAnnotation {\n  return {\n    type: \"ExistsTypeAnnotation\",\n  };\n}\nexport function functionTypeAnnotation(\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  params: Array<t.FunctionTypeParam>,\n  rest: t.FunctionTypeParam | null | undefined = null,\n  returnType: t.FlowType,\n): t.FunctionTypeAnnotation {\n  return validateNode<t.FunctionTypeAnnotation>({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType,\n  });\n}\nexport function functionTypeParam(\n  name: t.Identifier | null | undefined = null,\n  typeAnnotation: t.FlowType,\n): t.FunctionTypeParam {\n  return validateNode<t.FunctionTypeParam>({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation,\n  });\n}\nexport function genericTypeAnnotation(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.GenericTypeAnnotation {\n  return validateNode<t.GenericTypeAnnotation>({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters,\n  });\n}\nexport function inferredPredicate(): t.InferredPredicate {\n  return {\n    type: \"InferredPredicate\",\n  };\n}\nexport function interfaceExtends(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.InterfaceExtends {\n  return validateNode<t.InterfaceExtends>({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters,\n  });\n}\nexport function interfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceDeclaration {\n  return validateNode<t.InterfaceDeclaration>({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport function interfaceTypeAnnotation(\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceTypeAnnotation {\n  return validateNode<t.InterfaceTypeAnnotation>({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body,\n  });\n}\nexport function intersectionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.IntersectionTypeAnnotation {\n  return validateNode<t.IntersectionTypeAnnotation>({\n    type: \"IntersectionTypeAnnotation\",\n    types,\n  });\n}\nexport function mixedTypeAnnotation(): t.MixedTypeAnnotation {\n  return {\n    type: \"MixedTypeAnnotation\",\n  };\n}\nexport function emptyTypeAnnotation(): t.EmptyTypeAnnotation {\n  return {\n    type: \"EmptyTypeAnnotation\",\n  };\n}\nexport function nullableTypeAnnotation(\n  typeAnnotation: t.FlowType,\n): t.NullableTypeAnnotation {\n  return validateNode<t.NullableTypeAnnotation>({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport function numberLiteralTypeAnnotation(\n  value: number,\n): t.NumberLiteralTypeAnnotation {\n  return validateNode<t.NumberLiteralTypeAnnotation>({\n    type: \"NumberLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function numberTypeAnnotation(): t.NumberTypeAnnotation {\n  return {\n    type: \"NumberTypeAnnotation\",\n  };\n}\nexport function objectTypeAnnotation(\n  properties: Array<t.ObjectTypeProperty | t.ObjectTypeSpreadProperty>,\n  indexers: Array<t.ObjectTypeIndexer> = [],\n  callProperties: Array<t.ObjectTypeCallProperty> = [],\n  internalSlots: Array<t.ObjectTypeInternalSlot> = [],\n  exact: boolean = false,\n): t.ObjectTypeAnnotation {\n  return validateNode<t.ObjectTypeAnnotation>({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact,\n  });\n}\nexport function objectTypeInternalSlot(\n  id: t.Identifier,\n  value: t.FlowType,\n  optional: boolean,\n  _static: boolean,\n  method: boolean,\n): t.ObjectTypeInternalSlot {\n  return validateNode<t.ObjectTypeInternalSlot>({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method,\n  });\n}\nexport function objectTypeCallProperty(\n  value: t.FlowType,\n): t.ObjectTypeCallProperty {\n  return validateNode<t.ObjectTypeCallProperty>({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null,\n  });\n}\nexport function objectTypeIndexer(\n  id: t.Identifier | null | undefined = null,\n  key: t.FlowType,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeIndexer {\n  return validateNode<t.ObjectTypeIndexer>({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null,\n  });\n}\nexport function objectTypeProperty(\n  key: t.Identifier | t.StringLiteral,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeProperty {\n  return validateNode<t.ObjectTypeProperty>({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null,\n  });\n}\nexport function objectTypeSpreadProperty(\n  argument: t.FlowType,\n): t.ObjectTypeSpreadProperty {\n  return validateNode<t.ObjectTypeSpreadProperty>({\n    type: \"ObjectTypeSpreadProperty\",\n    argument,\n  });\n}\nexport function opaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  supertype: t.FlowType | null | undefined = null,\n  impltype: t.FlowType,\n): t.OpaqueType {\n  return validateNode<t.OpaqueType>({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype,\n  });\n}\nexport function qualifiedTypeIdentifier(\n  id: t.Identifier,\n  qualification: t.Identifier | t.QualifiedTypeIdentifier,\n): t.QualifiedTypeIdentifier {\n  return validateNode<t.QualifiedTypeIdentifier>({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification,\n  });\n}\nexport function stringLiteralTypeAnnotation(\n  value: string,\n): t.StringLiteralTypeAnnotation {\n  return validateNode<t.StringLiteralTypeAnnotation>({\n    type: \"StringLiteralTypeAnnotation\",\n    value,\n  });\n}\nexport function stringTypeAnnotation(): t.StringTypeAnnotation {\n  return {\n    type: \"StringTypeAnnotation\",\n  };\n}\nexport function symbolTypeAnnotation(): t.SymbolTypeAnnotation {\n  return {\n    type: \"SymbolTypeAnnotation\",\n  };\n}\nexport function thisTypeAnnotation(): t.ThisTypeAnnotation {\n  return {\n    type: \"ThisTypeAnnotation\",\n  };\n}\nexport function tupleTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.TupleTypeAnnotation {\n  return validateNode<t.TupleTypeAnnotation>({\n    type: \"TupleTypeAnnotation\",\n    types,\n  });\n}\nexport function typeofTypeAnnotation(\n  argument: t.FlowType,\n): t.TypeofTypeAnnotation {\n  return validateNode<t.TypeofTypeAnnotation>({\n    type: \"TypeofTypeAnnotation\",\n    argument,\n  });\n}\nexport function typeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.TypeAlias {\n  return validateNode<t.TypeAlias>({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right,\n  });\n}\nexport function typeAnnotation(typeAnnotation: t.FlowType): t.TypeAnnotation {\n  return validateNode<t.TypeAnnotation>({\n    type: \"TypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport function typeCastExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TypeAnnotation,\n): t.TypeCastExpression {\n  return validateNode<t.TypeCastExpression>({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport function typeParameter(\n  bound: t.TypeAnnotation | null = null,\n  _default: t.FlowType | null = null,\n  variance: t.Variance | null = null,\n): t.TypeParameter {\n  return validateNode<t.TypeParameter>({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null,\n  });\n}\nexport function typeParameterDeclaration(\n  params: Array<t.TypeParameter>,\n): t.TypeParameterDeclaration {\n  return validateNode<t.TypeParameterDeclaration>({\n    type: \"TypeParameterDeclaration\",\n    params,\n  });\n}\nexport function typeParameterInstantiation(\n  params: Array<t.FlowType>,\n): t.TypeParameterInstantiation {\n  return validateNode<t.TypeParameterInstantiation>({\n    type: \"TypeParameterInstantiation\",\n    params,\n  });\n}\nexport function unionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.UnionTypeAnnotation {\n  return validateNode<t.UnionTypeAnnotation>({\n    type: \"UnionTypeAnnotation\",\n    types,\n  });\n}\nexport function variance(kind: \"minus\" | \"plus\"): t.Variance {\n  return validateNode<t.Variance>({\n    type: \"Variance\",\n    kind,\n  });\n}\nexport function voidTypeAnnotation(): t.VoidTypeAnnotation {\n  return {\n    type: \"VoidTypeAnnotation\",\n  };\n}\nexport function enumDeclaration(\n  id: t.Identifier,\n  body:\n    | t.EnumBooleanBody\n    | t.EnumNumberBody\n    | t.EnumStringBody\n    | t.EnumSymbolBody,\n): t.EnumDeclaration {\n  return validateNode<t.EnumDeclaration>({\n    type: \"EnumDeclaration\",\n    id,\n    body,\n  });\n}\nexport function enumBooleanBody(\n  members: Array<t.EnumBooleanMember>,\n): t.EnumBooleanBody {\n  return validateNode<t.EnumBooleanBody>({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumNumberBody(\n  members: Array<t.EnumNumberMember>,\n): t.EnumNumberBody {\n  return validateNode<t.EnumNumberBody>({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumStringBody(\n  members: Array<t.EnumStringMember | t.EnumDefaultedMember>,\n): t.EnumStringBody {\n  return validateNode<t.EnumStringBody>({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumSymbolBody(\n  members: Array<t.EnumDefaultedMember>,\n): t.EnumSymbolBody {\n  return validateNode<t.EnumSymbolBody>({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null,\n  });\n}\nexport function enumBooleanMember(id: t.Identifier): t.EnumBooleanMember {\n  return validateNode<t.EnumBooleanMember>({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null,\n  });\n}\nexport function enumNumberMember(\n  id: t.Identifier,\n  init: t.NumericLiteral,\n): t.EnumNumberMember {\n  return validateNode<t.EnumNumberMember>({\n    type: \"EnumNumberMember\",\n    id,\n    init,\n  });\n}\nexport function enumStringMember(\n  id: t.Identifier,\n  init: t.StringLiteral,\n): t.EnumStringMember {\n  return validateNode<t.EnumStringMember>({\n    type: \"EnumStringMember\",\n    id,\n    init,\n  });\n}\nexport function enumDefaultedMember(id: t.Identifier): t.EnumDefaultedMember {\n  return validateNode<t.EnumDefaultedMember>({\n    type: \"EnumDefaultedMember\",\n    id,\n  });\n}\nexport function indexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.IndexedAccessType {\n  return validateNode<t.IndexedAccessType>({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType,\n  });\n}\nexport function optionalIndexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.OptionalIndexedAccessType {\n  return validateNode<t.OptionalIndexedAccessType>({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null,\n  });\n}\nexport function jsxAttribute(\n  name: t.JSXIdentifier | t.JSXNamespacedName,\n  value:\n    | t.JSXElement\n    | t.JSXFragment\n    | t.StringLiteral\n    | t.JSXExpressionContainer\n    | null = null,\n): t.JSXAttribute {\n  return validateNode<t.JSXAttribute>({\n    type: \"JSXAttribute\",\n    name,\n    value,\n  });\n}\nexport { jsxAttribute as jSXAttribute };\nexport function jsxClosingElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n): t.JSXClosingElement {\n  return validateNode<t.JSXClosingElement>({\n    type: \"JSXClosingElement\",\n    name,\n  });\n}\nexport { jsxClosingElement as jSXClosingElement };\nexport function jsxElement(\n  openingElement: t.JSXOpeningElement,\n  closingElement: t.JSXClosingElement | null | undefined = null,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n  selfClosing: boolean | null = null,\n): t.JSXElement {\n  return validateNode<t.JSXElement>({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing,\n  });\n}\nexport { jsxElement as jSXElement };\nexport function jsxEmptyExpression(): t.JSXEmptyExpression {\n  return {\n    type: \"JSXEmptyExpression\",\n  };\n}\nexport { jsxEmptyExpression as jSXEmptyExpression };\nexport function jsxExpressionContainer(\n  expression: t.Expression | t.JSXEmptyExpression,\n): t.JSXExpressionContainer {\n  return validateNode<t.JSXExpressionContainer>({\n    type: \"JSXExpressionContainer\",\n    expression,\n  });\n}\nexport { jsxExpressionContainer as jSXExpressionContainer };\nexport function jsxSpreadChild(expression: t.Expression): t.JSXSpreadChild {\n  return validateNode<t.JSXSpreadChild>({\n    type: \"JSXSpreadChild\",\n    expression,\n  });\n}\nexport { jsxSpreadChild as jSXSpreadChild };\nexport function jsxIdentifier(name: string): t.JSXIdentifier {\n  return validateNode<t.JSXIdentifier>({\n    type: \"JSXIdentifier\",\n    name,\n  });\n}\nexport { jsxIdentifier as jSXIdentifier };\nexport function jsxMemberExpression(\n  object: t.JSXMemberExpression | t.JSXIdentifier,\n  property: t.JSXIdentifier,\n): t.JSXMemberExpression {\n  return validateNode<t.JSXMemberExpression>({\n    type: \"JSXMemberExpression\",\n    object,\n    property,\n  });\n}\nexport { jsxMemberExpression as jSXMemberExpression };\nexport function jsxNamespacedName(\n  namespace: t.JSXIdentifier,\n  name: t.JSXIdentifier,\n): t.JSXNamespacedName {\n  return validateNode<t.JSXNamespacedName>({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name,\n  });\n}\nexport { jsxNamespacedName as jSXNamespacedName };\nexport function jsxOpeningElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n  attributes: Array<t.JSXAttribute | t.JSXSpreadAttribute>,\n  selfClosing: boolean = false,\n): t.JSXOpeningElement {\n  return validateNode<t.JSXOpeningElement>({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing,\n  });\n}\nexport { jsxOpeningElement as jSXOpeningElement };\nexport function jsxSpreadAttribute(\n  argument: t.Expression,\n): t.JSXSpreadAttribute {\n  return validateNode<t.JSXSpreadAttribute>({\n    type: \"JSXSpreadAttribute\",\n    argument,\n  });\n}\nexport { jsxSpreadAttribute as jSXSpreadAttribute };\nexport function jsxText(value: string): t.JSXText {\n  return validateNode<t.JSXText>({\n    type: \"JSXText\",\n    value,\n  });\n}\nexport { jsxText as jSXText };\nexport function jsxFragment(\n  openingFragment: t.JSXOpeningFragment,\n  closingFragment: t.JSXClosingFragment,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n): t.JSXFragment {\n  return validateNode<t.JSXFragment>({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children,\n  });\n}\nexport { jsxFragment as jSXFragment };\nexport function jsxOpeningFragment(): t.JSXOpeningFragment {\n  return {\n    type: \"JSXOpeningFragment\",\n  };\n}\nexport { jsxOpeningFragment as jSXOpeningFragment };\nexport function jsxClosingFragment(): t.JSXClosingFragment {\n  return {\n    type: \"JSXClosingFragment\",\n  };\n}\nexport { jsxClosingFragment as jSXClosingFragment };\nexport function noop(): t.Noop {\n  return {\n    type: \"Noop\",\n  };\n}\nexport function placeholder(\n  expectedNode:\n    | \"Identifier\"\n    | \"StringLiteral\"\n    | \"Expression\"\n    | \"Statement\"\n    | \"Declaration\"\n    | \"BlockStatement\"\n    | \"ClassBody\"\n    | \"Pattern\",\n  name: t.Identifier,\n): t.Placeholder {\n  return validateNode<t.Placeholder>({\n    type: \"Placeholder\",\n    expectedNode,\n    name,\n  });\n}\nexport function v8IntrinsicIdentifier(name: string): t.V8IntrinsicIdentifier {\n  return validateNode<t.V8IntrinsicIdentifier>({\n    type: \"V8IntrinsicIdentifier\",\n    name,\n  });\n}\nexport function argumentPlaceholder(): t.ArgumentPlaceholder {\n  return {\n    type: \"ArgumentPlaceholder\",\n  };\n}\nexport function bindExpression(\n  object: t.Expression,\n  callee: t.Expression,\n): t.BindExpression {\n  return validateNode<t.BindExpression>({\n    type: \"BindExpression\",\n    object,\n    callee,\n  });\n}\nexport function importAttribute(\n  key: t.Identifier | t.StringLiteral,\n  value: t.StringLiteral,\n): t.ImportAttribute {\n  return validateNode<t.ImportAttribute>({\n    type: \"ImportAttribute\",\n    key,\n    value,\n  });\n}\nexport function decorator(expression: t.Expression): t.Decorator {\n  return validateNode<t.Decorator>({\n    type: \"Decorator\",\n    expression,\n  });\n}\nexport function doExpression(\n  body: t.BlockStatement,\n  async: boolean = false,\n): t.DoExpression {\n  return validateNode<t.DoExpression>({\n    type: \"DoExpression\",\n    body,\n    async,\n  });\n}\nexport function exportDefaultSpecifier(\n  exported: t.Identifier,\n): t.ExportDefaultSpecifier {\n  return validateNode<t.ExportDefaultSpecifier>({\n    type: \"ExportDefaultSpecifier\",\n    exported,\n  });\n}\nexport function recordExpression(\n  properties: Array<t.ObjectProperty | t.SpreadElement>,\n): t.RecordExpression {\n  return validateNode<t.RecordExpression>({\n    type: \"RecordExpression\",\n    properties,\n  });\n}\nexport function tupleExpression(\n  elements: Array<t.Expression | t.SpreadElement> = [],\n): t.TupleExpression {\n  return validateNode<t.TupleExpression>({\n    type: \"TupleExpression\",\n    elements,\n  });\n}\nexport function decimalLiteral(value: string): t.DecimalLiteral {\n  return validateNode<t.DecimalLiteral>({\n    type: \"DecimalLiteral\",\n    value,\n  });\n}\nexport function moduleExpression(body: t.Program): t.ModuleExpression {\n  return validateNode<t.ModuleExpression>({\n    type: \"ModuleExpression\",\n    body,\n  });\n}\nexport function topicReference(): t.TopicReference {\n  return {\n    type: \"TopicReference\",\n  };\n}\nexport function pipelineTopicExpression(\n  expression: t.Expression,\n): t.PipelineTopicExpression {\n  return validateNode<t.PipelineTopicExpression>({\n    type: \"PipelineTopicExpression\",\n    expression,\n  });\n}\nexport function pipelineBareFunction(\n  callee: t.Expression,\n): t.PipelineBareFunction {\n  return validateNode<t.PipelineBareFunction>({\n    type: \"PipelineBareFunction\",\n    callee,\n  });\n}\nexport function pipelinePrimaryTopicReference(): t.PipelinePrimaryTopicReference {\n  return {\n    type: \"PipelinePrimaryTopicReference\",\n  };\n}\nexport function tsParameterProperty(\n  parameter: t.Identifier | t.AssignmentPattern,\n): t.TSParameterProperty {\n  return validateNode<t.TSParameterProperty>({\n    type: \"TSParameterProperty\",\n    parameter,\n  });\n}\nexport { tsParameterProperty as tSParameterProperty };\nexport function tsDeclareFunction(\n  id: t.Identifier | null | undefined = null,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareFunction {\n  return validateNode<t.TSDeclareFunction>({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType,\n  });\n}\nexport { tsDeclareFunction as tSDeclareFunction };\nexport function tsDeclareMethod(\n  decorators: Array<t.Decorator> | null | undefined = null,\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareMethod {\n  return validateNode<t.TSDeclareMethod>({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType,\n  });\n}\nexport { tsDeclareMethod as tSDeclareMethod };\nexport function tsQualifiedName(\n  left: t.TSEntityName,\n  right: t.Identifier,\n): t.TSQualifiedName {\n  return validateNode<t.TSQualifiedName>({\n    type: \"TSQualifiedName\",\n    left,\n    right,\n  });\n}\nexport { tsQualifiedName as tSQualifiedName };\nexport function tsCallSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSCallSignatureDeclaration {\n  return validateNode<t.TSCallSignatureDeclaration>({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsCallSignatureDeclaration as tSCallSignatureDeclaration };\nexport function tsConstructSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructSignatureDeclaration {\n  return validateNode<t.TSConstructSignatureDeclaration>({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsConstructSignatureDeclaration as tSConstructSignatureDeclaration };\nexport function tsPropertySignature(\n  key: t.Expression,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  initializer: t.Expression | null = null,\n): t.TSPropertySignature {\n  return validateNode<t.TSPropertySignature>({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    initializer,\n    kind: null,\n  });\n}\nexport { tsPropertySignature as tSPropertySignature };\nexport function tsMethodSignature(\n  key: t.Expression,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSMethodSignature {\n  return validateNode<t.TSMethodSignature>({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null,\n  });\n}\nexport { tsMethodSignature as tSMethodSignature };\nexport function tsIndexSignature(\n  parameters: Array<t.Identifier>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSIndexSignature {\n  return validateNode<t.TSIndexSignature>({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsIndexSignature as tSIndexSignature };\nexport function tsAnyKeyword(): t.TSAnyKeyword {\n  return {\n    type: \"TSAnyKeyword\",\n  };\n}\nexport { tsAnyKeyword as tSAnyKeyword };\nexport function tsBooleanKeyword(): t.TSBooleanKeyword {\n  return {\n    type: \"TSBooleanKeyword\",\n  };\n}\nexport { tsBooleanKeyword as tSBooleanKeyword };\nexport function tsBigIntKeyword(): t.TSBigIntKeyword {\n  return {\n    type: \"TSBigIntKeyword\",\n  };\n}\nexport { tsBigIntKeyword as tSBigIntKeyword };\nexport function tsIntrinsicKeyword(): t.TSIntrinsicKeyword {\n  return {\n    type: \"TSIntrinsicKeyword\",\n  };\n}\nexport { tsIntrinsicKeyword as tSIntrinsicKeyword };\nexport function tsNeverKeyword(): t.TSNeverKeyword {\n  return {\n    type: \"TSNeverKeyword\",\n  };\n}\nexport { tsNeverKeyword as tSNeverKeyword };\nexport function tsNullKeyword(): t.TSNullKeyword {\n  return {\n    type: \"TSNullKeyword\",\n  };\n}\nexport { tsNullKeyword as tSNullKeyword };\nexport function tsNumberKeyword(): t.TSNumberKeyword {\n  return {\n    type: \"TSNumberKeyword\",\n  };\n}\nexport { tsNumberKeyword as tSNumberKeyword };\nexport function tsObjectKeyword(): t.TSObjectKeyword {\n  return {\n    type: \"TSObjectKeyword\",\n  };\n}\nexport { tsObjectKeyword as tSObjectKeyword };\nexport function tsStringKeyword(): t.TSStringKeyword {\n  return {\n    type: \"TSStringKeyword\",\n  };\n}\nexport { tsStringKeyword as tSStringKeyword };\nexport function tsSymbolKeyword(): t.TSSymbolKeyword {\n  return {\n    type: \"TSSymbolKeyword\",\n  };\n}\nexport { tsSymbolKeyword as tSSymbolKeyword };\nexport function tsUndefinedKeyword(): t.TSUndefinedKeyword {\n  return {\n    type: \"TSUndefinedKeyword\",\n  };\n}\nexport { tsUndefinedKeyword as tSUndefinedKeyword };\nexport function tsUnknownKeyword(): t.TSUnknownKeyword {\n  return {\n    type: \"TSUnknownKeyword\",\n  };\n}\nexport { tsUnknownKeyword as tSUnknownKeyword };\nexport function tsVoidKeyword(): t.TSVoidKeyword {\n  return {\n    type: \"TSVoidKeyword\",\n  };\n}\nexport { tsVoidKeyword as tSVoidKeyword };\nexport function tsThisType(): t.TSThisType {\n  return {\n    type: \"TSThisType\",\n  };\n}\nexport { tsThisType as tSThisType };\nexport function tsFunctionType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSFunctionType {\n  return validateNode<t.TSFunctionType>({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsFunctionType as tSFunctionType };\nexport function tsConstructorType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<t.Identifier | t.RestElement>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructorType {\n  return validateNode<t.TSConstructorType>({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  });\n}\nexport { tsConstructorType as tSConstructorType };\nexport function tsTypeReference(\n  typeName: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeReference {\n  return validateNode<t.TSTypeReference>({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters,\n  });\n}\nexport { tsTypeReference as tSTypeReference };\nexport function tsTypePredicate(\n  parameterName: t.Identifier | t.TSThisType,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  asserts: boolean | null = null,\n): t.TSTypePredicate {\n  return validateNode<t.TSTypePredicate>({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts,\n  });\n}\nexport { tsTypePredicate as tSTypePredicate };\nexport function tsTypeQuery(\n  exprName: t.TSEntityName | t.TSImportType,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeQuery {\n  return validateNode<t.TSTypeQuery>({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters,\n  });\n}\nexport { tsTypeQuery as tSTypeQuery };\nexport function tsTypeLiteral(\n  members: Array<t.TSTypeElement>,\n): t.TSTypeLiteral {\n  return validateNode<t.TSTypeLiteral>({\n    type: \"TSTypeLiteral\",\n    members,\n  });\n}\nexport { tsTypeLiteral as tSTypeLiteral };\nexport function tsArrayType(elementType: t.TSType): t.TSArrayType {\n  return validateNode<t.TSArrayType>({\n    type: \"TSArrayType\",\n    elementType,\n  });\n}\nexport { tsArrayType as tSArrayType };\nexport function tsTupleType(\n  elementTypes: Array<t.TSType | t.TSNamedTupleMember>,\n): t.TSTupleType {\n  return validateNode<t.TSTupleType>({\n    type: \"TSTupleType\",\n    elementTypes,\n  });\n}\nexport { tsTupleType as tSTupleType };\nexport function tsOptionalType(typeAnnotation: t.TSType): t.TSOptionalType {\n  return validateNode<t.TSOptionalType>({\n    type: \"TSOptionalType\",\n    typeAnnotation,\n  });\n}\nexport { tsOptionalType as tSOptionalType };\nexport function tsRestType(typeAnnotation: t.TSType): t.TSRestType {\n  return validateNode<t.TSRestType>({\n    type: \"TSRestType\",\n    typeAnnotation,\n  });\n}\nexport { tsRestType as tSRestType };\nexport function tsNamedTupleMember(\n  label: t.Identifier,\n  elementType: t.TSType,\n  optional: boolean = false,\n): t.TSNamedTupleMember {\n  return validateNode<t.TSNamedTupleMember>({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional,\n  });\n}\nexport { tsNamedTupleMember as tSNamedTupleMember };\nexport function tsUnionType(types: Array<t.TSType>): t.TSUnionType {\n  return validateNode<t.TSUnionType>({\n    type: \"TSUnionType\",\n    types,\n  });\n}\nexport { tsUnionType as tSUnionType };\nexport function tsIntersectionType(\n  types: Array<t.TSType>,\n): t.TSIntersectionType {\n  return validateNode<t.TSIntersectionType>({\n    type: \"TSIntersectionType\",\n    types,\n  });\n}\nexport { tsIntersectionType as tSIntersectionType };\nexport function tsConditionalType(\n  checkType: t.TSType,\n  extendsType: t.TSType,\n  trueType: t.TSType,\n  falseType: t.TSType,\n): t.TSConditionalType {\n  return validateNode<t.TSConditionalType>({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType,\n  });\n}\nexport { tsConditionalType as tSConditionalType };\nexport function tsInferType(typeParameter: t.TSTypeParameter): t.TSInferType {\n  return validateNode<t.TSInferType>({\n    type: \"TSInferType\",\n    typeParameter,\n  });\n}\nexport { tsInferType as tSInferType };\nexport function tsParenthesizedType(\n  typeAnnotation: t.TSType,\n): t.TSParenthesizedType {\n  return validateNode<t.TSParenthesizedType>({\n    type: \"TSParenthesizedType\",\n    typeAnnotation,\n  });\n}\nexport { tsParenthesizedType as tSParenthesizedType };\nexport function tsTypeOperator(typeAnnotation: t.TSType): t.TSTypeOperator {\n  return validateNode<t.TSTypeOperator>({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null,\n  });\n}\nexport { tsTypeOperator as tSTypeOperator };\nexport function tsIndexedAccessType(\n  objectType: t.TSType,\n  indexType: t.TSType,\n): t.TSIndexedAccessType {\n  return validateNode<t.TSIndexedAccessType>({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType,\n  });\n}\nexport { tsIndexedAccessType as tSIndexedAccessType };\nexport function tsMappedType(\n  typeParameter: t.TSTypeParameter,\n  typeAnnotation: t.TSType | null = null,\n  nameType: t.TSType | null = null,\n): t.TSMappedType {\n  return validateNode<t.TSMappedType>({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType,\n  });\n}\nexport { tsMappedType as tSMappedType };\nexport function tsLiteralType(\n  literal:\n    | t.NumericLiteral\n    | t.StringLiteral\n    | t.BooleanLiteral\n    | t.BigIntLiteral\n    | t.TemplateLiteral\n    | t.UnaryExpression,\n): t.TSLiteralType {\n  return validateNode<t.TSLiteralType>({\n    type: \"TSLiteralType\",\n    literal,\n  });\n}\nexport { tsLiteralType as tSLiteralType };\nexport function tsExpressionWithTypeArguments(\n  expression: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSExpressionWithTypeArguments {\n  return validateNode<t.TSExpressionWithTypeArguments>({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters,\n  });\n}\nexport { tsExpressionWithTypeArguments as tSExpressionWithTypeArguments };\nexport function tsInterfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.TSExpressionWithTypeArguments> | null | undefined = null,\n  body: t.TSInterfaceBody,\n): t.TSInterfaceDeclaration {\n  return validateNode<t.TSInterfaceDeclaration>({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  });\n}\nexport { tsInterfaceDeclaration as tSInterfaceDeclaration };\nexport function tsInterfaceBody(\n  body: Array<t.TSTypeElement>,\n): t.TSInterfaceBody {\n  return validateNode<t.TSInterfaceBody>({\n    type: \"TSInterfaceBody\",\n    body,\n  });\n}\nexport { tsInterfaceBody as tSInterfaceBody };\nexport function tsTypeAliasDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  typeAnnotation: t.TSType,\n): t.TSTypeAliasDeclaration {\n  return validateNode<t.TSTypeAliasDeclaration>({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation,\n  });\n}\nexport { tsTypeAliasDeclaration as tSTypeAliasDeclaration };\nexport function tsInstantiationExpression(\n  expression: t.Expression,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSInstantiationExpression {\n  return validateNode<t.TSInstantiationExpression>({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters,\n  });\n}\nexport { tsInstantiationExpression as tSInstantiationExpression };\nexport function tsAsExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSAsExpression {\n  return validateNode<t.TSAsExpression>({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport { tsAsExpression as tSAsExpression };\nexport function tsSatisfiesExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSSatisfiesExpression {\n  return validateNode<t.TSSatisfiesExpression>({\n    type: \"TSSatisfiesExpression\",\n    expression,\n    typeAnnotation,\n  });\n}\nexport { tsSatisfiesExpression as tSSatisfiesExpression };\nexport function tsTypeAssertion(\n  typeAnnotation: t.TSType,\n  expression: t.Expression,\n): t.TSTypeAssertion {\n  return validateNode<t.TSTypeAssertion>({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression,\n  });\n}\nexport { tsTypeAssertion as tSTypeAssertion };\nexport function tsEnumDeclaration(\n  id: t.Identifier,\n  members: Array<t.TSEnumMember>,\n): t.TSEnumDeclaration {\n  return validateNode<t.TSEnumDeclaration>({\n    type: \"TSEnumDeclaration\",\n    id,\n    members,\n  });\n}\nexport { tsEnumDeclaration as tSEnumDeclaration };\nexport function tsEnumMember(\n  id: t.Identifier | t.StringLiteral,\n  initializer: t.Expression | null = null,\n): t.TSEnumMember {\n  return validateNode<t.TSEnumMember>({\n    type: \"TSEnumMember\",\n    id,\n    initializer,\n  });\n}\nexport { tsEnumMember as tSEnumMember };\nexport function tsModuleDeclaration(\n  id: t.Identifier | t.StringLiteral,\n  body: t.TSModuleBlock | t.TSModuleDeclaration,\n): t.TSModuleDeclaration {\n  return validateNode<t.TSModuleDeclaration>({\n    type: \"TSModuleDeclaration\",\n    id,\n    body,\n  });\n}\nexport { tsModuleDeclaration as tSModuleDeclaration };\nexport function tsModuleBlock(body: Array<t.Statement>): t.TSModuleBlock {\n  return validateNode<t.TSModuleBlock>({\n    type: \"TSModuleBlock\",\n    body,\n  });\n}\nexport { tsModuleBlock as tSModuleBlock };\nexport function tsImportType(\n  argument: t.StringLiteral,\n  qualifier: t.TSEntityName | null = null,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSImportType {\n  return validateNode<t.TSImportType>({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters,\n  });\n}\nexport { tsImportType as tSImportType };\nexport function tsImportEqualsDeclaration(\n  id: t.Identifier,\n  moduleReference: t.TSEntityName | t.TSExternalModuleReference,\n): t.TSImportEqualsDeclaration {\n  return validateNode<t.TSImportEqualsDeclaration>({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null,\n  });\n}\nexport { tsImportEqualsDeclaration as tSImportEqualsDeclaration };\nexport function tsExternalModuleReference(\n  expression: t.StringLiteral,\n): t.TSExternalModuleReference {\n  return validateNode<t.TSExternalModuleReference>({\n    type: \"TSExternalModuleReference\",\n    expression,\n  });\n}\nexport { tsExternalModuleReference as tSExternalModuleReference };\nexport function tsNonNullExpression(\n  expression: t.Expression,\n): t.TSNonNullExpression {\n  return validateNode<t.TSNonNullExpression>({\n    type: \"TSNonNullExpression\",\n    expression,\n  });\n}\nexport { tsNonNullExpression as tSNonNullExpression };\nexport function tsExportAssignment(\n  expression: t.Expression,\n): t.TSExportAssignment {\n  return validateNode<t.TSExportAssignment>({\n    type: \"TSExportAssignment\",\n    expression,\n  });\n}\nexport { tsExportAssignment as tSExportAssignment };\nexport function tsNamespaceExportDeclaration(\n  id: t.Identifier,\n): t.TSNamespaceExportDeclaration {\n  return validateNode<t.TSNamespaceExportDeclaration>({\n    type: \"TSNamespaceExportDeclaration\",\n    id,\n  });\n}\nexport { tsNamespaceExportDeclaration as tSNamespaceExportDeclaration };\nexport function tsTypeAnnotation(typeAnnotation: t.TSType): t.TSTypeAnnotation {\n  return validateNode<t.TSTypeAnnotation>({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation,\n  });\n}\nexport { tsTypeAnnotation as tSTypeAnnotation };\nexport function tsTypeParameterInstantiation(\n  params: Array<t.TSType>,\n): t.TSTypeParameterInstantiation {\n  return validateNode<t.TSTypeParameterInstantiation>({\n    type: \"TSTypeParameterInstantiation\",\n    params,\n  });\n}\nexport { tsTypeParameterInstantiation as tSTypeParameterInstantiation };\nexport function tsTypeParameterDeclaration(\n  params: Array<t.TSTypeParameter>,\n): t.TSTypeParameterDeclaration {\n  return validateNode<t.TSTypeParameterDeclaration>({\n    type: \"TSTypeParameterDeclaration\",\n    params,\n  });\n}\nexport { tsTypeParameterDeclaration as tSTypeParameterDeclaration };\nexport function tsTypeParameter(\n  constraint: t.TSType | null | undefined = null,\n  _default: t.TSType | null | undefined = null,\n  name: string,\n): t.TSTypeParameter {\n  return validateNode<t.TSTypeParameter>({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name,\n  });\n}\nexport { tsTypeParameter as tSTypeParameter };\n/** @deprecated */\nfunction NumberLiteral(value: number) {\n  deprecationWarning(\"NumberLiteral\", \"NumericLiteral\", \"The node type \");\n  return numericLiteral(value);\n}\nexport { NumberLiteral as numberLiteral };\n/** @deprecated */\nfunction RegexLiteral(pattern: string, flags: string = \"\") {\n  deprecationWarning(\"RegexLiteral\", \"RegExpLiteral\", \"The node type \");\n  return regExpLiteral(pattern, flags);\n}\nexport { RegexLiteral as regexLiteral };\n/** @deprecated */\nfunction RestProperty(argument: t.LVal) {\n  deprecationWarning(\"RestProperty\", \"RestElement\", \"The node type \");\n  return restElement(argument);\n}\nexport { RestProperty as restProperty };\n/** @deprecated */\nfunction SpreadProperty(argument: t.Expression) {\n  deprecationWarning(\"SpreadProperty\", \"SpreadElement\", \"The node type \");\n  return spreadElement(argument);\n}\nexport { SpreadProperty as spreadProperty };\n", "import { stringLiteral } from \"../../builders/generated\";\nimport type * as t from \"../..\";\nimport { inherits } from \"../..\";\n\nexport default function cleanJSXElementLiteralChild(\n  child: t.JSXText,\n  args: Array<t.Node>,\n) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    // trim whitespace touching an endline\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(inherits(stringLiteral(str), child));\n}\n", "import {\n  isJSXText,\n  isJSXExpressionContainer,\n  isJSXEmptyExpression,\n} from \"../../validators/generated\";\nimport cleanJSXElementLiteralChild from \"../../utils/react/cleanJSXElementLiteralChild\";\nimport type * as t from \"../..\";\n\ntype ReturnedChild =\n  | t.JSXSpreadChild\n  | t.JSXElement\n  | t.JSXFragment\n  | t.Expression;\n\nexport default function buildChildren(\n  node: t.JSXElement | t.JSXFragment,\n): ReturnedChild[] {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child: any = node.children[i];\n\n    if (isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elements);\n      continue;\n    }\n\n    if (isJSXExpressionContainer(child)) child = child.expression;\n    if (isJSXEmptyExpression(child)) continue;\n\n    elements.push(child);\n  }\n\n  return elements;\n}\n", "import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport default function isNode(node: any): node is t.Node {\n  return !!(node && VISITOR_KEYS[node.type]);\n}\n", "import isNode from \"../validators/isNode\";\nimport type * as t from \"..\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport is from \"../../validators/is\";\nimport type * as t from \"../..\";\nimport deprecationWarning from \"../../utils/deprecationWarning\";\n\nfunction assert(type: string, node: any, opts?: any): void {\n  if (!is(type, node, opts)) {\n    throw new Error(\n      `Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` +\n        `but instead got \"${node.type}\".`,\n    );\n  }\n}\n\nexport function assertArrayExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayExpression {\n  assert(\"ArrayExpression\", node, opts);\n}\nexport function assertAssignmentExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentExpression {\n  assert(\"AssignmentExpression\", node, opts);\n}\nexport function assertBinaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BinaryExpression {\n  assert(\"BinaryExpression\", node, opts);\n}\nexport function assertInterpreterDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterpreterDirective {\n  assert(\"InterpreterDirective\", node, opts);\n}\nexport function assertDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Directive {\n  assert(\"Directive\", node, opts);\n}\nexport function assertDirectiveLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DirectiveLiteral {\n  assert(\"DirectiveLiteral\", node, opts);\n}\nexport function assertBlockStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockStatement {\n  assert(\"BlockStatement\", node, opts);\n}\nexport function assertBreakStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BreakStatement {\n  assert(\"BreakStatement\", node, opts);\n}\nexport function assertCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CallExpression {\n  assert(\"CallExpression\", node, opts);\n}\nexport function assertCatchClause(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CatchClause {\n  assert(\"CatchClause\", node, opts);\n}\nexport function assertConditionalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ConditionalExpression {\n  assert(\"ConditionalExpression\", node, opts);\n}\nexport function assertContinueStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ContinueStatement {\n  assert(\"ContinueStatement\", node, opts);\n}\nexport function assertDebuggerStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DebuggerStatement {\n  assert(\"DebuggerStatement\", node, opts);\n}\nexport function assertDoWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoWhileStatement {\n  assert(\"DoWhileStatement\", node, opts);\n}\nexport function assertEmptyStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyStatement {\n  assert(\"EmptyStatement\", node, opts);\n}\nexport function assertExpressionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionStatement {\n  assert(\"ExpressionStatement\", node, opts);\n}\nexport function assertFile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.File {\n  assert(\"File\", node, opts);\n}\nexport function assertForInStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForInStatement {\n  assert(\"ForInStatement\", node, opts);\n}\nexport function assertForStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForStatement {\n  assert(\"ForStatement\", node, opts);\n}\nexport function assertFunctionDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionDeclaration {\n  assert(\"FunctionDeclaration\", node, opts);\n}\nexport function assertFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionExpression {\n  assert(\"FunctionExpression\", node, opts);\n}\nexport function assertIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Identifier {\n  assert(\"Identifier\", node, opts);\n}\nexport function assertIfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IfStatement {\n  assert(\"IfStatement\", node, opts);\n}\nexport function assertLabeledStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LabeledStatement {\n  assert(\"LabeledStatement\", node, opts);\n}\nexport function assertStringLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteral {\n  assert(\"StringLiteral\", node, opts);\n}\nexport function assertNumericLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumericLiteral {\n  assert(\"NumericLiteral\", node, opts);\n}\nexport function assertNullLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteral {\n  assert(\"NullLiteral\", node, opts);\n}\nexport function assertBooleanLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteral {\n  assert(\"BooleanLiteral\", node, opts);\n}\nexport function assertRegExpLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RegExpLiteral {\n  assert(\"RegExpLiteral\", node, opts);\n}\nexport function assertLogicalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LogicalExpression {\n  assert(\"LogicalExpression\", node, opts);\n}\nexport function assertMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MemberExpression {\n  assert(\"MemberExpression\", node, opts);\n}\nexport function assertNewExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NewExpression {\n  assert(\"NewExpression\", node, opts);\n}\nexport function assertProgram(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Program {\n  assert(\"Program\", node, opts);\n}\nexport function assertObjectExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectExpression {\n  assert(\"ObjectExpression\", node, opts);\n}\nexport function assertObjectMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMethod {\n  assert(\"ObjectMethod\", node, opts);\n}\nexport function assertObjectProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectProperty {\n  assert(\"ObjectProperty\", node, opts);\n}\nexport function assertRestElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RestElement {\n  assert(\"RestElement\", node, opts);\n}\nexport function assertReturnStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ReturnStatement {\n  assert(\"ReturnStatement\", node, opts);\n}\nexport function assertSequenceExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SequenceExpression {\n  assert(\"SequenceExpression\", node, opts);\n}\nexport function assertParenthesizedExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ParenthesizedExpression {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\nexport function assertSwitchCase(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchCase {\n  assert(\"SwitchCase\", node, opts);\n}\nexport function assertSwitchStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchStatement {\n  assert(\"SwitchStatement\", node, opts);\n}\nexport function assertThisExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisExpression {\n  assert(\"ThisExpression\", node, opts);\n}\nexport function assertThrowStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThrowStatement {\n  assert(\"ThrowStatement\", node, opts);\n}\nexport function assertTryStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TryStatement {\n  assert(\"TryStatement\", node, opts);\n}\nexport function assertUnaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryExpression {\n  assert(\"UnaryExpression\", node, opts);\n}\nexport function assertUpdateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UpdateExpression {\n  assert(\"UpdateExpression\", node, opts);\n}\nexport function assertVariableDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclaration {\n  assert(\"VariableDeclaration\", node, opts);\n}\nexport function assertVariableDeclarator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclarator {\n  assert(\"VariableDeclarator\", node, opts);\n}\nexport function assertWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WhileStatement {\n  assert(\"WhileStatement\", node, opts);\n}\nexport function assertWithStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WithStatement {\n  assert(\"WithStatement\", node, opts);\n}\nexport function assertAssignmentPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentPattern {\n  assert(\"AssignmentPattern\", node, opts);\n}\nexport function assertArrayPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayPattern {\n  assert(\"ArrayPattern\", node, opts);\n}\nexport function assertArrowFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrowFunctionExpression {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\nexport function assertClassBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassBody {\n  assert(\"ClassBody\", node, opts);\n}\nexport function assertClassExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassExpression {\n  assert(\"ClassExpression\", node, opts);\n}\nexport function assertClassDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassDeclaration {\n  assert(\"ClassDeclaration\", node, opts);\n}\nexport function assertExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportAllDeclaration {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\nexport function assertExportDefaultDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultDeclaration {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\nexport function assertExportNamedDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamedDeclaration {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\nexport function assertExportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportSpecifier {\n  assert(\"ExportSpecifier\", node, opts);\n}\nexport function assertForOfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForOfStatement {\n  assert(\"ForOfStatement\", node, opts);\n}\nexport function assertImportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDeclaration {\n  assert(\"ImportDeclaration\", node, opts);\n}\nexport function assertImportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDefaultSpecifier {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\nexport function assertImportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportNamespaceSpecifier {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\nexport function assertImportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportSpecifier {\n  assert(\"ImportSpecifier\", node, opts);\n}\nexport function assertMetaProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MetaProperty {\n  assert(\"MetaProperty\", node, opts);\n}\nexport function assertClassMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassMethod {\n  assert(\"ClassMethod\", node, opts);\n}\nexport function assertObjectPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectPattern {\n  assert(\"ObjectPattern\", node, opts);\n}\nexport function assertSpreadElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SpreadElement {\n  assert(\"SpreadElement\", node, opts);\n}\nexport function assertSuper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Super {\n  assert(\"Super\", node, opts);\n}\nexport function assertTaggedTemplateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TaggedTemplateExpression {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\nexport function assertTemplateElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateElement {\n  assert(\"TemplateElement\", node, opts);\n}\nexport function assertTemplateLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateLiteral {\n  assert(\"TemplateLiteral\", node, opts);\n}\nexport function assertYieldExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.YieldExpression {\n  assert(\"YieldExpression\", node, opts);\n}\nexport function assertAwaitExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AwaitExpression {\n  assert(\"AwaitExpression\", node, opts);\n}\nexport function assertImport(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Import {\n  assert(\"Import\", node, opts);\n}\nexport function assertBigIntLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BigIntLiteral {\n  assert(\"BigIntLiteral\", node, opts);\n}\nexport function assertExportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamespaceSpecifier {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\nexport function assertOptionalMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalMemberExpression {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\nexport function assertOptionalCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalCallExpression {\n  assert(\"OptionalCallExpression\", node, opts);\n}\nexport function assertClassProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassProperty {\n  assert(\"ClassProperty\", node, opts);\n}\nexport function assertClassAccessorProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassAccessorProperty {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\nexport function assertClassPrivateProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateProperty {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\nexport function assertClassPrivateMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateMethod {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\nexport function assertPrivateName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PrivateName {\n  assert(\"PrivateName\", node, opts);\n}\nexport function assertStaticBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StaticBlock {\n  assert(\"StaticBlock\", node, opts);\n}\nexport function assertAnyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AnyTypeAnnotation {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\nexport function assertArrayTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayTypeAnnotation {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\nexport function assertBooleanTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanTypeAnnotation {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\nexport function assertBooleanLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteralTypeAnnotation {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNullLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteralTypeAnnotation {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\nexport function assertClassImplements(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassImplements {\n  assert(\"ClassImplements\", node, opts);\n}\nexport function assertDeclareClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareClass {\n  assert(\"DeclareClass\", node, opts);\n}\nexport function assertDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareFunction {\n  assert(\"DeclareFunction\", node, opts);\n}\nexport function assertDeclareInterface(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareInterface {\n  assert(\"DeclareInterface\", node, opts);\n}\nexport function assertDeclareModule(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModule {\n  assert(\"DeclareModule\", node, opts);\n}\nexport function assertDeclareModuleExports(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModuleExports {\n  assert(\"DeclareModuleExports\", node, opts);\n}\nexport function assertDeclareTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareTypeAlias {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\nexport function assertDeclareOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareOpaqueType {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\nexport function assertDeclareVariable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareVariable {\n  assert(\"DeclareVariable\", node, opts);\n}\nexport function assertDeclareExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportDeclaration {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\nexport function assertDeclareExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportAllDeclaration {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\nexport function assertDeclaredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclaredPredicate {\n  assert(\"DeclaredPredicate\", node, opts);\n}\nexport function assertExistsTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExistsTypeAnnotation {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeAnnotation {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeParam(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeParam {\n  assert(\"FunctionTypeParam\", node, opts);\n}\nexport function assertGenericTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.GenericTypeAnnotation {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\nexport function assertInferredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InferredPredicate {\n  assert(\"InferredPredicate\", node, opts);\n}\nexport function assertInterfaceExtends(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceExtends {\n  assert(\"InterfaceExtends\", node, opts);\n}\nexport function assertInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceDeclaration {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\nexport function assertInterfaceTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceTypeAnnotation {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\nexport function assertIntersectionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IntersectionTypeAnnotation {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\nexport function assertMixedTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MixedTypeAnnotation {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\nexport function assertEmptyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyTypeAnnotation {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\nexport function assertNullableTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullableTypeAnnotation {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\nexport function assertNumberLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberLiteralTypeAnnotation {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNumberTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberTypeAnnotation {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeAnnotation {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeInternalSlot(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeInternalSlot {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\nexport function assertObjectTypeCallProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeCallProperty {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\nexport function assertObjectTypeIndexer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeIndexer {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\nexport function assertObjectTypeProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeProperty {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\nexport function assertObjectTypeSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeSpreadProperty {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\nexport function assertOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OpaqueType {\n  assert(\"OpaqueType\", node, opts);\n}\nexport function assertQualifiedTypeIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.QualifiedTypeIdentifier {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\nexport function assertStringLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteralTypeAnnotation {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\nexport function assertStringTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringTypeAnnotation {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\nexport function assertSymbolTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SymbolTypeAnnotation {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\nexport function assertThisTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisTypeAnnotation {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\nexport function assertTupleTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleTypeAnnotation {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\nexport function assertTypeofTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeofTypeAnnotation {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\nexport function assertTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAlias {\n  assert(\"TypeAlias\", node, opts);\n}\nexport function assertTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAnnotation {\n  assert(\"TypeAnnotation\", node, opts);\n}\nexport function assertTypeCastExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeCastExpression {\n  assert(\"TypeCastExpression\", node, opts);\n}\nexport function assertTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameter {\n  assert(\"TypeParameter\", node, opts);\n}\nexport function assertTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterDeclaration {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\nexport function assertTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterInstantiation {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\nexport function assertUnionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnionTypeAnnotation {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\nexport function assertVariance(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Variance {\n  assert(\"Variance\", node, opts);\n}\nexport function assertVoidTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VoidTypeAnnotation {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\nexport function assertEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDeclaration {\n  assert(\"EnumDeclaration\", node, opts);\n}\nexport function assertEnumBooleanBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanBody {\n  assert(\"EnumBooleanBody\", node, opts);\n}\nexport function assertEnumNumberBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberBody {\n  assert(\"EnumNumberBody\", node, opts);\n}\nexport function assertEnumStringBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringBody {\n  assert(\"EnumStringBody\", node, opts);\n}\nexport function assertEnumSymbolBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumSymbolBody {\n  assert(\"EnumSymbolBody\", node, opts);\n}\nexport function assertEnumBooleanMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanMember {\n  assert(\"EnumBooleanMember\", node, opts);\n}\nexport function assertEnumNumberMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberMember {\n  assert(\"EnumNumberMember\", node, opts);\n}\nexport function assertEnumStringMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringMember {\n  assert(\"EnumStringMember\", node, opts);\n}\nexport function assertEnumDefaultedMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDefaultedMember {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\nexport function assertIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IndexedAccessType {\n  assert(\"IndexedAccessType\", node, opts);\n}\nexport function assertOptionalIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalIndexedAccessType {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\nexport function assertJSXAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXAttribute {\n  assert(\"JSXAttribute\", node, opts);\n}\nexport function assertJSXClosingElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingElement {\n  assert(\"JSXClosingElement\", node, opts);\n}\nexport function assertJSXElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXElement {\n  assert(\"JSXElement\", node, opts);\n}\nexport function assertJSXEmptyExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXEmptyExpression {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\nexport function assertJSXExpressionContainer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXExpressionContainer {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\nexport function assertJSXSpreadChild(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadChild {\n  assert(\"JSXSpreadChild\", node, opts);\n}\nexport function assertJSXIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXIdentifier {\n  assert(\"JSXIdentifier\", node, opts);\n}\nexport function assertJSXMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXMemberExpression {\n  assert(\"JSXMemberExpression\", node, opts);\n}\nexport function assertJSXNamespacedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXNamespacedName {\n  assert(\"JSXNamespacedName\", node, opts);\n}\nexport function assertJSXOpeningElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningElement {\n  assert(\"JSXOpeningElement\", node, opts);\n}\nexport function assertJSXSpreadAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadAttribute {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\nexport function assertJSXText(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXText {\n  assert(\"JSXText\", node, opts);\n}\nexport function assertJSXFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXFragment {\n  assert(\"JSXFragment\", node, opts);\n}\nexport function assertJSXOpeningFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningFragment {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\nexport function assertJSXClosingFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingFragment {\n  assert(\"JSXClosingFragment\", node, opts);\n}\nexport function assertNoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Noop {\n  assert(\"Noop\", node, opts);\n}\nexport function assertPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Placeholder {\n  assert(\"Placeholder\", node, opts);\n}\nexport function assertV8IntrinsicIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.V8IntrinsicIdentifier {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\nexport function assertArgumentPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArgumentPlaceholder {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\nexport function assertBindExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BindExpression {\n  assert(\"BindExpression\", node, opts);\n}\nexport function assertImportAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportAttribute {\n  assert(\"ImportAttribute\", node, opts);\n}\nexport function assertDecorator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Decorator {\n  assert(\"Decorator\", node, opts);\n}\nexport function assertDoExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoExpression {\n  assert(\"DoExpression\", node, opts);\n}\nexport function assertExportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultSpecifier {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\nexport function assertRecordExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RecordExpression {\n  assert(\"RecordExpression\", node, opts);\n}\nexport function assertTupleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleExpression {\n  assert(\"TupleExpression\", node, opts);\n}\nexport function assertDecimalLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DecimalLiteral {\n  assert(\"DecimalLiteral\", node, opts);\n}\nexport function assertModuleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleExpression {\n  assert(\"ModuleExpression\", node, opts);\n}\nexport function assertTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TopicReference {\n  assert(\"TopicReference\", node, opts);\n}\nexport function assertPipelineTopicExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineTopicExpression {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\nexport function assertPipelineBareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineBareFunction {\n  assert(\"PipelineBareFunction\", node, opts);\n}\nexport function assertPipelinePrimaryTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelinePrimaryTopicReference {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\nexport function assertTSParameterProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParameterProperty {\n  assert(\"TSParameterProperty\", node, opts);\n}\nexport function assertTSDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareFunction {\n  assert(\"TSDeclareFunction\", node, opts);\n}\nexport function assertTSDeclareMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareMethod {\n  assert(\"TSDeclareMethod\", node, opts);\n}\nexport function assertTSQualifiedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSQualifiedName {\n  assert(\"TSQualifiedName\", node, opts);\n}\nexport function assertTSCallSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSCallSignatureDeclaration {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\nexport function assertTSConstructSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructSignatureDeclaration {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\nexport function assertTSPropertySignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSPropertySignature {\n  assert(\"TSPropertySignature\", node, opts);\n}\nexport function assertTSMethodSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMethodSignature {\n  assert(\"TSMethodSignature\", node, opts);\n}\nexport function assertTSIndexSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexSignature {\n  assert(\"TSIndexSignature\", node, opts);\n}\nexport function assertTSAnyKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAnyKeyword {\n  assert(\"TSAnyKeyword\", node, opts);\n}\nexport function assertTSBooleanKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBooleanKeyword {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\nexport function assertTSBigIntKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBigIntKeyword {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\nexport function assertTSIntrinsicKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntrinsicKeyword {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\nexport function assertTSNeverKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNeverKeyword {\n  assert(\"TSNeverKeyword\", node, opts);\n}\nexport function assertTSNullKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNullKeyword {\n  assert(\"TSNullKeyword\", node, opts);\n}\nexport function assertTSNumberKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNumberKeyword {\n  assert(\"TSNumberKeyword\", node, opts);\n}\nexport function assertTSObjectKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSObjectKeyword {\n  assert(\"TSObjectKeyword\", node, opts);\n}\nexport function assertTSStringKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSStringKeyword {\n  assert(\"TSStringKeyword\", node, opts);\n}\nexport function assertTSSymbolKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSymbolKeyword {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\nexport function assertTSUndefinedKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUndefinedKeyword {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\nexport function assertTSUnknownKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnknownKeyword {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\nexport function assertTSVoidKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSVoidKeyword {\n  assert(\"TSVoidKeyword\", node, opts);\n}\nexport function assertTSThisType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSThisType {\n  assert(\"TSThisType\", node, opts);\n}\nexport function assertTSFunctionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSFunctionType {\n  assert(\"TSFunctionType\", node, opts);\n}\nexport function assertTSConstructorType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructorType {\n  assert(\"TSConstructorType\", node, opts);\n}\nexport function assertTSTypeReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeReference {\n  assert(\"TSTypeReference\", node, opts);\n}\nexport function assertTSTypePredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypePredicate {\n  assert(\"TSTypePredicate\", node, opts);\n}\nexport function assertTSTypeQuery(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeQuery {\n  assert(\"TSTypeQuery\", node, opts);\n}\nexport function assertTSTypeLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeLiteral {\n  assert(\"TSTypeLiteral\", node, opts);\n}\nexport function assertTSArrayType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSArrayType {\n  assert(\"TSArrayType\", node, opts);\n}\nexport function assertTSTupleType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTupleType {\n  assert(\"TSTupleType\", node, opts);\n}\nexport function assertTSOptionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSOptionalType {\n  assert(\"TSOptionalType\", node, opts);\n}\nexport function assertTSRestType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSRestType {\n  assert(\"TSRestType\", node, opts);\n}\nexport function assertTSNamedTupleMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamedTupleMember {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\nexport function assertTSUnionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnionType {\n  assert(\"TSUnionType\", node, opts);\n}\nexport function assertTSIntersectionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntersectionType {\n  assert(\"TSIntersectionType\", node, opts);\n}\nexport function assertTSConditionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConditionalType {\n  assert(\"TSConditionalType\", node, opts);\n}\nexport function assertTSInferType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInferType {\n  assert(\"TSInferType\", node, opts);\n}\nexport function assertTSParenthesizedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParenthesizedType {\n  assert(\"TSParenthesizedType\", node, opts);\n}\nexport function assertTSTypeOperator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeOperator {\n  assert(\"TSTypeOperator\", node, opts);\n}\nexport function assertTSIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexedAccessType {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\nexport function assertTSMappedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMappedType {\n  assert(\"TSMappedType\", node, opts);\n}\nexport function assertTSLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSLiteralType {\n  assert(\"TSLiteralType\", node, opts);\n}\nexport function assertTSExpressionWithTypeArguments(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExpressionWithTypeArguments {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\nexport function assertTSInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceDeclaration {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\nexport function assertTSInterfaceBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceBody {\n  assert(\"TSInterfaceBody\", node, opts);\n}\nexport function assertTSTypeAliasDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAliasDeclaration {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\nexport function assertTSInstantiationExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInstantiationExpression {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\nexport function assertTSAsExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAsExpression {\n  assert(\"TSAsExpression\", node, opts);\n}\nexport function assertTSSatisfiesExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSatisfiesExpression {\n  assert(\"TSSatisfiesExpression\", node, opts);\n}\nexport function assertTSTypeAssertion(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAssertion {\n  assert(\"TSTypeAssertion\", node, opts);\n}\nexport function assertTSEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumDeclaration {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\nexport function assertTSEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumMember {\n  assert(\"TSEnumMember\", node, opts);\n}\nexport function assertTSModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleDeclaration {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\nexport function assertTSModuleBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleBlock {\n  assert(\"TSModuleBlock\", node, opts);\n}\nexport function assertTSImportType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportType {\n  assert(\"TSImportType\", node, opts);\n}\nexport function assertTSImportEqualsDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportEqualsDeclaration {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\nexport function assertTSExternalModuleReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExternalModuleReference {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\nexport function assertTSNonNullExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNonNullExpression {\n  assert(\"TSNonNullExpression\", node, opts);\n}\nexport function assertTSExportAssignment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExportAssignment {\n  assert(\"TSExportAssignment\", node, opts);\n}\nexport function assertTSNamespaceExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamespaceExportDeclaration {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\nexport function assertTSTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAnnotation {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\nexport function assertTSTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterInstantiation {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\nexport function assertTSTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterDeclaration {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\nexport function assertTSTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameter {\n  assert(\"TSTypeParameter\", node, opts);\n}\nexport function assertStandardized(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Standardized {\n  assert(\"Standardized\", node, opts);\n}\nexport function assertExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Expression {\n  assert(\"Expression\", node, opts);\n}\nexport function assertBinary(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Binary {\n  assert(\"Binary\", node, opts);\n}\nexport function assertScopable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Scopable {\n  assert(\"Scopable\", node, opts);\n}\nexport function assertBlockParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockParent {\n  assert(\"BlockParent\", node, opts);\n}\nexport function assertBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Block {\n  assert(\"Block\", node, opts);\n}\nexport function assertStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Statement {\n  assert(\"Statement\", node, opts);\n}\nexport function assertTerminatorless(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Terminatorless {\n  assert(\"Terminatorless\", node, opts);\n}\nexport function assertCompletionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CompletionStatement {\n  assert(\"CompletionStatement\", node, opts);\n}\nexport function assertConditional(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Conditional {\n  assert(\"Conditional\", node, opts);\n}\nexport function assertLoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Loop {\n  assert(\"Loop\", node, opts);\n}\nexport function assertWhile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.While {\n  assert(\"While\", node, opts);\n}\nexport function assertExpressionWrapper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionWrapper {\n  assert(\"ExpressionWrapper\", node, opts);\n}\nexport function assertFor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.For {\n  assert(\"For\", node, opts);\n}\nexport function assertForXStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForXStatement {\n  assert(\"ForXStatement\", node, opts);\n}\nexport function assertFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Function {\n  assert(\"Function\", node, opts);\n}\nexport function assertFunctionParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionParent {\n  assert(\"FunctionParent\", node, opts);\n}\nexport function assertPureish(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pureish {\n  assert(\"Pureish\", node, opts);\n}\nexport function assertDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Declaration {\n  assert(\"Declaration\", node, opts);\n}\nexport function assertPatternLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PatternLike {\n  assert(\"PatternLike\", node, opts);\n}\nexport function assertLVal(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LVal {\n  assert(\"LVal\", node, opts);\n}\nexport function assertTSEntityName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEntityName {\n  assert(\"TSEntityName\", node, opts);\n}\nexport function assertLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Literal {\n  assert(\"Literal\", node, opts);\n}\nexport function assertImmutable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Immutable {\n  assert(\"Immutable\", node, opts);\n}\nexport function assertUserWhitespacable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UserWhitespacable {\n  assert(\"UserWhitespacable\", node, opts);\n}\nexport function assertMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Method {\n  assert(\"Method\", node, opts);\n}\nexport function assertObjectMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMember {\n  assert(\"ObjectMember\", node, opts);\n}\nexport function assertProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Property {\n  assert(\"Property\", node, opts);\n}\nexport function assertUnaryLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryLike {\n  assert(\"UnaryLike\", node, opts);\n}\nexport function assertPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pattern {\n  assert(\"Pattern\", node, opts);\n}\nexport function assertClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Class {\n  assert(\"Class\", node, opts);\n}\nexport function assertImportOrExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportOrExportDeclaration {\n  assert(\"ImportOrExportDeclaration\", node, opts);\n}\nexport function assertExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDeclaration {\n  assert(\"ExportDeclaration\", node, opts);\n}\nexport function assertModuleSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleSpecifier {\n  assert(\"ModuleSpecifier\", node, opts);\n}\nexport function assertAccessor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Accessor {\n  assert(\"Accessor\", node, opts);\n}\nexport function assertPrivate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Private {\n  assert(\"Private\", node, opts);\n}\nexport function assertFlow(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Flow {\n  assert(\"Flow\", node, opts);\n}\nexport function assertFlowType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowType {\n  assert(\"FlowType\", node, opts);\n}\nexport function assertFlowBaseAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowBaseAnnotation {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\nexport function assertFlowDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowDeclaration {\n  assert(\"FlowDeclaration\", node, opts);\n}\nexport function assertFlowPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowPredicate {\n  assert(\"FlowPredicate\", node, opts);\n}\nexport function assertEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBody {\n  assert(\"EnumBody\", node, opts);\n}\nexport function assertEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumMember {\n  assert(\"EnumMember\", node, opts);\n}\nexport function assertJSX(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSX {\n  assert(\"JSX\", node, opts);\n}\nexport function assertMiscellaneous(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Miscellaneous {\n  assert(\"Miscellaneous\", node, opts);\n}\nexport function assertTypeScript(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeScript {\n  assert(\"TypeScript\", node, opts);\n}\nexport function assertTSTypeElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeElement {\n  assert(\"TSTypeElement\", node, opts);\n}\nexport function assertTSType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSType {\n  assert(\"TSType\", node, opts);\n}\nexport function assertTSBaseType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBaseType {\n  assert(\"TSBaseType\", node, opts);\n}\nexport function assertNumberLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertNumberLiteral\", \"assertNumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\nexport function assertRegexLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertRegexLiteral\", \"assertRegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\nexport function assertRestProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertRestProperty\", \"assertRestElement\");\n  assert(\"RestProperty\", node, opts);\n}\nexport function assertSpreadProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertSpreadProperty\", \"assertSpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}\nexport function assertModuleDeclaration(node: any, opts: any): void {\n  deprecationWarning(\n    \"assertModuleDeclaration\",\n    \"assertImportOrExportDeclaration\",\n  );\n  assert(\"ModuleDeclaration\", node, opts);\n}\n", "import {\n  anyTypeAnnotation,\n  stringTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation,\n  booleanTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n} from \"../generated\";\nimport type * as t from \"../..\";\n\nexport default createTypeAnnotationBasedOnTypeof as {\n  (type: \"string\"): t.StringTypeAnnotation;\n  (type: \"number\"): t.NumberTypeAnnotation;\n  (type: \"undefined\"): t.VoidTypeAnnotation;\n  (type: \"boolean\"): t.BooleanTypeAnnotation;\n  (type: \"function\"): t.GenericTypeAnnotation;\n  (type: \"object\"): t.GenericTypeAnnotation;\n  (type: \"symbol\"): t.GenericTypeAnnotation;\n  (type: \"bigint\"): t.AnyTypeAnnotation;\n};\n\n/**\n * Create a type annotation based on typeof expression.\n */\nfunction createTypeAnnotationBasedOnTypeof(type: string): t.FlowType {\n  switch (type) {\n    case \"string\":\n      return stringTypeAnnotation();\n    case \"number\":\n      return numberTypeAnnotation();\n    case \"undefined\":\n      return voidTypeAnnotation();\n    case \"boolean\":\n      return booleanTypeAnnotation();\n    case \"function\":\n      return genericTypeAnnotation(identifier(\"Function\"));\n    case \"object\":\n      return genericTypeAnnotation(identifier(\"Object\"));\n    case \"symbol\":\n      return genericTypeAnnotation(identifier(\"Symbol\"));\n    case \"bigint\":\n      // todo: use BigInt annotation when Flow supports BigInt\n      // https://github.com/facebook/flow/issues/6639\n      return anyTypeAnnotation();\n  }\n  throw new Error(\"Invalid typeof value: \" + type);\n}\n", "import {\n  isAnyTypeAnnotation,\n  isGenericTypeAnnotation,\n  isUnionTypeAnnotation,\n  isFlowBaseAnnotation,\n  isIdentifier,\n} from \"../../validators/generated\";\nimport type * as t from \"../..\";\n\nfunction getQualifiedName(node: t.GenericTypeAnnotation[\"id\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.FlowType | false | null | undefined>,\n): t.FlowType[] {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.GenericTypeAnnotation>();\n  const bases = new Map<t.FlowBaseAnnotation[\"type\"], t.FlowBaseAnnotation>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.FlowType[]>();\n\n  const types: t.FlowType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (isFlowBaseAnnotation(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isUnionTypeAnnotation(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // find a matching generic type and merge and deduplicate the type parameters\n    if (isGenericTypeAnnotation(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing: t.Flow = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params,\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n", "import { unionTypeAnnotation } from \"../generated\";\nimport removeTypeDuplicates from \"../../modifications/flow/removeTypeDuplicates\";\nimport type * as t from \"../..\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createFlowUnionType<T extends t.FlowType>(\n  types: [T] | Array<T>,\n): T | t.UnionTypeAnnotation {\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0] as T;\n  } else {\n    return unionTypeAnnotation(flattened);\n  }\n}\n", "import {\n  isIdentifier,\n  isTSAnyKeyword,\n  isTSTypeReference,\n  isTSUnionType,\n  isTSBaseType,\n} from \"../../validators/generated\";\nimport type * as t from \"../..\";\n\nfunction getQualifiedName(node: t.TSTypeReference[\"typeName\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.TSType>,\n): Array<t.TSType> {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.TSTypeReference>();\n  const bases = new Map<t.TSBaseType[\"type\"], t.TSBaseType>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.TSType[]>();\n\n  const types: t.TSType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isTSAnyKeyword(node)) {\n      return [node];\n    }\n\n    // Analogue of FlowBaseAnnotation\n    if (isTSBaseType(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isTSUnionType(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // todo: support merging tuples: number[]\n    if (isTSTypeReference(node) && node.typeParameters) {\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing: t.TypeScript = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params,\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n", "import { tsUnionType } from \"../generated\";\nimport removeTypeDuplicates from \"../../modifications/typescript/removeTypeDuplicates\";\nimport { isTSTypeAnnotation } from \"../../validators/generated/index\";\nimport type * as t from \"../..\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createTSUnionType(\n  typeAnnotations: Array<t.TSTypeAnnotation | t.TSType>,\n): t.TSType {\n  const types = typeAnnotations.map(type => {\n    return isTSTypeAnnotation(type) ? type.typeAnnotation : type;\n  });\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return tsUnionType(flattened);\n  }\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/**\n * This file is written in JavaScript and not TypeScript because uppercase builders\n * conflict with AST types. TypeScript reads the uppercase.d.ts file instead.\n */\n\nexport {\n  arrayExpression as ArrayExpression,\n  assignmentExpression as AssignmentExpression,\n  binaryExpression as BinaryExpression,\n  interpreterDirective as InterpreterDirective,\n  directive as Directive,\n  directiveLiteral as DirectiveLiteral,\n  blockStatement as BlockStatement,\n  breakStatement as BreakStatement,\n  callExpression as CallExpression,\n  catchClause as CatchClause,\n  conditionalExpression as ConditionalExpression,\n  continueStatement as ContinueStatement,\n  debuggerStatement as DebuggerStatement,\n  doWhileStatement as DoWhileStatement,\n  emptyStatement as EmptyStatement,\n  expressionStatement as ExpressionStatement,\n  file as File,\n  forInStatement as ForInStatement,\n  forStatement as ForStatement,\n  functionDeclaration as FunctionDeclaration,\n  functionExpression as FunctionExpression,\n  identifier as Identifier,\n  ifStatement as IfStatement,\n  labeledStatement as LabeledStatement,\n  stringLiteral as StringLiteral,\n  numericLiteral as NumericLiteral,\n  nullLiteral as NullLiteral,\n  booleanLiteral as BooleanLiteral,\n  regExpLiteral as RegExpLiteral,\n  logicalExpression as LogicalExpression,\n  memberExpression as MemberExpression,\n  newExpression as NewExpression,\n  program as Program,\n  objectExpression as ObjectExpression,\n  objectMethod as ObjectMethod,\n  objectProperty as ObjectProperty,\n  restElement as RestElement,\n  returnStatement as ReturnStatement,\n  sequenceExpression as SequenceExpression,\n  parenthesizedExpression as ParenthesizedExpression,\n  switchCase as SwitchCase,\n  switchStatement as SwitchStatement,\n  thisExpression as ThisExpression,\n  throwStatement as ThrowStatement,\n  tryStatement as TryStatement,\n  unaryExpression as UnaryExpression,\n  updateExpression as UpdateExpression,\n  variableDeclaration as VariableDeclaration,\n  variableDeclarator as VariableDeclarator,\n  whileStatement as WhileStatement,\n  withStatement as WithStatement,\n  assignmentPattern as AssignmentPattern,\n  arrayPattern as ArrayPattern,\n  arrowFunctionExpression as ArrowFunctionExpression,\n  classBody as ClassBody,\n  classExpression as ClassExpression,\n  classDeclaration as ClassDeclaration,\n  exportAllDeclaration as ExportAllDeclaration,\n  exportDefaultDeclaration as ExportDefaultDeclaration,\n  exportNamedDeclaration as ExportNamedDeclaration,\n  exportSpecifier as ExportSpecifier,\n  forOfStatement as ForOfStatement,\n  importDeclaration as ImportDeclaration,\n  importDefaultSpecifier as ImportDefaultSpecifier,\n  importNamespaceSpecifier as ImportNamespaceSpecifier,\n  importSpecifier as ImportSpecifier,\n  metaProperty as MetaProperty,\n  classMethod as ClassMethod,\n  objectPattern as ObjectPattern,\n  spreadElement as SpreadElement,\n  super as Super,\n  taggedTemplateExpression as TaggedTemplateExpression,\n  templateElement as TemplateElement,\n  templateLiteral as TemplateLiteral,\n  yieldExpression as YieldExpression,\n  awaitExpression as AwaitExpression,\n  import as Import,\n  bigIntLiteral as BigIntLiteral,\n  exportNamespaceSpecifier as ExportNamespaceSpecifier,\n  optionalMemberExpression as OptionalMemberExpression,\n  optionalCallExpression as OptionalCallExpression,\n  classProperty as ClassProperty,\n  classAccessorProperty as ClassAccessorProperty,\n  classPrivateProperty as ClassPrivateProperty,\n  classPrivateMethod as ClassPrivateMethod,\n  privateName as PrivateName,\n  staticBlock as StaticBlock,\n  anyTypeAnnotation as AnyTypeAnnotation,\n  arrayTypeAnnotation as ArrayTypeAnnotation,\n  booleanTypeAnnotation as BooleanTypeAnnotation,\n  booleanLiteralTypeAnnotation as BooleanLiteralTypeAnnotation,\n  nullLiteralTypeAnnotation as NullLiteralTypeAnnotation,\n  classImplements as ClassImplements,\n  declareClass as DeclareClass,\n  declareFunction as DeclareFunction,\n  declareInterface as DeclareInterface,\n  declareModule as DeclareModule,\n  declareModuleExports as DeclareModuleExports,\n  declareTypeAlias as DeclareTypeAlias,\n  declareOpaqueType as DeclareOpaqueType,\n  declareVariable as DeclareVariable,\n  declareExportDeclaration as DeclareExportDeclaration,\n  declareExportAllDeclaration as DeclareExportAllDeclaration,\n  declaredPredicate as DeclaredPredicate,\n  existsTypeAnnotation as ExistsTypeAnnotation,\n  functionTypeAnnotation as FunctionTypeAnnotation,\n  functionTypeParam as FunctionTypeParam,\n  genericTypeAnnotation as GenericTypeAnnotation,\n  inferredPredicate as InferredPredicate,\n  interfaceExtends as InterfaceExtends,\n  interfaceDeclaration as InterfaceDeclaration,\n  interfaceTypeAnnotation as InterfaceTypeAnnotation,\n  intersectionTypeAnnotation as IntersectionTypeAnnotation,\n  mixedTypeAnnotation as MixedTypeAnnotation,\n  emptyTypeAnnotation as EmptyTypeAnnotation,\n  nullableTypeAnnotation as NullableTypeAnnotation,\n  numberLiteralTypeAnnotation as NumberLiteralTypeAnnotation,\n  numberTypeAnnotation as NumberTypeAnnotation,\n  objectTypeAnnotation as ObjectTypeAnnotation,\n  objectTypeInternalSlot as ObjectTypeInternalSlot,\n  objectTypeCallProperty as ObjectTypeCallProperty,\n  objectTypeIndexer as ObjectTypeIndexer,\n  objectTypeProperty as ObjectTypeProperty,\n  objectTypeSpreadProperty as ObjectTypeSpreadProperty,\n  opaqueType as OpaqueType,\n  qualifiedTypeIdentifier as QualifiedTypeIdentifier,\n  stringLiteralTypeAnnotation as StringLiteralTypeAnnotation,\n  stringTypeAnnotation as StringTypeAnnotation,\n  symbolTypeAnnotation as SymbolTypeAnnotation,\n  thisTypeAnnotation as ThisTypeAnnotation,\n  tupleTypeAnnotation as TupleTypeAnnotation,\n  typeofTypeAnnotation as TypeofTypeAnnotation,\n  typeAlias as TypeAlias,\n  typeAnnotation as TypeAnnotation,\n  typeCastExpression as TypeCastExpression,\n  typeParameter as TypeParameter,\n  typeParameterDeclaration as TypeParameterDeclaration,\n  typeParameterInstantiation as TypeParameterInstantiation,\n  unionTypeAnnotation as UnionTypeAnnotation,\n  variance as Variance,\n  voidTypeAnnotation as VoidTypeAnnotation,\n  enumDeclaration as EnumDeclaration,\n  enumBooleanBody as EnumBooleanBody,\n  enumNumberBody as EnumNumberBody,\n  enumStringBody as EnumStringBody,\n  enumSymbolBody as EnumSymbolBody,\n  enumBooleanMember as EnumBooleanMember,\n  enumNumberMember as EnumNumberMember,\n  enumStringMember as EnumStringMember,\n  enumDefaultedMember as EnumDefaultedMember,\n  indexedAccessType as IndexedAccessType,\n  optionalIndexedAccessType as OptionalIndexedAccessType,\n  jsxAttribute as JSXAttribute,\n  jsxClosingElement as JSXClosingElement,\n  jsxElement as JSXElement,\n  jsxEmptyExpression as JSXEmptyExpression,\n  jsxExpressionContainer as JSXExpressionContainer,\n  jsxSpreadChild as JSXSpreadChild,\n  jsxIdentifier as JSXIdentifier,\n  jsxMemberExpression as JSXMemberExpression,\n  jsxNamespacedName as JSXNamespacedName,\n  jsxOpeningElement as JSXOpeningElement,\n  jsxSpreadAttribute as JSXSpreadAttribute,\n  jsxText as JSXText,\n  jsxFragment as JSXFragment,\n  jsxOpeningFragment as JSXOpeningFragment,\n  jsxClosingFragment as JSXClosingFragment,\n  noop as Noop,\n  placeholder as Placeholder,\n  v8IntrinsicIdentifier as V8IntrinsicIdentifier,\n  argumentPlaceholder as ArgumentPlaceholder,\n  bindExpression as BindExpression,\n  importAttribute as ImportAttribute,\n  decorator as Decorator,\n  doExpression as DoExpression,\n  exportDefaultSpecifier as ExportDefaultSpecifier,\n  recordExpression as RecordExpression,\n  tupleExpression as TupleExpression,\n  decimalLiteral as DecimalLiteral,\n  moduleExpression as ModuleExpression,\n  topicReference as TopicReference,\n  pipelineTopicExpression as PipelineTopicExpression,\n  pipelineBareFunction as PipelineBareFunction,\n  pipelinePrimaryTopicReference as PipelinePrimaryTopicReference,\n  tsParameterProperty as TSParameterProperty,\n  tsDeclareFunction as TSDeclareFunction,\n  tsDeclareMethod as TSDeclareMethod,\n  tsQualifiedName as TSQualifiedName,\n  tsCallSignatureDeclaration as TSCallSignatureDeclaration,\n  tsConstructSignatureDeclaration as TSConstructSignatureDeclaration,\n  tsPropertySignature as TSPropertySignature,\n  tsMethodSignature as TSMethodSignature,\n  tsIndexSignature as TSIndexSignature,\n  tsAnyKeyword as TSAnyKeyword,\n  tsBooleanKeyword as TSBooleanKeyword,\n  tsBigIntKeyword as TSBigIntKeyword,\n  tsIntrinsicKeyword as TSIntrinsicKeyword,\n  tsNeverKeyword as TSNeverKeyword,\n  tsNullKeyword as TSNullKeyword,\n  tsNumberKeyword as TSNumberKeyword,\n  tsObjectKeyword as TSObjectKeyword,\n  tsStringKeyword as TSStringKeyword,\n  tsSymbolKeyword as TSSymbolKeyword,\n  tsUndefinedKeyword as TSUndefinedKeyword,\n  tsUnknownKeyword as TSUnknownKeyword,\n  tsVoidKeyword as TSVoidKeyword,\n  tsThisType as TSThisType,\n  tsFunctionType as TSFunctionType,\n  tsConstructorType as TSConstructorType,\n  tsTypeReference as TSTypeReference,\n  tsTypePredicate as TSTypePredicate,\n  tsTypeQuery as TSTypeQuery,\n  tsTypeLiteral as TSTypeLiteral,\n  tsArrayType as TSArrayType,\n  tsTupleType as TSTupleType,\n  tsOptionalType as TSOptionalType,\n  tsRestType as TSRestType,\n  tsNamedTupleMember as TSNamedTupleMember,\n  tsUnionType as TSUnionType,\n  tsIntersectionType as TSIntersectionType,\n  tsConditionalType as TSConditionalType,\n  tsInferType as TSInferType,\n  tsParenthesizedType as TSParenthesizedType,\n  tsTypeOperator as TSTypeOperator,\n  tsIndexedAccessType as TSIndexedAccessType,\n  tsMappedType as TSMappedType,\n  tsLiteralType as TSLiteralType,\n  tsExpressionWithTypeArguments as TSExpressionWithTypeArguments,\n  tsInterfaceDeclaration as TSInterfaceDeclaration,\n  tsInterfaceBody as TSInterfaceBody,\n  tsTypeAliasDeclaration as TSTypeAliasDeclaration,\n  tsInstantiationExpression as TSInstantiationExpression,\n  tsAsExpression as TSAsExpression,\n  tsSatisfiesExpression as TSSatisfiesExpression,\n  tsTypeAssertion as TSTypeAssertion,\n  tsEnumDeclaration as TSEnumDeclaration,\n  tsEnumMember as TSEnumMember,\n  tsModuleDeclaration as TSModuleDeclaration,\n  tsModuleBlock as TSModuleBlock,\n  tsImportType as TSImportType,\n  tsImportEqualsDeclaration as TSImportEqualsDeclaration,\n  tsExternalModuleReference as TSExternalModuleReference,\n  tsNonNullExpression as TSNonNullExpression,\n  tsExportAssignment as TSExportAssignment,\n  tsNamespaceExportDeclaration as TSNamespaceExportDeclaration,\n  tsTypeAnnotation as TSTypeAnnotation,\n  tsTypeParameterInstantiation as TSTypeParameterInstantiation,\n  tsTypeParameterDeclaration as TSTypeParameterDeclaration,\n  tsTypeParameter as TSTypeParameter,\n  numberLiteral as NumberLiteral,\n  regexLiteral as RegexLiteral,\n  restProperty as RestProperty,\n  spreadProperty as SpreadProperty,\n} from \"./index\";\n", "import { NODE_FIELDS } from \"../definitions\";\nimport type * as t from \"..\";\nimport { isFile, isIdentifier } from \"../validators/generated\";\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\ntype CommentCache = Map<t.Comment, t.Comment>;\n\n// This function will never be called for comments, only for real nodes.\nfunction cloneIfNode(\n  obj: t.Node | undefined | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(\n  obj: t.Node | undefined | null | (t.Node | undefined | null)[],\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\n/**\n * Create a clone of a `node` including only properties belonging to the node.\n * If the second parameter is `false`, cloneNode performs a shallow clone.\n * If the third parameter is true, the cloned nodes exclude location properties.\n */\nexport default function cloneNode<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n): T {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n  commentsCache: CommentCache,\n): T {\n  if (!node) return node;\n\n  const { type } = node;\n  const newNode: any = { type: node.type };\n\n  // Special-case identifiers since they are the most cloned nodes.\n  if (isIdentifier(node)) {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep\n        ? cloneIfNodeOrArray(\n            node.typeAnnotation,\n            true,\n            withoutLoc,\n            commentsCache,\n          )\n        : node.typeAnnotation;\n    }\n  } else if (!has(NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        if (deep) {\n          newNode[field] =\n            isFile(node) && field === \"comments\"\n              ? maybeCloneComments(\n                  node.comments,\n                  deep,\n                  withoutLoc,\n                  commentsCache,\n                )\n              : cloneIfNodeOrArray(\n                  // @ts-expect-error node[field] has been guarded by has check\n                  node[field],\n                  true,\n                  withoutLoc,\n                  commentsCache,\n                );\n        } else {\n          newNode[field] =\n            // @ts-expect-error node[field] has been guarded by has check\n            node[field];\n        }\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(\n      node.leadingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(\n      node.innerComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(\n      node.trailingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (has(node, \"extra\")) {\n    newNode.extra = {\n      ...node.extra,\n    };\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments<T extends t.Comment>(\n  comments: ReadonlyArray<T> | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: Map<T, T>,\n): ReadonlyArray<T> | null {\n  if (!comments || !deep) {\n    return comments;\n  }\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n\n    const { type, value, loc } = comment;\n\n    const ret = { type, value, loc } as T;\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n\n    return ret;\n  });\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n\n/**\n * Create a shallow clone of a `node`, including only\n * properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function clone<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false);\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function cloneDeep<T extends t.Node>(node: T): T {\n  return cloneNode(node);\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * excluding `_private` and location properties.\n */\nexport default function cloneDeepWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ true, /* withoutLoc */ true);\n}\n", "import cloneNode from \"./cloneNode\";\nimport type * as t from \"..\";\n\n/**\n * Create a shallow clone of a `node` excluding `_private` and location properties.\n */\nexport default function cloneWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false, /* withoutLoc */ true);\n}\n", "import type * as t from \"..\";\n\n/**\n * Add comments of certain type to a node.\n */\nexport default function addComments<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  comments: Array<t.Comment>,\n): T {\n  if (!comments || !node) return node;\n\n  const key = `${type}Comments` as const;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}\n", "import addComments from \"./addComments\";\nimport type * as t from \"..\";\n\n/**\n * Add comment of certain type to a node.\n */\nexport default function addComment<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  content: string,\n  line?: boolean,\n): T {\n  return addComments(node, type, [\n    {\n      type: line ? \"CommentLine\" : \"CommentBlock\",\n      value: content,\n    } as t.Comment,\n  ]);\n}\n", "import type * as t from \"..\";\n\nexport default function inherit<\n  C extends t.Node | undefined,\n  P extends t.Node | undefined,\n>(key: keyof C & keyof P, child: C, parent: P): void {\n  if (child && parent) {\n    // @ts-expect-error Could further refine key definitions\n    child[key] = Array.from(\n      new Set([].concat(child[key], parent[key]).filter(Boolean)),\n    );\n  }\n}\n", "import inherit from \"../utils/inherit\";\nimport type * as t from \"..\";\n\nexport default function inheritInnerComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"innerComments\", child, parent);\n}\n", "import inherit from \"../utils/inherit\";\nimport type * as t from \"..\";\n\nexport default function inheritLeadingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"leadingComments\", child, parent);\n}\n", "import inherit from \"../utils/inherit\";\nimport type * as t from \"..\";\n\nexport default function inheritTrailingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"trailingComments\", child, parent);\n}\n", "import inheritTrailingComments from \"./inheritTrailingComments\";\nimport inheritLeadingComments from \"./inheritLeadingComments\";\nimport inheritInnerComments from \"./inheritInnerComments\";\nimport type * as t from \"..\";\n\n/**\n * Inherit all unique comments from `parent` node to `child` node.\n */\nexport default function inheritsComments<T extends t.Node>(\n  child: T,\n  parent: t.Node,\n): T {\n  inheritTrailingComments(child, parent);\n  inheritLeadingComments(child, parent);\n  inheritInnerComments(child, parent);\n\n  return child;\n}\n", "import { COMMENT_KEYS } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Remove comment properties from a node.\n */\nexport default function removeComments<T extends t.Node>(node: T): T {\n  COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}\n", "/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport { FLIPPED_ALIAS_KEYS } from \"../../definitions\";\n\nexport const STANDARDIZED_TYPES = FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexport const EXPRESSION_TYPES = FLIPPED_ALIAS_KEYS[\"Expression\"];\nexport const BINARY_TYPES = FLIPPED_ALIAS_KEYS[\"Binary\"];\nexport const SCOPABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexport const BLOCKPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexport const BLOCK_TYPES = FLIPPED_ALIAS_KEYS[\"Block\"];\nexport const STATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"Statement\"];\nexport const TERMINATORLESS_TYPES = FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexport const COMPLETIONSTATEMENT_TYPES =\n  FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexport const CONDITIONAL_TYPES = FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexport const LOOP_TYPES = FLIPPED_ALIAS_KEYS[\"Loop\"];\nexport const WHILE_TYPES = FLIPPED_ALIAS_KEYS[\"While\"];\nexport const EXPRESSIONWRAPPER_TYPES = FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexport const FOR_TYPES = FLIPPED_ALIAS_KEYS[\"For\"];\nexport const FORXSTATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexport const FUNCTION_TYPES = FLIPPED_ALIAS_KEYS[\"Function\"];\nexport const FUNCTIONPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexport const PUREISH_TYPES = FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexport const DECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexport const PATTERNLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexport const LVAL_TYPES = FLIPPED_ALIAS_KEYS[\"LVal\"];\nexport const TSENTITYNAME_TYPES = FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexport const LITERAL_TYPES = FLIPPED_ALIAS_KEYS[\"Literal\"];\nexport const IMMUTABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexport const USERWHITESPACABLE_TYPES = FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexport const METHOD_TYPES = FLIPPED_ALIAS_KEYS[\"Method\"];\nexport const OBJECTMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexport const PROPERTY_TYPES = FLIPPED_ALIAS_KEYS[\"Property\"];\nexport const UNARYLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexport const PATTERN_TYPES = FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexport const CLASS_TYPES = FLIPPED_ALIAS_KEYS[\"Class\"];\nexport const IMPORTOREXPORTDECLARATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"ImportOrExportDeclaration\"];\nexport const EXPORTDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexport const MODULESPECIFIER_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexport const ACCESSOR_TYPES = FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexport const PRIVATE_TYPES = FLIPPED_ALIAS_KEYS[\"Private\"];\nexport const FLOW_TYPES = FLIPPED_ALIAS_KEYS[\"Flow\"];\nexport const FLOWTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexport const FLOWBASEANNOTATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexport const FLOWDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexport const FLOWPREDICATE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexport const ENUMBODY_TYPES = FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexport const ENUMMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexport const JSX_TYPES = FLIPPED_ALIAS_KEYS[\"JSX\"];\nexport const MISCELLANEOUS_TYPES = FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexport const TYPESCRIPT_TYPES = FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexport const TSTYPEELEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexport const TSTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSType\"];\nexport const TSBASETYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\n/**\n * @deprecated migrate to IMPORTOREXPORTDECLARATION_TYPES.\n */\nexport const MODULEDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\n", "import {\n  isBlockStatement,\n  isFunction,\n  isEmptyStatement,\n  isStatement,\n} from \"../validators/generated\";\nimport {\n  returnStatement,\n  expressionStatement,\n  blockStatement,\n} from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default function toBlock(\n  node: t.Statement | t.Expression,\n  parent?: t.Node,\n): t.BlockStatement {\n  if (isBlockStatement(node)) {\n    return node;\n  }\n\n  let blockNodes: t.Statement[] = [];\n\n  if (isEmptyStatement(node)) {\n    blockNodes = [];\n  } else {\n    if (!isStatement(node)) {\n      if (isFunction(parent)) {\n        node = returnStatement(node);\n      } else {\n        node = expressionStatement(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return blockStatement(blockNodes);\n}\n", "import toBlock from \"./toBlock\";\nimport type * as t from \"..\";\n\n/**\n * Ensure the `key` (defaults to \"body\") of a `node` is a block.\n * Casting it to a block if it is not.\n *\n * Returns the BlockStatement\n */\nexport default function ensureBlock(\n  node: t.Node,\n  key: string = \"body\",\n): t.BlockStatement {\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  const result = toBlock(node[key], node);\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  node[key] = result;\n  return result;\n}\n", "import isValidIdentifier from \"../validators/isValidIdentifier\";\nimport { isIdentifierChar } from \"@babel/helper-validator-identifier\";\n\nexport default function toIdentifier(input: string): string {\n  input = input + \"\";\n\n  // replace all non-valid identifiers with dashes\n  let name = \"\";\n  for (const c of input) {\n    name += isIdentifierChar(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!isValidIdentifier(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}\n", "import toIdentifier from \"./toIdentifier\";\n\nexport default function toBindingIdentifierName(name: string): string {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n\n  return name;\n}\n", "import { isIdentifier } from \"../validators/generated\";\nimport { stringLiteral } from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n", "import {\n  isExpression,\n  isFunction,\n  isClass,\n  isExpressionStatement,\n} from \"../validators/generated\";\nimport type * as t from \"..\";\n\nexport default toExpression as {\n  (node: t.Function): t.FunctionExpression;\n  (node: t.Class): t.ClassExpression;\n  (\n    node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n  ): t.Expression;\n};\n\nfunction toExpression(\n  node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n): t.Expression {\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  // return unmodified node\n  // important for things like ArrowFunctions where\n  // type change from ArrowFunction to FunctionExpression\n  // produces bugs like -> `()=>a` to `function () a`\n  // without generating a BlockStatement for it\n  // ref: https://github.com/babel/babili/issues/130\n  if (isExpression(node)) {\n    return node;\n  }\n\n  // convert all classes and functions\n  // ClassDeclaration -> ClassExpression\n  // FunctionDeclaration, ObjectMethod, ClassMethod -> FunctionExpression\n  if (isClass(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"ClassExpression\";\n  } else if (isFunction(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"FunctionExpression\";\n  }\n\n  // if it's still not an expression\n  if (!isExpression(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}\n", "import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\n/**\n * A prefix AST traversal implementation meant for simple searching\n * and processing.\n */\nexport default function traverseFast<Options = {}>(\n  node: t.Node | null | undefined,\n  enter: (node: t.Node, opts?: Options) => void,\n  opts?: Options,\n): void {\n  if (!node) return;\n\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  opts = opts || ({} as Options);\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode: t.Node | undefined | null =\n      // @ts-expect-error key must present in node\n      node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}\n", "import { COMMENT_KEYS } from \"../constants\";\nimport type * as t from \"..\";\n\nconst CLEAR_KEYS = [\n  \"tokens\", // only exist in t.File\n  \"start\",\n  \"end\",\n  \"loc\",\n  // Fixme: should be extra.raw / extra.rawValue?\n  \"raw\",\n  \"rawValue\",\n] as const;\n\nconst CLEAR_KEYS_PLUS_COMMENTS = [\n  ...COMMENT_KEYS,\n  \"comments\",\n  ...CLEAR_KEYS,\n] as const;\n\nexport type Options = { preserveComments?: boolean };\n/**\n * Remove all of the _* properties from a node along with the additional metadata\n * properties like location data and raw token data.\n */\nexport default function removeProperties(\n  node: t.Node,\n  opts: Options = {},\n): void {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n  for (const key of map) {\n    // @ts-expect-error tokens only exist in t.File\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    // @ts-expect-error string can not index node\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols: Array<symbol> = Object.getOwnPropertySymbols(node);\n  for (const sym of symbols) {\n    // @ts-expect-error Fixme: document symbol properties\n    node[sym] = null;\n  }\n}\n", "import traverseFast from \"../traverse/traverseFast\";\nimport removeProperties from \"./removeProperties\";\nimport type * as t from \"..\";\n\nexport default function removePropertiesDeep<T extends t.Node>(\n  tree: T,\n  opts?: { preserveComments: boolean } | null,\n): T {\n  traverseFast(tree, removeProperties, opts);\n\n  return tree;\n}\n", "import { isIdentifier, isStringLiteral } from \"../validators/generated\";\nimport cloneNode from \"../clone/cloneNode\";\nimport removePropertiesDeep from \"../modifications/removePropertiesDeep\";\nimport type * as t from \"..\";\n\nexport default function toKeyAlias(\n  node: t.Method | t.Property,\n  key: t.Node = node.key,\n): string {\n  let alias;\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.kind`\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (isIdentifier(key)) {\n    alias = key.name;\n  } else if (isStringLiteral(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify(removePropertiesDeep(cloneNode(key)));\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.computed`\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.static`\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return (toKeyAlias.uid = 0);\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n", "import {\n  isExportDeclaration,\n  isIdentifier,\n  isDeclaration,\n  isFunctionDeclaration,\n  isFunctionExpression,\n  isExportAllDeclaration,\n} from \"../validators/generated\";\nimport type * as t from \"..\";\n\nexport { getBindingIdentifiers as default };\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates: true,\n  outerOnly?: boolean,\n): Record<string, Array<t.Identifier>>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: false,\n  outerOnly?: boolean,\n): Record<string, t.Identifier>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n\n/**\n * Return a list of binding identifiers associated with the input `node`.\n */\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  const search: t.Node[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n\n    const keys =\n      // @ts-expect-error getBindingIdentifiers.keys do not cover all AST types\n      getBindingIdentifiers.keys[id.type];\n\n    if (isIdentifier(id)) {\n      if (duplicates) {\n        const _ids = (ids[id.name] = ids[id.name] || []);\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n      continue;\n    }\n\n    if (isExportDeclaration(id) && !isExportAllDeclaration(id)) {\n      if (isDeclaration(id.declaration)) {\n        search.push(id.declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (isFunctionDeclaration(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if (isFunctionExpression(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes =\n          // @ts-expect-error key must present in id\n          id[key] as t.Node[] | t.Node | undefined | null;\n        if (nodes) {\n          Array.isArray(nodes) ? search.push(...nodes) : search.push(nodes);\n        }\n      }\n    }\n  }\n\n  // $FlowIssue Object.create() seems broken\n  return ids;\n}\n\n/**\n * Mapping of types to their identifier keys.\n */\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n\n  ObjectProperty: [\"value\"],\n\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"],\n};\n", "import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers\";\nimport {\n  isExpression,\n  isExpressionStatement,\n  isVariableDeclaration,\n  isIfStatement,\n  isBlockStatement,\n  isEmptyStatement,\n} from \"../validators/generated\";\nimport {\n  sequenceExpression,\n  assignmentExpression,\n  conditionalExpression,\n} from \"../builders/generated\";\nimport cloneNode from \"../clone/cloneNode\";\nimport type * as t from \"..\";\nimport type { Scope } from \"@babel/traverse\";\n\nexport type DeclarationInfo = {\n  kind: t.VariableDeclaration[\"kind\"];\n  id: t.Identifier;\n};\n\nexport default function gatherSequenceExpressions(\n  nodes: ReadonlyArray<t.Node>,\n  scope: Scope,\n  declars: Array<DeclarationInfo>,\n) {\n  const exprs: t.Expression[] = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    // if we encounter emptyStatement before a non-emptyStatement\n    // we want to disregard that\n    if (!isEmptyStatement(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if (isExpression(node)) {\n      exprs.push(node);\n    } else if (isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return; // bailed\n\n      for (const declar of node.declarations) {\n        const bindings = getBindingIdentifiers(declar);\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: cloneNode(bindings[key]),\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (isIfStatement(node)) {\n      const consequent = node.consequent\n        ? gatherSequenceExpressions([node.consequent], scope, declars)\n        : scope.buildUndefinedNode();\n      const alternate = node.alternate\n        ? gatherSequenceExpressions([node.alternate], scope, declars)\n        : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return; // bailed\n\n      exprs.push(conditionalExpression(node.test, consequent, alternate));\n    } else if (isBlockStatement(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return; // bailed\n\n      exprs.push(body);\n    } else if (isEmptyStatement(node)) {\n      // empty statement so ensure the last item is undefined if we're last\n      // checks if emptyStatement is first\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      // bailed, we can't turn this statement into an expression\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return sequenceExpression(exprs);\n  }\n}\n", "import gatherSequenceExpressions from \"./gatherSequenceExpressions\";\nimport type * as t from \"..\";\nimport type { DeclarationInfo } from \"./gatherSequenceExpressions\";\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\nexport default function toSequenceExpression(\n  nodes: ReadonlyArray<t.Node>,\n  scope: any,\n): t.SequenceExpression | undefined {\n  if (!nodes?.length) return;\n\n  const declars: DeclarationInfo[] = [];\n  const result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  // @ts-expect-error fixme: gatherSequenceExpressions will return an Expression when there are only one element\n  return result;\n}\n", "import {\n  isStatement,\n  isFunction,\n  isClass,\n  isAssignmentExpression,\n} from \"../validators/generated\";\nimport { expressionStatement } from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default toStatement as {\n  (node: t.AssignmentExpression, ignore?: boolean): t.ExpressionStatement;\n\n  <T extends t.Statement>(node: T, ignore: false): T;\n  <T extends t.Statement>(node: T, ignore?: boolean): T | false;\n\n  (node: t.Class, ignore: false): t.ClassDeclaration;\n  (node: t.Class, ignore?: boolean): t.ClassDeclaration | false;\n\n  (node: t.Function, ignore: false): t.FunctionDeclaration;\n  (node: t.Function, ignore?: boolean): t.FunctionDeclaration | false;\n\n  (node: t.Node, ignore: false): t.Statement;\n  (node: t.Node, ignore?: boolean): t.Statement | false;\n};\n\nfunction toStatement(node: t.Node, ignore?: boolean): t.Statement | false {\n  if (isStatement(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if (isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\" as const;\n  } else if (isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\" as const;\n  } else if (isAssignmentExpression(node)) {\n    return expressionStatement(node);\n  }\n\n  // @ts-expect-error todo(flow->ts): node.id might be missing\n  if (mustHaveId && !node.id) {\n    newType = false as false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  // @ts-expect-error manipulating node.type\n  node.type = newType;\n\n  // @ts-expect-error todo(flow->ts) refactor to avoid type unsafe mutations like reassigning node type above\n  return node;\n}\n", "import isValidIdentifier from \"../validators/isValidIdentifier\";\nimport {\n  identifier,\n  booleanLiteral,\n  nullLiteral,\n  stringLiteral,\n  numericLiteral,\n  regExpLiteral,\n  arrayExpression,\n  objectProperty,\n  objectExpression,\n  unaryExpression,\n  binaryExpression,\n} from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default valueToNode as {\n  (value: undefined): t.Identifier; // TODO: This should return \"void 0\"\n  (value: boolean): t.BooleanLiteral;\n  (value: null): t.NullLiteral;\n  (value: string): t.StringLiteral;\n  // Infinities and NaN need to use a BinaryExpression; negative values must be wrapped in UnaryExpression\n  (value: number): t.NumericLiteral | t.BinaryExpression | t.UnaryExpression;\n  (value: RegExp): t.RegExpLiteral;\n  (value: ReadonlyArray<unknown>): t.ArrayExpression;\n\n  // this throws with objects that are not plain objects,\n  // or if there are non-valueToNode-able values\n  (value: object): t.ObjectExpression;\n\n  (value: unknown): t.Expression;\n};\n\n// @ts-expect-error: Object.prototype.toString must return a string\nconst objectToString: (value: unknown) => string = Function.call.bind(\n  Object.prototype.toString,\n);\n\nfunction isRegExp(value: unknown): value is RegExp {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value: unknown): value is object {\n  if (\n    typeof value !== \"object\" ||\n    value === null ||\n    Object.prototype.toString.call(value) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  // Object.prototype's __proto__ is null. Every other class's __proto__.__proto__ is\n  // not null by default. We cannot check if proto === Object.prototype because it\n  // could come from another realm.\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value: unknown): t.Expression {\n  // undefined\n  if (value === undefined) {\n    return identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return nullLiteral();\n  }\n\n  // strings\n  if (typeof value === \"string\") {\n    return stringLiteral(value);\n  }\n\n  // numbers\n  if (typeof value === \"number\") {\n    let result;\n    if (Number.isFinite(value)) {\n      result = numericLiteral(Math.abs(value));\n    } else {\n      let numerator;\n      if (Number.isNaN(value)) {\n        // NaN\n        numerator = numericLiteral(0);\n      } else {\n        // Infinity / -Infinity\n        numerator = numericLiteral(1);\n      }\n\n      result = binaryExpression(\"/\", numerator, numericLiteral(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = unaryExpression(\"-\", result);\n    }\n\n    return result;\n  }\n\n  // regexes\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return arrayExpression(value.map(valueToNode));\n  }\n\n  // object\n  if (isPlainObject(value)) {\n    const props = [];\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n      if (isValidIdentifier(key)) {\n        nodeKey = identifier(key);\n      } else {\n        nodeKey = stringLiteral(key);\n      }\n      props.push(\n        objectProperty(\n          nodeKey,\n          valueToNode(\n            // @ts-expect-error key must present in value\n            value[key],\n          ),\n        ),\n      );\n    }\n    return objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}\n", "import { memberExpression } from \"../builders/generated\";\nimport type * as t from \"..\";\n\n/**\n * Append a node to a member expression.\n */\nexport default function appendToMemberExpression(\n  member: t.MemberExpression,\n  append: t.MemberExpression[\"property\"],\n  computed: boolean = false,\n): t.MemberExpression {\n  member.object = memberExpression(\n    member.object,\n    member.property,\n    member.computed,\n  );\n  member.property = append;\n  member.computed = !!computed;\n\n  return member;\n}\n", "import { INHERIT_KEYS } from \"../constants\";\nimport inheritsComments from \"../comments/inheritsComments\";\nimport type * as t from \"..\";\n\n/**\n * Inherit all contextual properties from `parent` node to `child` node.\n */\nexport default function inherits<T extends t.Node | null | undefined>(\n  child: T,\n  parent: t.Node | null | undefined,\n): T {\n  if (!child || !parent) return child;\n\n  // optionally inherit specific properties if not null\n  for (const key of INHERIT_KEYS.optional) {\n    // @ts-expect-error Fixme: refine parent types\n    if (child[key] == null) {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit \"private\" properties\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit select properties\n  for (const key of INHERIT_KEYS.force) {\n    // @ts-expect-error Fixme: refine parent types\n    child[key] = parent[key];\n  }\n\n  inheritsComments(child, parent);\n\n  return child;\n}\n", "import { memberExpression } from \"../builders/generated\";\nimport { isSuper } from \"..\";\nimport type * as t from \"..\";\n\n/**\n * Prepend a node to a member expression.\n */\nexport default function prependToMemberExpression<\n  T extends Pick<t.MemberExpression, \"object\" | \"property\">,\n>(member: T, prepend: t.MemberExpression[\"object\"]): T {\n  if (isSuper(member.object)) {\n    throw new Error(\n      \"Cannot prepend node to super property access (`super.foo`).\",\n    );\n  }\n  member.object = memberExpression(prepend, member.object);\n\n  return member;\n}\n", "import getBindingIdentifiers from \"./getBindingIdentifiers\";\nimport type * as t from \"..\";\n\nexport default getOuterBindingIdentifiers as {\n  (node: t.Node, duplicates: true): Record<string, Array<t.Identifier>>;\n  (node: t.Node, duplicates?: false): Record<string, t.Identifier>;\n  (\n    node: t.Node,\n    duplicates?: boolean,\n  ): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n};\n\nfunction getOuterBindingIdentifiers(\n  node: t.Node,\n  duplicates: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  return getBindingIdentifiers(node, duplicates, true);\n}\n", "import { VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\nexport type TraversalAncestors = Array<{\n  node: t.Node;\n  key: string;\n  index?: number;\n}>;\n\nexport type TraversalHandler<T> = (\n  this: undefined,\n  node: t.Node,\n  parent: TraversalAncestors,\n  state: T,\n) => void;\n\nexport type TraversalHandlers<T> = {\n  enter?: TraversalHandler<T>;\n  exit?: TraversalHandler<T>;\n};\n\n/**\n * A general AST traversal with both prefix and postfix handlers, and a\n * state object. Exposes ancestry data to each handler so that more complex\n * AST data can be taken into account.\n */\nexport default function traverse<T>(\n  node: t.Node,\n  handlers: TraversalHandler<T> | TraversalHandlers<T>,\n  state?: T,\n): void {\n  if (typeof handlers === \"function\") {\n    handlers = { enter: handlers };\n  }\n\n  const { enter, exit } = handlers;\n\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl<T>(\n  node: any,\n  enter: Function | undefined,\n  exit: Function | undefined,\n  state: T | undefined,\n  ancestors: TraversalAncestors,\n) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n\n        ancestors.push({\n          node,\n          key,\n          index: i,\n        });\n\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key,\n      });\n\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}\n", "import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers\";\nimport type * as t from \"..\";\n/**\n * Check if the input `node` is a binding identifier.\n */\nexport default function isBinding(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  if (\n    grandparent &&\n    node.type === \"Identifier\" &&\n    parent.type === \"ObjectProperty\" &&\n    grandparent.type === \"ObjectExpression\"\n  ) {\n    // We need to special-case this, because getBindingIdentifiers\n    // has an ObjectProperty->value entry for destructuring patterns.\n    return false;\n  }\n\n  const keys =\n    // @ts-expect-error getBindingIdentifiers.keys does not cover all AST types\n    getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val =\n        // @ts-expect-error key must present in parent\n        parent[key];\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n", "import { isVariableDeclaration } from \"./generated\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-expect-error Fixme: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n", "import { isClassDeclaration, isFunctionDeclaration } from \"./generated\";\nimport isLet from \"./isLet\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n", "import isType from \"./isType\";\nimport { isIdentifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean {\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}\n", "import { NODE_FIELDS, VISITOR_KEYS } from \"../definitions\";\nimport type * as t from \"..\";\n\n/**\n * Check if two nodes are equivalent\n */\nexport default function isNodesEquivalent<T extends Partial<t.Node>>(\n  a: T,\n  b: any,\n): b is T {\n  if (\n    typeof a !== \"object\" ||\n    typeof b !== \"object\" ||\n    a == null ||\n    b == null\n  ) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a =\n      // @ts-expect-error field must present in a\n      a[field];\n    const val_b = b[field];\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !visitorKeys?.includes(field)) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import type * as t from \"..\";\n\n/**\n * Check if the input `node` is a reference to a bound variable.\n */\nexport default function isReferenced(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      // @ts-expect-error todo(flow->ts): Property 'source' does not exist on type 'AnyTypeAnnotation'.\n      if (grandparent?.source) {\n        return false;\n      }\n      return parent.local === node;\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}\n", "import {\n  isFunction,\n  isCatchClause,\n  isBlockStatement,\n  isScopable,\n  isPattern,\n} from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a scope.\n */\nexport default function isScope(node: t.Node, parent: t.Node): boolean {\n  // If a BlockStatement is an immediate descendent of a Function/CatchClause, it must be in the body.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isBlockStatement(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return false;\n  }\n\n  // If a Pattern is an immediate descendent of a Function/CatchClause, it must be in the params.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isPattern(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return true;\n  }\n\n  return isScopable(node);\n}\n", "import { isIdentifier, isImportDefaultSpecifier } from \"./generated\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n", "import isValidIdentifier from \"./isValidIdentifier\";\n\nconst RESERVED_WORDS_ES3_ONLY: Set<string> = new Set([\n  \"abstract\",\n  \"boolean\",\n  \"byte\",\n  \"char\",\n  \"double\",\n  \"enum\",\n  \"final\",\n  \"float\",\n  \"goto\",\n  \"implements\",\n  \"int\",\n  \"interface\",\n  \"long\",\n  \"native\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"short\",\n  \"static\",\n  \"synchronized\",\n  \"throws\",\n  \"transient\",\n  \"volatile\",\n]);\n\n/**\n * Check if the input `name` is a valid identifier name according to the ES3 specification.\n *\n * Additional ES3 reserved words are\n */\nexport default function isValidES3Identifier(name: string): boolean {\n  return isValidIdentifier(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}\n", "import { isVariableDeclaration } from \"./generated\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node, { kind: \"var\" }) &&\n    !(\n      // @ts-expect-error document private properties\n      node[BLOCK_SCOPED_SYMBOL]\n    )\n  );\n}\n", "import isReactComponent from \"./validators/react/isReactComponent\";\nimport isCompatTag from \"./validators/react/isCompatTag\";\nimport buildChildren from \"./builders/react/buildChildren\";\n\n// asserts\nexport { default as assertNode } from \"./asserts/assertNode\";\nexport * from \"./asserts/generated\";\n\n// builders\nexport { default as createTypeAnnotationBasedOnTypeof } from \"./builders/flow/createTypeAnnotationBasedOnTypeof\";\n/** @deprecated use createFlowUnionType instead */\nexport { default as createUnionTypeAnnotation } from \"./builders/flow/createFlowUnionType\";\nexport { default as createFlowUnionType } from \"./builders/flow/createFlowUnionType\";\nexport { default as createTSUnionType } from \"./builders/typescript/createTSUnionType\";\nexport * from \"./builders/generated\";\nexport * from \"./builders/generated/uppercase\";\n\n// clone\nexport { default as cloneNode } from \"./clone/cloneNode\";\nexport { default as clone } from \"./clone/clone\";\nexport { default as cloneDeep } from \"./clone/cloneDeep\";\nexport { default as cloneDeepWithoutLoc } from \"./clone/cloneDeepWithoutLoc\";\nexport { default as cloneWithoutLoc } from \"./clone/cloneWithoutLoc\";\n\n// comments\nexport { default as addComment } from \"./comments/addComment\";\nexport { default as addComments } from \"./comments/addComments\";\nexport { default as inheritInnerComments } from \"./comments/inheritInnerComments\";\nexport { default as inheritLeadingComments } from \"./comments/inheritLeadingComments\";\nexport { default as inheritsComments } from \"./comments/inheritsComments\";\nexport { default as inheritTrailingComments } from \"./comments/inheritTrailingComments\";\nexport { default as removeComments } from \"./comments/removeComments\";\n\n// constants\nexport * from \"./constants/generated\";\nexport * from \"./constants\";\n\n// converters\nexport { default as ensureBlock } from \"./converters/ensureBlock\";\nexport { default as toBindingIdentifierName } from \"./converters/toBindingIdentifierName\";\nexport { default as toBlock } from \"./converters/toBlock\";\nexport { default as toComputedKey } from \"./converters/toComputedKey\";\nexport { default as toExpression } from \"./converters/toExpression\";\nexport { default as toIdentifier } from \"./converters/toIdentifier\";\nexport { default as toKeyAlias } from \"./converters/toKeyAlias\";\nexport { default as toSequenceExpression } from \"./converters/toSequenceExpression\";\nexport { default as toStatement } from \"./converters/toStatement\";\nexport { default as valueToNode } from \"./converters/valueToNode\";\n\n// definitions\nexport * from \"./definitions\";\n\n// modifications\nexport { default as appendToMemberExpression } from \"./modifications/appendToMemberExpression\";\nexport { default as inherits } from \"./modifications/inherits\";\nexport { default as prependToMemberExpression } from \"./modifications/prependToMemberExpression\";\nexport {\n  default as removeProperties,\n  type Options as RemovePropertiesOptions,\n} from \"./modifications/removeProperties\";\nexport { default as removePropertiesDeep } from \"./modifications/removePropertiesDeep\";\nexport { default as removeTypeDuplicates } from \"./modifications/flow/removeTypeDuplicates\";\n\n// retrievers\nexport { default as getBindingIdentifiers } from \"./retrievers/getBindingIdentifiers\";\nexport { default as getOuterBindingIdentifiers } from \"./retrievers/getOuterBindingIdentifiers\";\n\n// traverse\nexport { default as traverse } from \"./traverse/traverse\";\nexport * from \"./traverse/traverse\";\nexport { default as traverseFast } from \"./traverse/traverseFast\";\n\n// utils\nexport { default as shallowEqual } from \"./utils/shallowEqual\";\n\n// validators\nexport { default as is } from \"./validators/is\";\nexport { default as isBinding } from \"./validators/isBinding\";\nexport { default as isBlockScoped } from \"./validators/isBlockScoped\";\nexport { default as isImmutable } from \"./validators/isImmutable\";\nexport { default as isLet } from \"./validators/isLet\";\nexport { default as isNode } from \"./validators/isNode\";\nexport { default as isNodesEquivalent } from \"./validators/isNodesEquivalent\";\nexport { default as isPlaceholderType } from \"./validators/isPlaceholderType\";\nexport { default as isReferenced } from \"./validators/isReferenced\";\nexport { default as isScope } from \"./validators/isScope\";\nexport { default as isSpecifierDefault } from \"./validators/isSpecifierDefault\";\nexport { default as isType } from \"./validators/isType\";\nexport { default as isValidES3Identifier } from \"./validators/isValidES3Identifier\";\nexport { default as isValidIdentifier } from \"./validators/isValidIdentifier\";\nexport { default as isVar } from \"./validators/isVar\";\nexport { default as matchesPattern } from \"./validators/matchesPattern\";\nexport { default as validate } from \"./validators/validate\";\nexport { default as buildMatchMemberExpression } from \"./validators/buildMatchMemberExpression\";\nexport * from \"./validators/generated\";\n\n// react\nexport const react = {\n  isReactComponent,\n  isCompatTag,\n  buildChildren,\n};\n\nexport type * from \"./ast-types/generated\";\n\n// this is used by @babel/traverse to warn about deprecated visitors\nexport { default as __internal__deprecationWarning } from \"./utils/deprecationWarning\";\n", "import assert from \"assert\";\nimport {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { Scope } from \"@babel/traverse\";\nimport type { File } from \"@babel/core\";\n\n/**\n * A class to track and accumulate mutations to the AST that will eventually\n * output a new require/import statement list.\n */\nexport default class ImportBuilder {\n  private _statements: t.Statement[] = [];\n  private _resultName: t.Identifier | t.MemberExpression = null;\n\n  declare _scope: Scope;\n  declare _hub: File[\"hub\"];\n  private _importedSource: string;\n\n  constructor(importedSource: string, scope: Scope, hub: File[\"hub\"]) {\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName,\n    };\n  }\n\n  import() {\n    this._statements.push(\n      importDeclaration([], stringLiteral(this._importedSource)),\n    );\n    return this;\n  }\n\n  require() {\n    this._statements.push(\n      expressionStatement(\n        callExpression(identifier(\"require\"), [\n          stringLiteral(this._importedSource),\n        ]),\n      ),\n    );\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n  default(name: string) {\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n  named(name: string, importName: string) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    assert(statement.type === \"ImportDeclaration\");\n    assert(statement.specifiers.length === 0);\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name: string) {\n    const id = this._scope.generateUidIdentifier(name);\n    let statement = this._statements[this._statements.length - 1];\n    if (statement.type !== \"ExpressionStatement\") {\n      assert(this._resultName);\n      statement = expressionStatement(this._resultName);\n      this._statements.push(statement);\n    }\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [\n      variableDeclarator(id, statement.expression),\n    ]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee: t.Expression) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      assert(statement.declarations.length === 1);\n      statement.declarations[0].init = callExpression(callee, [\n        statement.declarations[0].init,\n      ]);\n    } else {\n      assert.fail(\"Unexpected type.\");\n    }\n    return this;\n  }\n\n  prop(name: string) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(\n        statement.expression,\n        identifier(name),\n      );\n    } else if (statement.type === \"VariableDeclaration\") {\n      assert(statement.declarations.length === 1);\n      statement.declarations[0].init = memberExpression(\n        statement.declarations[0].init,\n        identifier(name),\n      );\n    } else {\n      assert.fail(\"Unexpected type:\" + statement.type);\n    }\n    return this;\n  }\n\n  read(name: string) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n}\n", "import type { NodePath } from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\n\n/**\n * A small utility to check if a file qualifies as a module.\n */\nexport default function isModule(path: NodePath<t.Program>) {\n  return path.node.sourceType === \"module\";\n}\n", "import assert from \"assert\";\nimport { numericLiteral, sequenceExpression } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { NodePath, Scope } from \"@babel/traverse\";\nimport type { File } from \"@babel/core\";\n\nimport ImportBuilder from \"./import-builder\";\nimport isModule from \"./is-module\";\n\nexport type ImportOptions = {\n  /**\n   * The module being referenced.\n   */\n  importedSource: string | null;\n  /**\n   * The type of module being imported:\n   *\n   *  * 'es6'      - An ES6 module.\n   *  * 'commonjs' - A CommonJS module. (Default)\n   */\n  importedType: \"es6\" | \"commonjs\";\n  /**\n   * The type of interop behavior for namespace/default/named when loading\n   * CommonJS modules.\n   *\n   * ## 'babel' (Default)\n   *\n   * Load using Babel's interop.\n   *\n   * If '.__esModule' is true, treat as 'compiled', else:\n   *\n   * * Namespace: A copy of the module.exports with .default\n   *     populated by the module.exports object.\n   * * Default: The module.exports value.\n   * * Named: The .named property of module.exports.\n   *\n   * The 'ensureLiveReference' has no effect on the liveness of these.\n   *\n   * ## 'compiled'\n   *\n   * Assume the module is ES6 compiled to CommonJS. Useful to avoid injecting\n   * interop logic if you are confident that the module is a certain format.\n   *\n   * * Namespace: The root module.exports object.\n   * * Default: The .default property of the namespace.\n   * * Named: The .named property of the namespace.\n   *\n   * Will return erroneous results if the imported module is _not_ compiled\n   * from ES6 with Babel.\n   *\n   * ## 'uncompiled'\n   *\n   * Assume the module is _not_ ES6 compiled to CommonJS. Used a simplified\n   * access pattern that doesn't require additional function calls.\n   *\n   * Will return erroneous results if the imported module _is_ compiled\n   * from ES6 with Babel.\n   *\n   * * Namespace: The module.exports object.\n   * * Default: The module.exports object.\n   * * Named: The .named property of module.exports.\n   */\n  importedInterop: \"babel\" | \"node\" | \"compiled\" | \"uncompiled\";\n  /**\n   * The type of CommonJS interop included in the environment that will be\n   * loading the output code.\n   *\n   *  * 'babel' - CommonJS modules load with Babel's interop. (Default)\n   *  * 'node'  - CommonJS modules load with Node's interop.\n   *\n   * See descriptions in 'importedInterop' for more details.\n   */\n  importingInterop: \"babel\" | \"node\";\n  /**\n   * Define whether we explicitly care that the import be a live reference.\n   * Only applies when importing default and named imports, not the namespace.\n   *\n   *  * true  - Force imported values to be live references.\n   *  * false - No particular requirements. Keeps the code simplest. (Default)\n   */\n  ensureLiveReference: boolean;\n  /**\n   * Define if we explicitly care that the result not be a property reference.\n   *\n   *  * true  - Force calls to exclude context. Useful if the value is going to\n   *            be used as function callee.\n   *  * false - No particular requirements for context of the access. (Default)\n   */\n  ensureNoContext: boolean;\n  /**\n   * Define whether the import should be loaded before or after the existing imports.\n   * \"after\" is only allowed inside ECMAScript modules, since it's not possible to\n   * reliably pick the location _after_ require() calls but _before_ other code in CJS.\n   */\n  importPosition: \"before\" | \"after\";\n\n  nameHint?: string;\n  blockHoist?: number;\n};\n\n/**\n * A general helper classes add imports via transforms. See README for usage.\n */\nexport default class ImportInjector {\n  /**\n   * The path used for manipulation.\n   */\n  declare _programPath: NodePath<t.Program>;\n\n  /**\n   * The scope used to generate unique variable names.\n   */\n  declare _programScope: Scope;\n\n  /**\n   * The file used to inject helpers and resolve paths.\n   */\n  declare _hub: File[\"hub\"];\n\n  /**\n   * The default options to use with this instance when imports are added.\n   */\n  _defaultOpts: ImportOptions = {\n    importedSource: null,\n    importedType: \"commonjs\",\n    importedInterop: \"babel\",\n    importingInterop: \"babel\",\n    ensureLiveReference: false,\n    ensureNoContext: false,\n    importPosition: \"before\",\n  };\n\n  constructor(\n    path: NodePath,\n    importedSource?: string,\n    opts?: Partial<ImportOptions>,\n  ) {\n    const programPath = path.find(p => p.isProgram()) as NodePath<t.Program>;\n\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub as File[\"hub\"];\n\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(\n    importName: string,\n    importedSourceIn: string,\n    opts: Partial<ImportOptions>,\n  ) {\n    assert(typeof importName === \"string\");\n\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      importName,\n    );\n  }\n\n  addNamespace(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      null,\n    );\n  }\n\n  addSideEffect(importedSourceIn: string, opts: Partial<ImportOptions>) {\n    return this._generateImport(\n      this._applyDefaults(importedSourceIn, opts),\n      void 0,\n    );\n  }\n\n  _applyDefaults(\n    importedSource: string | Partial<ImportOptions>,\n    opts: Partial<ImportOptions> | undefined,\n    isInit = false,\n  ) {\n    let newOpts: ImportOptions;\n    if (typeof importedSource === \"string\") {\n      newOpts = { ...this._defaultOpts, importedSource, ...opts };\n    } else {\n      assert(!opts, \"Unexpected secondary arguments.\");\n      newOpts = { ...this._defaultOpts, ...importedSource };\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n    return newOpts;\n  }\n\n  _generateImport(\n    opts: Partial<ImportOptions>,\n    importName: string | null | undefined,\n  ) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n\n      // Not meant for public usage. Allows code that absolutely must control\n      // ordering to set a specific hoist value on the import nodes.\n      // This is ignored when \"importPosition\" is \"after\".\n      blockHoist,\n    } = opts;\n\n    // Provide a hint for generateUidIdentifier for the local variable name\n    // to use for the import, if the code will generate a simple assignment\n    // to a variable.\n    let name = nameHint || importName;\n\n    const isMod = isModule(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new ImportBuilder(\n      importedSource,\n      this._programScope,\n      this._hub,\n    );\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      // import * as namespace from ''; namespace\n      // import def from ''; def\n      // import { named } from ''; named\n      builder.import();\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        // import _tmp from ''; var namespace = interopRequireWildcard(_tmp); namespace\n        // import _tmp from ''; var def = interopRequireDefault(_tmp).default; def\n        // import _tmp from ''; _tmp.named\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n\n        builder.import();\n        if (isNamespace) {\n          builder\n            .default(es6Default)\n            .var(name || importedSource)\n            .wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder\n              .default(es6Default)\n              .var(name || importedSource)\n              .defaultInterop()\n              .read(\"default\");\n          } else {\n            builder\n              .default(es6Default)\n              .var(name)\n              .defaultInterop()\n              .prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        // import * as namespace from ''; namespace\n        // import def from ''; def\n        // import { named } from ''; named\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = interopRequireWildcard(require(''));\n        // var def = interopRequireDefault(require('')).default; def\n        // var named = require('').named; named\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        // import namespace from ''; namespace\n        // import namespace from ''; namespace.default\n        // import namespace from ''; namespace.named\n\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        // import * as namespace from ''; namespace\n        // import def from ''; def\n        // import { named } from ''; named\n        // Note: These lookups will break if the module has no __esModule set,\n        // hence the warning that 'compiled' will not work on standard CommonJS.\n\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = require(''); namespace\n        // var namespace = require(''); namespace.default\n        // var namespace = require(''); namespace.named\n        // var named = require('').named;\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        // import namespace from ''; namespace\n        // import def from ''; def;\n        // import namespace from ''; namespace.named\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        // import namespace from '';\n        // import def from '';\n        // import { named } from ''; named;\n        // Note: These lookups will break if the module has __esModule set,\n        // hence the warning that 'uncompiled' will not work on ES6 transpiled\n        // to CommonJS.\n\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        // var namespace = require(''); namespace\n        // var def = require(''); def\n        // var namespace = require(''); namespace.named\n        // var named = require('').named;\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const { statements, resultName } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if (\n      (isDefault || isNamed) &&\n      ensureNoContext &&\n      resultName.type !== \"Identifier\"\n    ) {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n    return resultName;\n  }\n\n  _insertStatements(\n    statements: t.Statement[],\n    importPosition = \"before\",\n    blockHoist = 3,\n  ) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        // @ts-expect-error handle _blockHoist\n        node._blockHoist = blockHoist;\n      });\n\n      const targetPath = body.find(p => {\n        // @ts-expect-error todo(flow->ts): avoid mutations\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n}\n", "import ImportInjector, { type ImportOptions } from \"./import-injector\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\n\nexport { ImportInjector };\n\nexport { default as isModule } from \"./is-module\";\n\nexport function addDefault(\n  path: NodePath,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addDefault(importedSource, opts);\n}\n\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Omit<\n    Partial<ImportOptions>,\n    \"ensureLiveReference\" | \"ensureNoContext\"\n  >,\n): t.Identifier;\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Omit<Partial<ImportOptions>, \"ensureLiveReference\"> & {\n    ensureLiveReference: true;\n  },\n): t.MemberExpression;\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Omit<Partial<ImportOptions>, \"ensureNoContext\"> & {\n    ensureNoContext: true;\n  },\n): t.SequenceExpression;\n/**\n * add a named import to the program path of given path\n *\n * @export\n * @param {NodePath} path The starting path to find a program path\n * @param {string} name The name of the generated binding. Babel will prefix it with `_`\n * @param {string} importedSource The source of the import\n * @param {Partial<ImportOptions>} [opts]\n * @returns {t.Identifier | t.MemberExpression | t.SequenceExpression} If opts.ensureNoContext is true, returns a SequenceExpression,\n *   else if opts.ensureLiveReference is true, returns a MemberExpression, else returns an Identifier\n */\nfunction addNamed(\n  path: NodePath,\n  name: string,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addNamed(name, importedSource, opts);\n}\nexport { addNamed };\n\nexport function addNamespace(\n  path: NodePath,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addNamespace(importedSource, opts);\n}\n\nexport function addSideEffect(\n  path: NodePath,\n  importedSource: string,\n  opts?: Partial<ImportOptions>,\n) {\n  return new ImportInjector(path).addSideEffect(importedSource, opts);\n}\n", "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n", "module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n", "'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n", "var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n", "module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector/promises\": [\">= 19\"],\n\t\"node:inspector/promises\": [\">= 19\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"test/reporters\": \">= 19.9 && < 20.2\",\n\t\"node:test/reporters\": [\">= 19.9\", \">= 20\"],\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": [\">= 13.4 && < 13.5\", \">= 20\"],\n\t\"node:wasi\": \">= 20\",\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n", "'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n", "var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n", "{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector/promises\": [\">= 19\"],\n\t\"node:inspector/promises\": [\">= 19\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": \">= 13.4 && < 13.5\",\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n", "'use strict';\n\nvar isCoreModule = require('is-core-module');\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = isCoreModule(mod);\n    }\n}\nmodule.exports = core;\n", "var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n", "var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n", "var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"module\" has been externalized for browser compatibility. Cannot access \"module.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\nconst path = require('path');\nconst Module = require('module');\nconst fs = require('fs');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n\tif (typeof fromDir !== 'string') {\n\t\tthrow new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n\t}\n\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n\t}\n\n\ttry {\n\t\tfromDir = fs.realpathSync(fromDir);\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\tfromDir = path.resolve(fromDir);\n\t\t} else if (silent) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tconst fromFile = path.join(fromDir, 'noop.js');\n\n\tconst resolveFileName = () => Module._resolveFilename(moduleId, {\n\t\tid: fromFile,\n\t\tfilename: fromFile,\n\t\tpaths: Module._nodeModulePaths(fromDir)\n\t});\n\n\tif (silent) {\n\t\ttry {\n\t\t\treturn resolveFileName();\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);\n", "'use strict';\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n", "'use strict';\nconst callsites = require('callsites');\n\nmodule.exports = filepath => {\n\tconst stacks = callsites();\n\n\tif (!filepath) {\n\t\treturn stacks[2].getFileName();\n\t}\n\n\tlet seenVal = false;\n\n\t// Skip the first stack as it's this function\n\tstacks.shift();\n\n\tfor (const stack of stacks) {\n\t\tconst parentFilepath = stack.getFileName();\n\n\t\tif (typeof parentFilepath !== 'string') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (parentFilepath === filepath) {\n\t\t\tseenVal = true;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Skip native modules\n\t\tif (parentFilepath === 'module.js') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (seenVal && parentFilepath !== filepath) {\n\t\t\treturn parentFilepath;\n\t\t}\n\t}\n};\n", "'use strict';\nconst path = require('path');\nconst resolveFrom = require('resolve-from');\nconst parentModule = require('parent-module');\n\nmodule.exports = moduleId => {\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tconst parentPath = parentModule(__filename);\n\n\tconst cwd = parentPath ? path.dirname(parentPath) : __dirname;\n\tconst filePath = resolveFrom(cwd, moduleId);\n\n\tconst oldModule = require.cache[filePath];\n\t// Delete itself from module parent\n\tif (oldModule && oldModule.parent) {\n\t\tlet i = oldModule.parent.children.length;\n\n\t\twhile (i--) {\n\t\t\tif (oldModule.parent.children[i].id === filePath) {\n\t\t\t\toldModule.parent.children.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete require.cache[filePath]; // Delete module from cache\n\n\tconst parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step\n\n\treturn parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require\n};\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n", "'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n", "'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n", "'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n", "'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n", "// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n", "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n", "'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj) {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && obj.splice instanceof Function);\n};\n", "'use strict';\n\nvar util = require('util');\nvar isArrayish = require('is-arrayish');\n\nvar errorEx = function errorEx(name, properties) {\n\tif (!name || name.constructor !== String) {\n\t\tproperties = name || {};\n\t\tname = Error.name;\n\t}\n\n\tvar errorExError = function ErrorEXError(message) {\n\t\tif (!this) {\n\t\t\treturn new ErrorEXError(message);\n\t\t}\n\n\t\tmessage = message instanceof Error\n\t\t\t? message.message\n\t\t\t: (message || this.message);\n\n\t\tError.call(this, message);\n\t\tError.captureStackTrace(this, errorExError);\n\n\t\tthis.name = name;\n\n\t\tObject.defineProperty(this, 'message', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: function () {\n\t\t\t\tvar newMessage = message.split(/\\r?\\n/g);\n\n\t\t\t\tfor (var key in properties) {\n\t\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\t\tif ('message' in modifier) {\n\t\t\t\t\t\tnewMessage = modifier.message(this[key], newMessage) || newMessage;\n\t\t\t\t\t\tif (!isArrayish(newMessage)) {\n\t\t\t\t\t\t\tnewMessage = [newMessage];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn newMessage.join('\\n');\n\t\t\t},\n\t\t\tset: function (v) {\n\t\t\t\tmessage = v;\n\t\t\t}\n\t\t});\n\n\t\tvar overwrittenStack = null;\n\n\t\tvar stackDescriptor = Object.getOwnPropertyDescriptor(this, 'stack');\n\t\tvar stackGetter = stackDescriptor.get;\n\t\tvar stackValue = stackDescriptor.value;\n\t\tdelete stackDescriptor.value;\n\t\tdelete stackDescriptor.writable;\n\n\t\tstackDescriptor.set = function (newstack) {\n\t\t\toverwrittenStack = newstack;\n\t\t};\n\n\t\tstackDescriptor.get = function () {\n\t\t\tvar stack = (overwrittenStack || ((stackGetter)\n\t\t\t\t? stackGetter.call(this)\n\t\t\t\t: stackValue)).split(/\\r?\\n+/g);\n\n\t\t\t// starting in Node 7, the stack builder caches the message.\n\t\t\t// just replace it.\n\t\t\tif (!overwrittenStack) {\n\t\t\t\tstack[0] = this.name + ': ' + this.message;\n\t\t\t}\n\n\t\t\tvar lineCount = 1;\n\t\t\tfor (var key in properties) {\n\t\t\t\tif (!properties.hasOwnProperty(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar modifier = properties[key];\n\n\t\t\t\tif ('line' in modifier) {\n\t\t\t\t\tvar line = modifier.line(this[key]);\n\t\t\t\t\tif (line) {\n\t\t\t\t\t\tstack.splice(lineCount++, 0, '    ' + line);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ('stack' in modifier) {\n\t\t\t\t\tmodifier.stack(this[key], stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stack.join('\\n');\n\t\t};\n\n\t\tObject.defineProperty(this, 'stack', stackDescriptor);\n\t};\n\n\tif (Object.setPrototypeOf) {\n\t\tObject.setPrototypeOf(errorExError.prototype, Error.prototype);\n\t\tObject.setPrototypeOf(errorExError, Error);\n\t} else {\n\t\tutil.inherits(errorExError, Error);\n\t}\n\n\treturn errorExError;\n};\n\nerrorEx.append = function (str, def) {\n\treturn {\n\t\tmessage: function (v, message) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\tmessage[0] += ' ' + str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn message;\n\t\t}\n\t};\n};\n\nerrorEx.line = function (str, def) {\n\treturn {\n\t\tline: function (v) {\n\t\t\tv = v || def;\n\n\t\t\tif (v) {\n\t\t\t\treturn str.replace('%s', v.toString());\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t};\n};\n\nmodule.exports = errorEx;\n", "'use strict'\n\nconst hexify = char => {\n  const h = char.charCodeAt(0).toString(16).toUpperCase()\n  return '0x' + (h.length % 2 ? '0' : '') + h\n}\n\nconst parseError = (e, txt, context) => {\n  if (!txt) {\n    return {\n      message: e.message + ' while parsing empty string',\n      position: 0,\n    }\n  }\n  const badToken = e.message.match(/^Unexpected token (.) .*position\\s+(\\d+)/i)\n  const errIdx = badToken ? +badToken[2]\n    : e.message.match(/^Unexpected end of JSON.*/i) ? txt.length - 1\n    : null\n\n  const msg = badToken ? e.message.replace(/^Unexpected token ./, `Unexpected token ${\n      JSON.stringify(badToken[1])\n    } (${hexify(badToken[1])})`)\n    : e.message\n\n  if (errIdx !== null && errIdx !== undefined) {\n    const start = errIdx <= context ? 0\n      : errIdx - context\n\n    const end = errIdx + context >= txt.length ? txt.length\n      : errIdx + context\n\n    const slice = (start === 0 ? '' : '...') +\n      txt.slice(start, end) +\n      (end === txt.length ? '' : '...')\n\n    const near = txt === slice ? '' : 'near '\n\n    return {\n      message: msg + ` while parsing ${near}${JSON.stringify(slice)}`,\n      position: errIdx,\n    }\n  } else {\n    return {\n      message: msg + ` while parsing '${txt.slice(0, context * 2)}'`,\n      position: 0,\n    }\n  }\n}\n\nclass JSONParseError extends SyntaxError {\n  constructor (er, txt, context, caller) {\n    context = context || 20\n    const metadata = parseError(er, txt, context)\n    super(metadata.message)\n    Object.assign(this, metadata)\n    this.code = 'EJSONPARSE'\n    this.systemError = er\n    Error.captureStackTrace(this, caller || this.constructor)\n  }\n  get name () { return this.constructor.name }\n  set name (n) {}\n  get [Symbol.toStringTag] () { return this.constructor.name }\n}\n\nconst kIndent = Symbol.for('indent')\nconst kNewline = Symbol.for('newline')\n// only respect indentation if we got a line break, otherwise squash it\n// things other than objects and arrays aren't indented, so ignore those\n// Important: in both of these regexps, the $1 capture group is the newline\n// or undefined, and the $2 capture group is the indent, or undefined.\nconst formatRE = /^\\s*[{\\[]((?:\\r?\\n)+)([\\s\\t]*)/\nconst emptyRE = /^(?:\\{\\}|\\[\\])((?:\\r?\\n)+)?$/\n\nconst parseJson = (txt, reviver, context) => {\n  const parseText = stripBOM(txt)\n  context = context || 20\n  try {\n    // get the indentation so that we can save it back nicely\n    // if the file starts with {\" then we have an indent of '', ie, none\n    // otherwise, pick the indentation of the next line after the first \\n\n    // If the pattern doesn't match, then it means no indentation.\n    // JSON.stringify ignores symbols, so this is reasonably safe.\n    // if the string is '{}' or '[]', then use the default 2-space indent.\n    const [, newline = '\\n', indent = '  '] = parseText.match(emptyRE) ||\n      parseText.match(formatRE) ||\n      [, '', '']\n\n    const result = JSON.parse(parseText, reviver)\n    if (result && typeof result === 'object') {\n      result[kNewline] = newline\n      result[kIndent] = indent\n    }\n    return result\n  } catch (e) {\n    if (typeof txt !== 'string' && !Buffer.isBuffer(txt)) {\n      const isEmptyArray = Array.isArray(txt) && txt.length === 0\n      throw Object.assign(new TypeError(\n        `Cannot parse ${isEmptyArray ? 'an empty array' : String(txt)}`\n      ), {\n        code: 'EJSONPARSE',\n        systemError: e,\n      })\n    }\n\n    throw new JSONParseError(e, parseText, context, parseJson)\n  }\n}\n\n// Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n// because the buffer-to-string conversion in `fs.readFileSync()`\n// translates it to FEFF, the UTF-16 BOM.\nconst stripBOM = txt => String(txt).replace(/^\\uFEFF/, '')\n\nmodule.exports = parseJson\nparseJson.JSONParseError = JSONParseError\n\nparseJson.noExceptions = (txt, reviver) => {\n  try {\n    return JSON.parse(stripBOM(txt), reviver)\n  } catch (e) {}\n}\n", "\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n", "// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n", "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n", "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n", "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n", "/// <reference path=\"../../../lib/third-party-libs.d.ts\" />\n\nimport type { Token as JSToken, JSXToken } from \"js-tokens\";\nimport jsTokens from \"js-tokens\";\n\nimport {\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\nimport Chalk from \"chalk\";\n\ntype ChalkClass = ReturnType<typeof getChalk>;\n\n/**\n * Names that are always allowed as identifiers, but also appear as keywords\n * within certain syntactic productions.\n *\n * https://tc39.es/ecma262/#sec-keywords-and-reserved-words\n *\n * `target` has been omitted since it is very likely going to be a false\n * positive.\n */\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\ntype InternalTokenType =\n  | \"keyword\"\n  | \"capitalized\"\n  | \"jsxIdentifier\"\n  | \"punctuator\"\n  | \"number\"\n  | \"string\"\n  | \"regex\"\n  | \"comment\"\n  | \"invalid\";\n\ntype Token = {\n  type: InternalTokenType | \"uncolored\";\n  value: string;\n};\n/**\n * Chalk styles for token types.\n */\nfunction getDefs(chalk: ChalkClass): Record<InternalTokenType, ChalkClass> {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold,\n  };\n}\n\n/**\n * RegExp to test for newlines in terminal.\n */\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\n/**\n * RegExp to test for the three types of brackets.\n */\nconst BRACKET = /^[()[\\]{}]$/;\n\nlet tokenize: (\n  text: string,\n) => Generator<{ type: InternalTokenType | \"uncolored\"; value: string }>;\n\nif (process.env.BABEL_8_BREAKING) {\n  /**\n   * Get the type of token, specifying punctuator type.\n   */\n  const getTokenType = function (\n    token: JSToken | JSXToken,\n  ): InternalTokenType | \"uncolored\" {\n    if (token.type === \"IdentifierName\") {\n      if (\n        isKeyword(token.value) ||\n        isStrictReservedWord(token.value, true) ||\n        sometimesKeywords.has(token.value)\n      ) {\n        return \"keyword\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"Punctuator\" && BRACKET.test(token.value)) {\n      return \"uncolored\";\n    }\n\n    if (token.type === \"Invalid\" && token.value === \"@\") {\n      return \"punctuator\";\n    }\n\n    switch (token.type) {\n      case \"NumericLiteral\":\n        return \"number\";\n\n      case \"StringLiteral\":\n      case \"JSXString\":\n      case \"NoSubstitutionTemplate\":\n        return \"string\";\n\n      case \"RegularExpressionLiteral\":\n        return \"regex\";\n\n      case \"Punctuator\":\n      case \"JSXPunctuator\":\n        return \"punctuator\";\n\n      case \"MultiLineComment\":\n      case \"SingleLineComment\":\n        return \"comment\";\n\n      case \"Invalid\":\n      case \"JSXInvalid\":\n        return \"invalid\";\n\n      case \"JSXIdentifier\":\n        return \"jsxIdentifier\";\n\n      default:\n        return \"uncolored\";\n    }\n  };\n\n  /**\n   * Turn a string of JS into an array of objects.\n   */\n  tokenize = function* (text: string): Generator<Token> {\n    for (const token of jsTokens(text, { jsx: true })) {\n      switch (token.type) {\n        case \"TemplateHead\":\n          yield { type: \"string\", value: token.value.slice(0, -2) };\n          yield { type: \"punctuator\", value: \"${\" };\n          break;\n\n        case \"TemplateMiddle\":\n          yield { type: \"punctuator\", value: \"}\" };\n          yield { type: \"string\", value: token.value.slice(1, -2) };\n          yield { type: \"punctuator\", value: \"${\" };\n          break;\n\n        case \"TemplateTail\":\n          yield { type: \"punctuator\", value: \"}\" };\n          yield { type: \"string\", value: token.value.slice(1) };\n          break;\n\n        default:\n          yield {\n            type: getTokenType(token),\n            value: token.value,\n          };\n      }\n    }\n  };\n} else {\n  /**\n   * RegExp to test for what seems to be a JSX tag name.\n   */\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  // The token here is defined in js-tokens@4. However we don't bother\n  // typing it since the whole block will be removed in Babel 8\n  const getTokenType = function (token: any, offset: number, text: string) {\n    if (token.type === \"name\") {\n      if (\n        isKeyword(token.value) ||\n        isStrictReservedWord(token.value, true) ||\n        sometimesKeywords.has(token.value)\n      ) {\n        return \"keyword\";\n      }\n\n      if (\n        JSX_TAG.test(token.value) &&\n        (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) == \"</\")\n      ) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (\n      token.type === \"invalid\" &&\n      (token.value === \"@\" || token.value === \"#\")\n    ) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text: string) {\n    let match;\n    while ((match = (jsTokens as any).default.exec(text))) {\n      const token = (jsTokens as any).matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value,\n      };\n    }\n  };\n}\n\n/**\n * Highlight `text` using the token definitions in `defs`.\n */\nfunction highlightTokens(defs: Record<string, ChalkClass>, text: string) {\n  let highlighted = \"\";\n\n  for (const { type, value } of tokenize(text)) {\n    const colorize = defs[type];\n    if (colorize) {\n      highlighted += value\n        .split(NEWLINE)\n        .map(str => colorize(str))\n        .join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\n/**\n * Highlight `text` using the token definitions in `defs`.\n */\n\ntype Options = {\n  forceColor?: boolean;\n};\n\n/**\n * Whether the code should be highlighted given the passed options.\n */\nexport function shouldHighlight(options: Options): boolean {\n  return !!Chalk.supportsColor || options.forceColor;\n}\n\n/**\n * The Chalk instance that should be used given the passed options.\n */\nexport function getChalk(options: Options) {\n  return options.forceColor\n    ? new Chalk.constructor({ enabled: true, level: 1 })\n    : Chalk;\n}\n\n/**\n * Highlight `code`.\n */\nexport default function highlight(code: string, options: Options = {}): string {\n  if (code !== \"\" && shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} | `;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line, markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}", "'use strict';\nconst errorEx = require('error-ex');\nconst fallback = require('json-parse-even-better-errors');\nconst {default: LinesAndColumns} = require('lines-and-columns');\nconst {codeFrameColumns} = require('@babel/code-frame');\n\nconst JSONError = errorEx('JSONError', {\n\tfileName: errorEx.append('in %s'),\n\tcodeFrame: errorEx.append('\\n\\n%s\\n')\n});\n\nconst parseJson = (string, reviver, filename) => {\n\tif (typeof reviver === 'string') {\n\t\tfilename = reviver;\n\t\treviver = null;\n\t}\n\n\ttry {\n\t\ttry {\n\t\t\treturn JSON.parse(string, reviver);\n\t\t} catch (error) {\n\t\t\tfallback(string, reviver);\n\t\t\tthrow error;\n\t\t}\n\t} catch (error) {\n\t\terror.message = error.message.replace(/\\n/g, '');\n\t\tconst indexMatch = error.message.match(/in JSON at position (\\d+) while parsing/);\n\n\t\tconst jsonError = new JSONError(error);\n\t\tif (filename) {\n\t\t\tjsonError.fileName = filename;\n\t\t}\n\n\t\tif (indexMatch && indexMatch.length > 0) {\n\t\t\tconst lines = new LinesAndColumns(string);\n\t\t\tconst index = Number(indexMatch[1]);\n\t\t\tconst location = lines.locationForIndex(index);\n\n\t\t\tconst codeFrame = codeFrameColumns(\n\t\t\t\tstring,\n\t\t\t\t{start: {line: location.line + 1, column: location.column + 1}},\n\t\t\t\t{highlightCode: true}\n\t\t\t);\n\n\t\t\tjsonError.codeFrame = codeFrame;\n\t\t}\n\n\t\tthrow jsonError;\n\t}\n};\n\nparseJson.JSONError = JSONError;\n\nmodule.exports = parseJson;\n", "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar Char = {\n  ANCHOR: '&',\n  COMMENT: '#',\n  TAG: '!',\n  DIRECTIVES_END: '-',\n  DOCUMENT_END: '.'\n};\nvar Type = {\n  ALIAS: 'ALIAS',\n  BLANK_LINE: 'BLANK_LINE',\n  BLOCK_FOLDED: 'BLOCK_FOLDED',\n  BLOCK_LITERAL: 'BLOCK_LITERAL',\n  COMMENT: 'COMMENT',\n  DIRECTIVE: 'DIRECTIVE',\n  DOCUMENT: 'DOCUMENT',\n  FLOW_MAP: 'FLOW_MAP',\n  FLOW_SEQ: 'FLOW_SEQ',\n  MAP: 'MAP',\n  MAP_KEY: 'MAP_KEY',\n  MAP_VALUE: 'MAP_VALUE',\n  PLAIN: 'PLAIN',\n  QUOTE_DOUBLE: 'QUOTE_DOUBLE',\n  QUOTE_SINGLE: 'QUOTE_SINGLE',\n  SEQ: 'SEQ',\n  SEQ_ITEM: 'SEQ_ITEM'\n};\nvar defaultTagPrefix = 'tag:yaml.org,2002:';\nvar defaultTags = {\n  MAP: 'tag:yaml.org,2002:map',\n  SEQ: 'tag:yaml.org,2002:seq',\n  STR: 'tag:yaml.org,2002:str'\n};\n\nfunction findLineStarts(src) {\n  var ls = [0];\n  var offset = src.indexOf('\\n');\n\n  while (offset !== -1) {\n    offset += 1;\n    ls.push(offset);\n    offset = src.indexOf('\\n', offset);\n  }\n\n  return ls;\n}\n\nfunction getSrcInfo(cst) {\n  var lineStarts, src;\n\n  if (typeof cst === 'string') {\n    lineStarts = findLineStarts(cst);\n    src = cst;\n  } else {\n    if (Array.isArray(cst)) cst = cst[0];\n\n    if (cst && cst.context) {\n      if (!cst.lineStarts) cst.lineStarts = findLineStarts(cst.context.src);\n      lineStarts = cst.lineStarts;\n      src = cst.context.src;\n    }\n  }\n\n  return {\n    lineStarts: lineStarts,\n    src: src\n  };\n}\n/**\n * @typedef {Object} LinePos - One-indexed position in the source\n * @property {number} line\n * @property {number} col\n */\n\n/**\n * Determine the line/col position matching a character offset.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns a one-indexed `{ line, col }` location if found, or\n * `undefined` otherwise.\n *\n * @param {number} offset\n * @param {string|Document|Document[]} cst\n * @returns {?LinePos}\n */\n\n\nfunction getLinePos(offset, cst) {\n  if (typeof offset !== 'number' || offset < 0) return null;\n\n  var _getSrcInfo = getSrcInfo(cst),\n      lineStarts = _getSrcInfo.lineStarts,\n      src = _getSrcInfo.src;\n\n  if (!lineStarts || !src || offset > src.length) return null;\n\n  for (var i = 0; i < lineStarts.length; ++i) {\n    var start = lineStarts[i];\n\n    if (offset < start) {\n      return {\n        line: i,\n        col: offset - lineStarts[i - 1] + 1\n      };\n    }\n\n    if (offset === start) return {\n      line: i + 1,\n      col: 1\n    };\n  }\n\n  var line = lineStarts.length;\n  return {\n    line: line,\n    col: offset - lineStarts[line - 1] + 1\n  };\n}\n/**\n * Get a specified line from the source.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns the line as a string if found, or `null` otherwise.\n *\n * @param {number} line One-indexed line number\n * @param {string|Document|Document[]} cst\n * @returns {?string}\n */\n\nfunction getLine(line, cst) {\n  var _getSrcInfo2 = getSrcInfo(cst),\n      lineStarts = _getSrcInfo2.lineStarts,\n      src = _getSrcInfo2.src;\n\n  if (!lineStarts || !(line >= 1) || line > lineStarts.length) return null;\n  var start = lineStarts[line - 1];\n  var end = lineStarts[line]; // undefined for last line; that's ok for slice()\n\n  while (end && end > start && src[end - 1] === '\\n') {\n    --end;\n  }\n\n  return src.slice(start, end);\n}\n/**\n * Pretty-print the starting line from the source indicated by the range `pos`\n *\n * Trims output to `maxWidth` chars while keeping the starting column visible,\n * using `…` at either end to indicate dropped characters.\n *\n * Returns a two-line string (or `null`) with `\\n` as separator; the second line\n * will hold appropriately indented `^` marks indicating the column range.\n *\n * @param {Object} pos\n * @param {LinePos} pos.start\n * @param {LinePos} [pos.end]\n * @param {string|Document|Document[]*} cst\n * @param {number} [maxWidth=80]\n * @returns {?string}\n */\n\nfunction getPrettyContext(_ref, cst) {\n  var start = _ref.start,\n      end = _ref.end;\n  var maxWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;\n  var src = getLine(start.line, cst);\n  if (!src) return null;\n  var col = start.col;\n\n  if (src.length > maxWidth) {\n    if (col <= maxWidth - 10) {\n      src = src.substr(0, maxWidth - 1) + '…';\n    } else {\n      var halfWidth = Math.round(maxWidth / 2);\n      if (src.length > col + halfWidth) src = src.substr(0, col + halfWidth - 1) + '…';\n      col -= src.length - maxWidth;\n      src = '…' + src.substr(1 - maxWidth);\n    }\n  }\n\n  var errLen = 1;\n  var errEnd = '';\n\n  if (end) {\n    if (end.line === start.line && col + (end.col - start.col) <= maxWidth + 1) {\n      errLen = end.col - start.col;\n    } else {\n      errLen = Math.min(src.length + 1, maxWidth) - col;\n      errEnd = '…';\n    }\n  }\n\n  var offset = col > 1 ? ' '.repeat(col - 1) : '';\n  var err = '^'.repeat(errLen);\n  return \"\".concat(src, \"\\n\").concat(offset).concat(err).concat(errEnd);\n}\n\nvar Range = /*#__PURE__*/function () {\n  function Range(start, end) {\n    _classCallCheck(this, Range);\n\n    this.start = start;\n    this.end = end || start;\n  }\n\n  _createClass(Range, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return typeof this.start !== 'number' || !this.end || this.end <= this.start;\n    }\n    /**\n     * Set `origStart` and `origEnd` to point to the original source range for\n     * this node, which may differ due to dropped CR characters.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRange\",\n    value: function setOrigRange(cr, offset) {\n      var start = this.start,\n          end = this.end;\n\n      if (cr.length === 0 || end <= cr[0]) {\n        this.origStart = start;\n        this.origEnd = end;\n        return offset;\n      }\n\n      var i = offset;\n\n      while (i < cr.length) {\n        if (cr[i] > start) break;else ++i;\n      }\n\n      this.origStart = start + i;\n      var nextOffset = i;\n\n      while (i < cr.length) {\n        // if end was at \\n, it should now be at \\r\n        if (cr[i] >= end) break;else ++i;\n      }\n\n      this.origEnd = end + i;\n      return nextOffset;\n    }\n  }], [{\n    key: \"copy\",\n    value: function copy(orig) {\n      return new Range(orig.start, orig.end);\n    }\n  }]);\n\n  return Range;\n}();\n\n/** Root class of all nodes */\n\nvar Node = /*#__PURE__*/function () {\n  function Node(type, props, context) {\n    _classCallCheck(this, Node);\n\n    Object.defineProperty(this, 'context', {\n      value: context || null,\n      writable: true\n    });\n    this.error = null;\n    this.range = null;\n    this.valueRange = null;\n    this.props = props || [];\n    this.type = type;\n    this.value = null;\n  }\n\n  _createClass(Node, [{\n    key: \"getPropValue\",\n    value: function getPropValue(idx, key, skipKey) {\n      if (!this.context) return null;\n      var src = this.context.src;\n      var prop = this.props[idx];\n      return prop && src[prop.start] === key ? src.slice(prop.start + (skipKey ? 1 : 0), prop.end) : null;\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var anchor = this.getPropValue(i, Char.ANCHOR, true);\n        if (anchor != null) return anchor;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"comment\",\n    get: function get() {\n      var comments = [];\n\n      for (var i = 0; i < this.props.length; ++i) {\n        var comment = this.getPropValue(i, Char.COMMENT, true);\n        if (comment != null) comments.push(comment);\n      }\n\n      return comments.length > 0 ? comments.join('\\n') : null;\n    }\n  }, {\n    key: \"commentHasRequiredWhitespace\",\n    value: function commentHasRequiredWhitespace(start) {\n      var src = this.context.src;\n      if (this.header && start === this.header.end) return false;\n      if (!this.valueRange) return false;\n      var end = this.valueRange.end;\n      return start !== end || Node.atBlank(src, end - 1);\n    }\n  }, {\n    key: \"hasComment\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] === Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"hasProps\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] !== Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"jsonLike\",\n    get: function get() {\n      var jsonLikeTypes = [Type.FLOW_MAP, Type.FLOW_SEQ, Type.QUOTE_DOUBLE, Type.QUOTE_SINGLE];\n      return jsonLikeTypes.indexOf(this.type) !== -1;\n    }\n  }, {\n    key: \"rangeAsLinePos\",\n    get: function get() {\n      if (!this.range || !this.context) return undefined;\n      var start = getLinePos(this.range.start, this.context.root);\n      if (!start) return undefined;\n      var end = getLinePos(this.range.end, this.context.root);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }, {\n    key: \"rawValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      return this.context.src.slice(start, end);\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var tag = this.getPropValue(i, Char.TAG, false);\n\n        if (tag != null) {\n          if (tag[1] === '<') {\n            return {\n              verbatim: tag.slice(2, -1)\n            };\n          } else {\n            // eslint-disable-next-line no-unused-vars\n            var _tag$match = tag.match(/^(.*!)([^!]*)$/),\n                _tag$match2 = _slicedToArray(_tag$match, 3);\n                _tag$match2[0];\n                var handle = _tag$match2[1],\n                suffix = _tag$match2[2];\n\n            return {\n              handle: handle,\n              suffix: suffix\n            };\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"valueRangeContainsNewline\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return false;\n      var _this$valueRange2 = this.valueRange,\n          start = _this$valueRange2.start,\n          end = _this$valueRange2.end;\n      var src = this.context.src;\n\n      for (var i = start; i < end; ++i) {\n        if (src[i] === '\\n') return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseComment\",\n    value: function parseComment(start) {\n      var src = this.context.src;\n\n      if (src[start] === Char.COMMENT) {\n        var end = Node.endOfLine(src, start + 1);\n        var commentRange = new Range(start, end);\n        this.props.push(commentRange);\n        return end;\n      }\n\n      return start;\n    }\n    /**\n     * Populates the `origStart` and `origEnd` values of all ranges for this\n     * node. Extended by child classes to handle descendant nodes.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      if (this.range) offset = this.range.setOrigRange(cr, offset);\n      if (this.valueRange) this.valueRange.setOrigRange(cr, offset);\n      this.props.forEach(function (prop) {\n        return prop.setOrigRange(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }], [{\n    key: \"addStringTerminator\",\n    value: function addStringTerminator(src, offset, str) {\n      if (str[str.length - 1] === '\\n') return str;\n      var next = Node.endOfWhiteSpace(src, offset);\n      return next >= src.length || src[next] === '\\n' ? str + '\\n' : str;\n    } // ^(---|...)\n\n  }, {\n    key: \"atDocumentBoundary\",\n    value: function atDocumentBoundary(src, offset, sep) {\n      var ch0 = src[offset];\n      if (!ch0) return true;\n      var prev = src[offset - 1];\n      if (prev && prev !== '\\n') return false;\n\n      if (sep) {\n        if (ch0 !== sep) return false;\n      } else {\n        if (ch0 !== Char.DIRECTIVES_END && ch0 !== Char.DOCUMENT_END) return false;\n      }\n\n      var ch1 = src[offset + 1];\n      var ch2 = src[offset + 2];\n      if (ch1 !== ch0 || ch2 !== ch0) return false;\n      var ch3 = src[offset + 3];\n      return !ch3 || ch3 === '\\n' || ch3 === '\\t' || ch3 === ' ';\n    }\n  }, {\n    key: \"endOfIdentifier\",\n    value: function endOfIdentifier(src, offset) {\n      var ch = src[offset];\n      var isVerbatim = ch === '<';\n      var notOk = isVerbatim ? ['\\n', '\\t', ' ', '>'] : ['\\n', '\\t', ' ', '[', ']', '{', '}', ','];\n\n      while (ch && notOk.indexOf(ch) === -1) {\n        ch = src[offset += 1];\n      }\n\n      if (isVerbatim && ch === '>') offset += 1;\n      return offset;\n    }\n  }, {\n    key: \"endOfIndent\",\n    value: function endOfIndent(src, offset) {\n      var ch = src[offset];\n\n      while (ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfLine\",\n    value: function endOfLine(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfWhiteSpace\",\n    value: function endOfWhiteSpace(src, offset) {\n      var ch = src[offset];\n\n      while (ch === '\\t' || ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"startOfLine\",\n    value: function startOfLine(src, offset) {\n      var ch = src[offset - 1];\n      if (ch === '\\n') return offset;\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset -= 1];\n      }\n\n      return offset + 1;\n    }\n    /**\n     * End of indentation, or null if the line's indent level is not more\n     * than `indent`\n     *\n     * @param {string} src\n     * @param {number} indent\n     * @param {number} lineStart\n     * @returns {?number}\n     */\n\n  }, {\n    key: \"endOfBlockIndent\",\n    value: function endOfBlockIndent(src, indent, lineStart) {\n      var inEnd = Node.endOfIndent(src, lineStart);\n\n      if (inEnd > lineStart + indent) {\n        return inEnd;\n      } else {\n        var wsEnd = Node.endOfWhiteSpace(src, inEnd);\n        var ch = src[wsEnd];\n        if (!ch || ch === '\\n') return wsEnd;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"atBlank\",\n    value: function atBlank(src, offset, endAsBlank) {\n      var ch = src[offset];\n      return ch === '\\n' || ch === '\\t' || ch === ' ' || endAsBlank && !ch;\n    }\n  }, {\n    key: \"nextNodeIsIndented\",\n    value: function nextNodeIsIndented(ch, indentDiff, indicatorAsIndent) {\n      if (!ch || indentDiff < 0) return false;\n      if (indentDiff > 0) return true;\n      return indicatorAsIndent && ch === '-';\n    } // should be at line or string end, or at next non-whitespace char\n\n  }, {\n    key: \"normalizeOffset\",\n    value: function normalizeOffset(src, offset) {\n      var ch = src[offset];\n      return !ch ? offset : ch !== '\\n' && src[offset - 1] === '\\n' ? offset - 1 : Node.endOfWhiteSpace(src, offset);\n    } // fold single newline into space, multiple newlines to N - 1 newlines\n    // presumes src[offset] === '\\n'\n\n  }, {\n    key: \"foldNewline\",\n    value: function foldNewline(src, offset, indent) {\n      var inCount = 0;\n      var error = false;\n      var fold = '';\n      var ch = src[offset + 1];\n\n      while (ch === ' ' || ch === '\\t' || ch === '\\n') {\n        switch (ch) {\n          case '\\n':\n            inCount = 0;\n            offset += 1;\n            fold += '\\n';\n            break;\n\n          case '\\t':\n            if (inCount <= indent) error = true;\n            offset = Node.endOfWhiteSpace(src, offset + 2) - 1;\n            break;\n\n          case ' ':\n            inCount += 1;\n            offset += 1;\n            break;\n        }\n\n        ch = src[offset + 1];\n      }\n\n      if (!fold) fold = ' ';\n      if (ch && inCount <= indent) error = true;\n      return {\n        fold: fold,\n        offset: offset,\n        error: error\n      };\n    }\n  }]);\n\n  return Node;\n}();\n\nvar YAMLError = /*#__PURE__*/function (_Error) {\n  _inherits(YAMLError, _Error);\n\n  var _super = _createSuper(YAMLError);\n\n  function YAMLError(name, source, message) {\n    var _this;\n\n    _classCallCheck(this, YAMLError);\n\n    if (!message || !(source instanceof Node)) throw new Error(\"Invalid arguments for new \".concat(name));\n    _this = _super.call(this);\n    _this.name = name;\n    _this.message = message;\n    _this.source = source;\n    return _this;\n  }\n\n  _createClass(YAMLError, [{\n    key: \"makePretty\",\n    value: function makePretty() {\n      if (!this.source) return;\n      this.nodeType = this.source.type;\n      var cst = this.source.context && this.source.context.root;\n\n      if (typeof this.offset === 'number') {\n        this.range = new Range(this.offset, this.offset + 1);\n        var start = cst && getLinePos(this.offset, cst);\n\n        if (start) {\n          var end = {\n            line: start.line,\n            col: start.col + 1\n          };\n          this.linePos = {\n            start: start,\n            end: end\n          };\n        }\n\n        delete this.offset;\n      } else {\n        this.range = this.source.range;\n        this.linePos = this.source.rangeAsLinePos;\n      }\n\n      if (this.linePos) {\n        var _this$linePos$start = this.linePos.start,\n            line = _this$linePos$start.line,\n            col = _this$linePos$start.col;\n        this.message += \" at line \".concat(line, \", column \").concat(col);\n        var ctx = cst && getPrettyContext(this.linePos, cst);\n        if (ctx) this.message += \":\\n\\n\".concat(ctx, \"\\n\");\n      }\n\n      delete this.source;\n    }\n  }]);\n\n  return YAMLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar YAMLReferenceError = /*#__PURE__*/function (_YAMLError) {\n  _inherits(YAMLReferenceError, _YAMLError);\n\n  var _super2 = _createSuper(YAMLReferenceError);\n\n  function YAMLReferenceError(source, message) {\n    _classCallCheck(this, YAMLReferenceError);\n\n    return _super2.call(this, 'YAMLReferenceError', source, message);\n  }\n\n  return YAMLReferenceError;\n}(YAMLError);\nvar YAMLSemanticError = /*#__PURE__*/function (_YAMLError2) {\n  _inherits(YAMLSemanticError, _YAMLError2);\n\n  var _super3 = _createSuper(YAMLSemanticError);\n\n  function YAMLSemanticError(source, message) {\n    _classCallCheck(this, YAMLSemanticError);\n\n    return _super3.call(this, 'YAMLSemanticError', source, message);\n  }\n\n  return YAMLSemanticError;\n}(YAMLError);\nvar YAMLSyntaxError = /*#__PURE__*/function (_YAMLError3) {\n  _inherits(YAMLSyntaxError, _YAMLError3);\n\n  var _super4 = _createSuper(YAMLSyntaxError);\n\n  function YAMLSyntaxError(source, message) {\n    _classCallCheck(this, YAMLSyntaxError);\n\n    return _super4.call(this, 'YAMLSyntaxError', source, message);\n  }\n\n  return YAMLSyntaxError;\n}(YAMLError);\nvar YAMLWarning = /*#__PURE__*/function (_YAMLError4) {\n  _inherits(YAMLWarning, _YAMLError4);\n\n  var _super5 = _createSuper(YAMLWarning);\n\n  function YAMLWarning(source, message) {\n    _classCallCheck(this, YAMLWarning);\n\n    return _super5.call(this, 'YAMLWarning', source, message);\n  }\n\n  return YAMLWarning;\n}(YAMLError);\n\nvar PlainValue = /*#__PURE__*/function (_Node) {\n  _inherits(PlainValue, _Node);\n\n  var _super = _createSuper(PlainValue);\n\n  function PlainValue() {\n    _classCallCheck(this, PlainValue);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PlainValue, [{\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var src = this.context.src;\n      var ch = src[end - 1];\n\n      while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) {\n        ch = src[--end - 1];\n      }\n\n      var str = '';\n\n      for (var i = start; i < end; ++i) {\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          var _Node$foldNewline = Node.foldNewline(src, i, -1),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset;\n\n          str += fold;\n          i = offset;\n        } else if (_ch === ' ' || _ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (i < end && (next === ' ' || next === '\\t')) {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : _ch;\n        } else {\n          str += _ch;\n        }\n      }\n\n      var ch0 = src[start];\n\n      switch (ch0) {\n        case '\\t':\n          {\n            var msg = 'Plain value cannot start with a tab character';\n            var errors = [new YAMLSemanticError(this, msg)];\n            return {\n              errors: errors,\n              str: str\n            };\n          }\n\n        case '@':\n        case '`':\n          {\n            var _msg = \"Plain value cannot start with reserved character \".concat(ch0);\n\n            var _errors = [new YAMLSemanticError(this, _msg)];\n            return {\n              errors: _errors,\n              str: str\n            };\n          }\n\n        default:\n          return str;\n      }\n    }\n  }, {\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          inFlow = _this$context.inFlow,\n          src = _this$context.src;\n      var offset = start;\n      var valueEnd = start;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        if (Node.atDocumentBoundary(src, offset + 1)) break;\n        var end = Node.endOfBlockIndent(src, indent, offset + 1);\n        if (end === null || src[end] === '#') break;\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          valueEnd = PlainValue.endOfLine(src, end, inFlow);\n          offset = valueEnd;\n        }\n      }\n\n      if (this.valueRange.isEmpty()) this.valueRange.start = start;\n      this.valueRange.end = valueEnd;\n      return valueEnd;\n    }\n    /**\n     * Parses a plain value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * #comment\n     *\n     * first line\n     *\n     * first line #comment\n     *\n     * first line\n     * block\n     * lines\n     *\n     * #comment\n     * block\n     * lines\n     * ```\n     * where block lines are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar, may be `\\n`\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var inFlow = context.inFlow,\n          src = context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      if (ch && ch !== '#' && ch !== '\\n') {\n        offset = PlainValue.endOfLine(src, start, inFlow);\n      }\n\n      this.valueRange = new Range(start, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n\n      if (!this.hasComment || this.valueRange.isEmpty()) {\n        offset = this.parseBlockValue(offset);\n      }\n\n      return offset;\n    }\n  }], [{\n    key: \"endOfLine\",\n    value: function endOfLine(src, start, inFlow) {\n      var ch = src[start];\n      var offset = start;\n\n      while (ch && ch !== '\\n') {\n        if (inFlow && (ch === '[' || ch === ']' || ch === '{' || ch === '}' || ch === ',')) break;\n        var next = src[offset + 1];\n        if (ch === ':' && (!next || next === '\\n' || next === '\\t' || next === ' ' || inFlow && next === ',')) break;\n        if ((ch === ' ' || ch === '\\t') && next === '#') break;\n        offset += 1;\n        ch = next;\n      }\n\n      return offset;\n    }\n  }]);\n\n  return PlainValue;\n}(Node);\n\nexport { Char as C, Node as N, PlainValue as P, Range as R, Type as T, YAMLSyntaxError as Y, _createForOfIteratorHelper as _, _typeof as a, _createClass as b, _classCallCheck as c, defaultTagPrefix as d, _defineProperty as e, YAMLWarning as f, YAMLSemanticError as g, _slicedToArray as h, YAMLError as i, _inherits as j, _createSuper as k, _get as l, _getPrototypeOf as m, defaultTags as n, YAMLReferenceError as o, _assertThisInitialized as p, _toArray as q, _possibleConstructorReturn as r };\n", "import { j as _inherits, k as _createSuper, c as _classCallCheck, T as Type, b as _createClass, R as Range, N as Node, g as YAMLSemanticError, l as _get, m as _getPrototypeOf, Y as YAMLSyntaxError, C as Char, e as _defineProperty, P as PlainValue } from './PlainValue-b8036b75.js';\n\nvar BlankLine = /*#__PURE__*/function (_Node) {\n  _inherits(BlankLine, _Node);\n\n  var _super = _createSuper(BlankLine);\n\n  function BlankLine() {\n    _classCallCheck(this, BlankLine);\n\n    return _super.call(this, Type.BLANK_LINE);\n  }\n  /* istanbul ignore next */\n\n\n  _createClass(BlankLine, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      // This is never called from anywhere, but if it were,\n      // this is the value it should return.\n      return true;\n    }\n    /**\n     * Parses a blank line from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first \\n character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      this.range = new Range(start, start + 1);\n      return start + 1;\n    }\n  }]);\n\n  return BlankLine;\n}(Node);\n\nvar CollectionItem = /*#__PURE__*/function (_Node) {\n  _inherits(CollectionItem, _Node);\n\n  var _super = _createSuper(CollectionItem);\n\n  function CollectionItem(type, props) {\n    var _this;\n\n    _classCallCheck(this, CollectionItem);\n\n    _this = _super.call(this, type, props);\n    _this.node = null;\n    return _this;\n  }\n\n  _createClass(CollectionItem, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return !!this.node && this.node.includesTrailingLines;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var atLineStart = context.atLineStart,\n          lineStart = context.lineStart;\n      if (!atLineStart && this.type === Type.SEQ_ITEM) this.error = new YAMLSemanticError(this, 'Sequence items must not have preceding content on the same line');\n      var indent = atLineStart ? start - lineStart : context.indent;\n      var offset = Node.endOfWhiteSpace(src, start + 1);\n      var ch = src[offset];\n      var inlineComment = ch === '#';\n      var comments = [];\n      var blankLine = null;\n\n      while (ch === '\\n' || ch === '#') {\n        if (ch === '#') {\n          var _end = Node.endOfLine(src, offset + 1);\n\n          comments.push(new Range(offset, _end));\n          offset = _end;\n        } else {\n          atLineStart = true;\n          lineStart = offset + 1;\n          var wsEnd = Node.endOfWhiteSpace(src, lineStart);\n\n          if (src[wsEnd] === '\\n' && comments.length === 0) {\n            blankLine = new BlankLine();\n            lineStart = blankLine.parse({\n              src: src\n            }, lineStart);\n          }\n\n          offset = Node.endOfIndent(src, lineStart);\n        }\n\n        ch = src[offset];\n      }\n\n      if (Node.nextNodeIsIndented(ch, offset - (lineStart + indent), this.type !== Type.SEQ_ITEM)) {\n        this.node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: false,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n      } else if (ch && lineStart > start + 1) {\n        offset = lineStart - 1;\n      }\n\n      if (this.node) {\n        if (blankLine) {\n          // Only blank lines preceding non-empty nodes are captured. Note that\n          // this means that collection item range start indices do not always\n          // increase monotonically. -- eemeli/yaml#126\n          var items = context.parent.items || context.parent.contents;\n          if (items) items.push(blankLine);\n        }\n\n        if (comments.length) Array.prototype.push.apply(this.props, comments);\n        offset = this.node.range.end;\n      } else {\n        if (inlineComment) {\n          var c = comments[0];\n          this.props.push(c);\n          offset = c.end;\n        } else {\n          offset = Node.endOfLine(src, start + 1);\n        }\n      }\n\n      var end = this.node ? this.node.valueRange.end : offset;\n      this.valueRange = new Range(start, end);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(CollectionItem.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.node ? this.node.setOrigRanges(cr, offset) : offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          node = this.node,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = node ? src.slice(range.start, node.range.start) + String(node) : src.slice(range.start, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }]);\n\n  return CollectionItem;\n}(Node);\n\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inherits(Comment, _Node);\n\n  var _super = _createSuper(Comment);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    return _super.call(this, Type.COMMENT);\n  }\n  /**\n   * Parses a comment line from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  _createClass(Comment, [{\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseComment(start);\n      this.range = new Range(start, offset);\n      return offset;\n    }\n  }]);\n\n  return Comment;\n}(Node);\n\nfunction grabCollectionEndComments(node) {\n  var cnode = node;\n\n  while (cnode instanceof CollectionItem) {\n    cnode = cnode.node;\n  }\n\n  if (!(cnode instanceof Collection)) return null;\n  var len = cnode.items.length;\n  var ci = -1;\n\n  for (var i = len - 1; i >= 0; --i) {\n    var n = cnode.items[i];\n\n    if (n.type === Type.COMMENT) {\n      // Keep sufficiently indented comments with preceding node\n      var _n$context = n.context,\n          indent = _n$context.indent,\n          lineStart = _n$context.lineStart;\n      if (indent > 0 && n.range.start >= lineStart + indent) break;\n      ci = i;\n    } else if (n.type === Type.BLANK_LINE) ci = i;else break;\n  }\n\n  if (ci === -1) return null;\n  var ca = cnode.items.splice(ci, len - ci);\n  var prevEnd = ca[0].range.start;\n\n  while (true) {\n    cnode.range.end = prevEnd;\n    if (cnode.valueRange && cnode.valueRange.end > prevEnd) cnode.valueRange.end = prevEnd;\n    if (cnode === node) break;\n    cnode = cnode.context.parent;\n  }\n\n  return ca;\n}\nvar Collection = /*#__PURE__*/function (_Node) {\n  _inherits(Collection, _Node);\n\n  var _super = _createSuper(Collection);\n\n  function Collection(firstItem) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _super.call(this, firstItem.type === Type.SEQ_ITEM ? Type.SEQ : Type.MAP);\n\n    for (var i = firstItem.props.length - 1; i >= 0; --i) {\n      if (firstItem.props[i].start < firstItem.context.lineStart) {\n        // props on previous line are assumed by the collection\n        _this.props = firstItem.props.slice(0, i + 1);\n        firstItem.props = firstItem.props.slice(i + 1);\n        var itemRange = firstItem.props[0] || firstItem.valueRange;\n        firstItem.range.start = itemRange.start;\n        break;\n      }\n    }\n\n    _this.items = [firstItem];\n    var ec = grabCollectionEndComments(firstItem);\n    if (ec) Array.prototype.push.apply(_this.items, ec);\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.items.length > 0;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src; // It's easier to recalculate lineStart here rather than tracking down the\n      // last context from which to read it -- eemeli/yaml#2\n\n      var lineStart = Node.startOfLine(src, start);\n      var firstItem = this.items[0]; // First-item context needs to be correct for later comment handling\n      // -- eemeli/yaml#17\n\n      firstItem.context.parent = this;\n      this.valueRange = Range.copy(firstItem.valueRange);\n      var indent = firstItem.range.start - firstItem.context.lineStart;\n      var offset = start;\n      offset = Node.normalizeOffset(src, offset);\n      var ch = src[offset];\n      var atLineStart = Node.endOfWhiteSpace(src, lineStart) === offset;\n      var prevIncludesTrailingLines = false;\n\n      while (ch) {\n        while (ch === '\\n' || ch === '#') {\n          if (atLineStart && ch === '\\n' && !prevIncludesTrailingLines) {\n            var blankLine = new BlankLine();\n            offset = blankLine.parse({\n              src: src\n            }, offset);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n\n            this.items.push(blankLine);\n            offset -= 1; // blankLine.parse() consumes terminal newline\n          } else if (ch === '#') {\n            if (offset < lineStart + indent && !Collection.nextContentHasIndent(src, offset, indent)) {\n              return offset;\n            }\n\n            var comment = new Comment();\n            offset = comment.parse({\n              indent: indent,\n              lineStart: lineStart,\n              src: src\n            }, offset);\n            this.items.push(comment);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n          }\n\n          lineStart = offset + 1;\n          offset = Node.endOfIndent(src, lineStart);\n\n          if (Node.atBlank(src, offset)) {\n            var wsEnd = Node.endOfWhiteSpace(src, offset);\n            var next = src[wsEnd];\n\n            if (!next || next === '\\n' || next === '#') {\n              offset = wsEnd;\n            }\n          }\n\n          ch = src[offset];\n          atLineStart = true;\n        }\n\n        if (!ch) {\n          break;\n        }\n\n        if (offset !== lineStart + indent && (atLineStart || ch !== ':')) {\n          if (offset < lineStart + indent) {\n            if (lineStart > start) offset = lineStart;\n            break;\n          } else if (!this.error) {\n            var msg = 'All collection items must start at the same column';\n            this.error = new YAMLSyntaxError(this, msg);\n          }\n        }\n\n        if (firstItem.type === Type.SEQ_ITEM) {\n          if (ch !== '-') {\n            if (lineStart > start) offset = lineStart;\n            break;\n          }\n        } else if (ch === '-' && !this.error) {\n          // map key may start with -, as long as it's followed by a non-whitespace char\n          var _next = src[offset + 1];\n\n          if (!_next || _next === '\\n' || _next === '\\t' || _next === ' ') {\n            var _msg = 'A collection cannot be both a mapping and a sequence';\n            this.error = new YAMLSyntaxError(this, _msg);\n          }\n        }\n\n        var node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: true,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n        if (!node) return offset; // at next document start\n\n        this.items.push(node);\n        this.valueRange.end = node.valueRange.end;\n        offset = Node.normalizeOffset(src, node.range.end);\n        ch = src[offset];\n        atLineStart = false;\n        prevIncludesTrailingLines = node.includesTrailingLines; // Need to reset lineStart and atLineStart here if preceding node's range\n        // has advanced to check the current line's indentation level\n        // -- eemeli/yaml#10 & eemeli/yaml#38\n\n        if (ch) {\n          var ls = offset - 1;\n          var prev = src[ls];\n\n          while (prev === ' ' || prev === '\\t') {\n            prev = src[--ls];\n          }\n\n          if (prev === '\\n') {\n            lineStart = ls + 1;\n            atLineStart = true;\n          }\n        }\n\n        var ec = grabCollectionEndComments(node);\n        if (ec) Array.prototype.push.apply(this.items, ec);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(Collection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, items[0].range.start) + String(items[0]);\n\n      for (var i = 1; i < items.length; ++i) {\n        var item = items[i];\n        var _item$context = item.context,\n            atLineStart = _item$context.atLineStart,\n            indent = _item$context.indent;\n        if (atLineStart) for (var _i = 0; _i < indent; ++_i) {\n          str += ' ';\n        }\n        str += String(item);\n      }\n\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }], [{\n    key: \"nextContentHasIndent\",\n    value: function nextContentHasIndent(src, offset, indent) {\n      var lineStart = Node.endOfLine(src, offset) + 1;\n      offset = Node.endOfWhiteSpace(src, lineStart);\n      var ch = src[offset];\n      if (!ch) return false;\n      if (offset >= lineStart + indent) return true;\n      if (ch !== '#' && ch !== '\\n') return false;\n      return Collection.nextContentHasIndent(src, offset, indent);\n    }\n  }]);\n\n  return Collection;\n}(Node);\n\nvar Directive = /*#__PURE__*/function (_Node) {\n  _inherits(Directive, _Node);\n\n  var _super = _createSuper(Directive);\n\n  function Directive() {\n    var _this;\n\n    _classCallCheck(this, Directive);\n\n    _this = _super.call(this, Type.DIRECTIVE);\n    _this.name = null;\n    return _this;\n  }\n\n  _createClass(Directive, [{\n    key: \"parameters\",\n    get: function get() {\n      var raw = this.rawValue;\n      return raw ? raw.trim().split(/[ \\t]+/) : [];\n    }\n  }, {\n    key: \"parseName\",\n    value: function parseName(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '\\t' && ch !== ' ') {\n        ch = src[offset += 1];\n      }\n\n      this.name = src.slice(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parseParameters\",\n    value: function parseParameters(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '#') {\n        ch = src[offset += 1];\n      }\n\n      this.valueRange = new Range(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseName(start + 1);\n      offset = this.parseParameters(offset);\n      offset = this.parseComment(offset);\n      this.range = new Range(start, offset);\n      return offset;\n    }\n  }]);\n\n  return Directive;\n}(Node);\n\nvar Document = /*#__PURE__*/function (_Node) {\n  _inherits(Document, _Node);\n\n  var _super = _createSuper(Document);\n\n  function Document() {\n    var _this;\n\n    _classCallCheck(this, Document);\n\n    _this = _super.call(this, Type.DOCUMENT);\n    _this.directives = null;\n    _this.contents = null;\n    _this.directivesEndMarker = null;\n    _this.documentEndMarker = null;\n    return _this;\n  }\n\n  _createClass(Document, [{\n    key: \"parseDirectives\",\n    value: function parseDirectives(start) {\n      var src = this.context.src;\n      this.directives = [];\n      var atLineStart = true;\n      var hasDirectives = false;\n      var offset = start;\n\n      while (!Node.atDocumentBoundary(src, offset, Char.DIRECTIVES_END)) {\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n\n        switch (src[offset]) {\n          case '\\n':\n            if (atLineStart) {\n              var blankLine = new BlankLine();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.directives.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            break;\n\n          case '#':\n            {\n              var comment = new Comment();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.directives.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          case '%':\n            {\n              var directive = new Directive();\n              offset = directive.parse({\n                parent: this,\n                src: src\n              }, offset);\n              this.directives.push(directive);\n              hasDirectives = true;\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            if (hasDirectives) {\n              this.error = new YAMLSemanticError(this, 'Missing directives-end indicator line');\n            } else if (this.directives.length > 0) {\n              this.contents = this.directives;\n              this.directives = [];\n            }\n\n            return offset;\n        }\n      }\n\n      if (src[offset]) {\n        this.directivesEndMarker = new Range(offset, offset + 3);\n        return offset + 3;\n      }\n\n      if (hasDirectives) {\n        this.error = new YAMLSemanticError(this, 'Missing directives-end indicator line');\n      } else if (this.directives.length > 0) {\n        this.contents = this.directives;\n        this.directives = [];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"parseContents\",\n    value: function parseContents(start) {\n      var _this$context = this.context,\n          parseNode = _this$context.parseNode,\n          src = _this$context.src;\n      if (!this.contents) this.contents = [];\n      var lineStart = start;\n\n      while (src[lineStart - 1] === '-') {\n        lineStart -= 1;\n      }\n\n      var offset = Node.endOfWhiteSpace(src, start);\n      var atLineStart = lineStart === start;\n      this.valueRange = new Range(offset);\n\n      while (!Node.atDocumentBoundary(src, offset, Char.DOCUMENT_END)) {\n        switch (src[offset]) {\n          case '\\n':\n            if (atLineStart) {\n              var blankLine = new BlankLine();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.contents.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            lineStart = offset;\n            break;\n\n          case '#':\n            {\n              var comment = new Comment();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.contents.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            {\n              var iEnd = Node.endOfIndent(src, offset);\n              var context = {\n                atLineStart: atLineStart,\n                indent: -1,\n                inFlow: false,\n                inCollection: false,\n                lineStart: lineStart,\n                parent: this\n              };\n              var node = parseNode(context, iEnd);\n              if (!node) return this.valueRange.end = iEnd; // at next document start\n\n              this.contents.push(node);\n              offset = node.range.end;\n              atLineStart = false;\n              var ec = grabCollectionEndComments(node);\n              if (ec) Array.prototype.push.apply(this.contents, ec);\n            }\n        }\n\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n      }\n\n      this.valueRange.end = offset;\n\n      if (src[offset]) {\n        this.documentEndMarker = new Range(offset, offset + 3);\n        offset += 3;\n\n        if (src[offset]) {\n          offset = Node.endOfWhiteSpace(src, offset);\n\n          if (src[offset] === '#') {\n            var _comment = new Comment();\n\n            offset = _comment.parse({\n              src: src\n            }, offset);\n            this.contents.push(_comment);\n          }\n\n          switch (src[offset]) {\n            case '\\n':\n              offset += 1;\n              break;\n\n            case undefined:\n              break;\n\n            default:\n              this.error = new YAMLSyntaxError(this, 'Document end marker line cannot have a non-comment suffix');\n          }\n        }\n      }\n\n      return offset;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      context.root = this;\n      this.context = context;\n      var src = context.src;\n      var offset = src.charCodeAt(start) === 0xfeff ? start + 1 : start; // skip BOM\n\n      offset = this.parseDirectives(offset);\n      offset = this.parseContents(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(Document.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.directives.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.directivesEndMarker) offset = this.directivesEndMarker.setOrigRange(cr, offset);\n      this.contents.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.documentEndMarker) offset = this.documentEndMarker.setOrigRange(cr, offset);\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var contents = this.contents,\n          directives = this.directives,\n          value = this.value;\n      if (value != null) return value;\n      var str = directives.join('');\n\n      if (contents.length > 0) {\n        if (directives.length > 0 || contents[0].type === Type.COMMENT) str += '---\\n';\n        str += contents.join('');\n      }\n\n      if (str[str.length - 1] !== '\\n') str += '\\n';\n      return str;\n    }\n  }], [{\n    key: \"startCommentOrEndBlankLine\",\n    value: function startCommentOrEndBlankLine(src, start) {\n      var offset = Node.endOfWhiteSpace(src, start);\n      var ch = src[offset];\n      return ch === '#' || ch === '\\n' ? offset : start;\n    }\n  }]);\n\n  return Document;\n}(Node);\n\nvar Alias = /*#__PURE__*/function (_Node) {\n  _inherits(Alias, _Node);\n\n  var _super = _createSuper(Alias);\n\n  function Alias() {\n    _classCallCheck(this, Alias);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Alias, [{\n    key: \"parse\",\n    value:\n    /**\n     * Parses an *alias from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n    function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = Node.endOfIdentifier(src, start + 1);\n      this.valueRange = new Range(start + 1, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }]);\n\n  return Alias;\n}(Node);\n\nvar Chomp = {\n  CLIP: 'CLIP',\n  KEEP: 'KEEP',\n  STRIP: 'STRIP'\n};\nvar BlockValue = /*#__PURE__*/function (_Node) {\n  _inherits(BlockValue, _Node);\n\n  var _super = _createSuper(BlockValue);\n\n  function BlockValue(type, props) {\n    var _this;\n\n    _classCallCheck(this, BlockValue);\n\n    _this = _super.call(this, type, props);\n    _this.blockIndent = null;\n    _this.chomping = Chomp.CLIP;\n    _this.header = null;\n    return _this;\n  }\n\n  _createClass(BlockValue, [{\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.chomping === Chomp.KEEP;\n    }\n  }, {\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (this.valueRange.isEmpty()) return '';\n      var lastNewLine = null;\n      var ch = src[end - 1];\n\n      while (ch === '\\n' || ch === '\\t' || ch === ' ') {\n        end -= 1;\n\n        if (end <= start) {\n          if (this.chomping === Chomp.KEEP) break;else return ''; // probably never happens\n        }\n\n        if (ch === '\\n') lastNewLine = end;\n        ch = src[end - 1];\n      }\n\n      var keepStart = end + 1;\n\n      if (lastNewLine) {\n        if (this.chomping === Chomp.KEEP) {\n          keepStart = lastNewLine;\n          end = this.valueRange.end;\n        } else {\n          end = lastNewLine;\n        }\n      }\n\n      var bi = indent + this.blockIndent;\n      var folded = this.type === Type.BLOCK_FOLDED;\n      var atStart = true;\n      var str = '';\n      var sep = '';\n      var prevMoreIndented = false;\n\n      for (var i = start; i < end; ++i) {\n        for (var j = 0; j < bi; ++j) {\n          if (src[i] !== ' ') break;\n          i += 1;\n        }\n\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          if (sep === '\\n') str += '\\n';else sep = '\\n';\n        } else {\n          var lineEnd = Node.endOfLine(src, i);\n          var line = src.slice(i, lineEnd);\n          i = lineEnd;\n\n          if (folded && (_ch === ' ' || _ch === '\\t') && i < keepStart) {\n            if (sep === ' ') sep = '\\n';else if (!prevMoreIndented && !atStart && sep === '\\n') sep = '\\n\\n';\n            str += sep + line; //+ ((lineEnd < end && src[lineEnd]) || '')\n\n            sep = lineEnd < end && src[lineEnd] || '';\n            prevMoreIndented = true;\n          } else {\n            str += sep + line;\n            sep = folded && i < keepStart ? ' ' : '\\n';\n            prevMoreIndented = false;\n          }\n\n          if (atStart && line !== '') atStart = false;\n        }\n      }\n\n      return this.chomping === Chomp.STRIP ? str : str + '\\n';\n    }\n  }, {\n    key: \"parseBlockHeader\",\n    value: function parseBlockHeader(start) {\n      var src = this.context.src;\n      var offset = start + 1;\n      var bi = '';\n\n      while (true) {\n        var ch = src[offset];\n\n        switch (ch) {\n          case '-':\n            this.chomping = Chomp.STRIP;\n            break;\n\n          case '+':\n            this.chomping = Chomp.KEEP;\n            break;\n\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            bi += ch;\n            break;\n\n          default:\n            this.blockIndent = Number(bi) || null;\n            this.header = new Range(start, offset);\n            return offset;\n        }\n\n        offset += 1;\n      }\n    }\n  }, {\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context2 = this.context,\n          indent = _this$context2.indent,\n          src = _this$context2.src;\n      var explicit = !!this.blockIndent;\n      var offset = start;\n      var valueEnd = start;\n      var minBlockIndent = 1;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        offset += 1;\n        if (Node.atDocumentBoundary(src, offset)) break;\n        var end = Node.endOfBlockIndent(src, indent, offset); // should not include tab?\n\n        if (end === null) break;\n        var _ch2 = src[end];\n        var lineIndent = end - (offset + indent);\n\n        if (!this.blockIndent) {\n          // no explicit block indent, none yet detected\n          if (src[end] !== '\\n') {\n            // first line with non-whitespace content\n            if (lineIndent < minBlockIndent) {\n              var msg = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n              this.error = new YAMLSemanticError(this, msg);\n            }\n\n            this.blockIndent = lineIndent;\n          } else if (lineIndent > minBlockIndent) {\n            // empty line with more whitespace\n            minBlockIndent = lineIndent;\n          }\n        } else if (_ch2 && _ch2 !== '\\n' && lineIndent < this.blockIndent) {\n          if (src[end] === '#') break;\n\n          if (!this.error) {\n            var _src = explicit ? 'explicit indentation indicator' : 'first line';\n\n            var _msg = \"Block scalars must not be less indented than their \".concat(_src);\n\n            this.error = new YAMLSemanticError(this, _msg);\n          }\n        }\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          offset = valueEnd = Node.endOfLine(src, end);\n        }\n      }\n\n      if (this.chomping !== Chomp.KEEP) {\n        offset = src[valueEnd] ? valueEnd + 1 : valueEnd;\n      }\n\n      this.valueRange = new Range(start + 1, offset);\n      return offset;\n    }\n    /**\n     * Parses a block value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * BS\n     * block\n     * lines\n     *\n     * BS #comment\n     * block\n     * lines\n     * ```\n     * where the block style BS matches the regexp `[|>][-+1-9]*` and block lines\n     * are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this block\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = this.parseBlockHeader(start);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      offset = this.parseBlockValue(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(BlockValue.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.header ? this.header.setOrigRange(cr, offset) : offset;\n    }\n  }]);\n\n  return BlockValue;\n}(Node);\n\nvar FlowCollection = /*#__PURE__*/function (_Node) {\n  _inherits(FlowCollection, _Node);\n\n  var _super = _createSuper(FlowCollection);\n\n  function FlowCollection(type, props) {\n    var _this;\n\n    _classCallCheck(this, FlowCollection);\n\n    _this = _super.call(this, type, props);\n    _this.items = null;\n    return _this;\n  }\n\n  _createClass(FlowCollection, [{\n    key: \"prevNodeIsJsonLike\",\n    value: function prevNodeIsJsonLike() {\n      var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items.length;\n      var node = this.items[idx - 1];\n      return !!node && (node.jsonLike || node.type === Type.COMMENT && this.prevNodeIsJsonLike(idx - 1));\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var indent = context.indent,\n          lineStart = context.lineStart;\n      var char = src[start]; // { or [\n\n      this.items = [{\n        char: char,\n        offset: start\n      }];\n      var offset = Node.endOfWhiteSpace(src, start + 1);\n      char = src[offset];\n\n      while (char && char !== ']' && char !== '}') {\n        switch (char) {\n          case '\\n':\n            {\n              lineStart = offset + 1;\n              var wsEnd = Node.endOfWhiteSpace(src, lineStart);\n\n              if (src[wsEnd] === '\\n') {\n                var blankLine = new BlankLine();\n                lineStart = blankLine.parse({\n                  src: src\n                }, lineStart);\n                this.items.push(blankLine);\n              }\n\n              offset = Node.endOfIndent(src, lineStart);\n\n              if (offset <= lineStart + indent) {\n                char = src[offset];\n\n                if (offset < lineStart + indent || char !== ']' && char !== '}') {\n                  var msg = 'Insufficient indentation in flow collection';\n                  this.error = new YAMLSemanticError(this, msg);\n                }\n              }\n            }\n            break;\n\n          case ',':\n            {\n              this.items.push({\n                char: char,\n                offset: offset\n              });\n              offset += 1;\n            }\n            break;\n\n          case '#':\n            {\n              var comment = new Comment();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.items.push(comment);\n            }\n            break;\n\n          case '?':\n          case ':':\n            {\n              var next = src[offset + 1];\n\n              if (next === '\\n' || next === '\\t' || next === ' ' || next === ',' || // in-flow : after JSON-like key does not need to be followed by whitespace\n              char === ':' && this.prevNodeIsJsonLike()) {\n                this.items.push({\n                  char: char,\n                  offset: offset\n                });\n                offset += 1;\n                break;\n              }\n            }\n          // fallthrough\n\n          default:\n            {\n              var node = parseNode({\n                atLineStart: false,\n                inCollection: false,\n                inFlow: true,\n                indent: -1,\n                lineStart: lineStart,\n                parent: this\n              }, offset);\n\n              if (!node) {\n                // at next document start\n                this.valueRange = new Range(start, offset);\n                return offset;\n              }\n\n              this.items.push(node);\n              offset = Node.normalizeOffset(src, node.range.end);\n            }\n        }\n\n        offset = Node.endOfWhiteSpace(src, offset);\n        char = src[offset];\n      }\n\n      this.valueRange = new Range(start, offset + 1);\n\n      if (char) {\n        this.items.push({\n          char: char,\n          offset: offset\n        });\n        offset = Node.endOfWhiteSpace(src, offset + 1);\n        offset = this.parseComment(offset);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = _get(_getPrototypeOf(FlowCollection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        if (node instanceof Node) {\n          offset = node.setOrigRanges(cr, offset);\n        } else if (cr.length === 0) {\n          node.origOffset = node.offset;\n        } else {\n          var i = offset;\n\n          while (i < cr.length) {\n            if (cr[i] > node.offset) break;else ++i;\n          }\n\n          node.origOffset = node.offset + i;\n          offset = i;\n        }\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var nodes = items.filter(function (item) {\n        return item instanceof Node;\n      });\n      var str = '';\n      var prevEnd = range.start;\n      nodes.forEach(function (node) {\n        var prefix = src.slice(prevEnd, node.range.start);\n        prevEnd = node.range.end;\n        str += prefix + String(node);\n\n        if (str[str.length - 1] === '\\n' && src[prevEnd - 1] !== '\\n' && src[prevEnd] === '\\n') {\n          // Comment range does not include the terminal newline, but its\n          // stringified value does. Without this fix, newlines at comment ends\n          // get duplicated.\n          prevEnd += 1;\n        }\n      });\n      str += src.slice(prevEnd, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }]);\n\n  return FlowCollection;\n}(Node);\n\nvar QuoteDouble = /*#__PURE__*/function (_Node) {\n  _inherits(QuoteDouble, _Node);\n\n  var _super = _createSuper(QuoteDouble);\n\n  function QuoteDouble() {\n    _classCallCheck(this, QuoteDouble);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuoteDouble, [{\n    key: \"strValue\",\n    get:\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== '\"') errors.push(new YAMLSyntaxError(this, 'Missing closing \"quote')); // Using String#replace is too painful with escaped newlines preceded by\n      // escaped backslashes; also, this should be faster.\n\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (Node.atDocumentBoundary(src, i + 1)) errors.push(new YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = Node.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new YAMLSemanticError(this, 'Multi-line double-quoted string needs to be sufficiently indented'));\n        } else if (ch === '\\\\') {\n          i += 1;\n\n          switch (src[i]) {\n            case '0':\n              str += '\\0';\n              break;\n            // null character\n\n            case 'a':\n              str += '\\x07';\n              break;\n            // bell character\n\n            case 'b':\n              str += '\\b';\n              break;\n            // backspace\n\n            case 'e':\n              str += '\\x1b';\n              break;\n            // escape character\n\n            case 'f':\n              str += '\\f';\n              break;\n            // form feed\n\n            case 'n':\n              str += '\\n';\n              break;\n            // line feed\n\n            case 'r':\n              str += '\\r';\n              break;\n            // carriage return\n\n            case 't':\n              str += '\\t';\n              break;\n            // horizontal tab\n\n            case 'v':\n              str += '\\v';\n              break;\n            // vertical tab\n\n            case 'N':\n              str += \"\\x85\";\n              break;\n            // Unicode next line\n\n            case '_':\n              str += \"\\xA0\";\n              break;\n            // Unicode non-breaking space\n\n            case 'L':\n              str += \"\\u2028\";\n              break;\n            // Unicode line separator\n\n            case 'P':\n              str += \"\\u2029\";\n              break;\n            // Unicode paragraph separator\n\n            case ' ':\n              str += ' ';\n              break;\n\n            case '\"':\n              str += '\"';\n              break;\n\n            case '/':\n              str += '/';\n              break;\n\n            case '\\\\':\n              str += '\\\\';\n              break;\n\n            case '\\t':\n              str += '\\t';\n              break;\n\n            case 'x':\n              str += this.parseCharCode(i + 1, 2, errors);\n              i += 2;\n              break;\n\n            case 'u':\n              str += this.parseCharCode(i + 1, 4, errors);\n              i += 4;\n              break;\n\n            case 'U':\n              str += this.parseCharCode(i + 1, 8, errors);\n              i += 8;\n              break;\n\n            case '\\n':\n              // skip escaped newlines, but still trim the following line\n              while (src[i + 1] === ' ' || src[i + 1] === '\\t') {\n                i += 1;\n              }\n\n              break;\n\n            default:\n              errors.push(new YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(i - 1, 2))));\n              str += '\\\\' + src[i];\n          }\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n  }, {\n    key: \"parseCharCode\",\n    value: function parseCharCode(offset, length, errors) {\n      var src = this.context.src;\n      var cc = src.substr(offset, length);\n      var ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n      var code = ok ? parseInt(cc, 16) : NaN;\n\n      if (isNaN(code)) {\n        errors.push(new YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(offset - 2, length + 2))));\n        return src.substr(offset - 2, length + 2);\n      }\n\n      return String.fromCodePoint(code);\n    }\n    /**\n     * Parses a \"double quoted\" value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteDouble.endOfQuote(src, start + 1);\n      this.valueRange = new Range(start, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\"') {\n        offset += ch === '\\\\' ? 2 : 1;\n        ch = src[offset];\n      }\n\n      return offset + 1;\n    }\n  }]);\n\n  return QuoteDouble;\n}(Node);\n\nvar QuoteSingle = /*#__PURE__*/function (_Node) {\n  _inherits(QuoteSingle, _Node);\n\n  var _super = _createSuper(QuoteSingle);\n\n  function QuoteSingle() {\n    _classCallCheck(this, QuoteSingle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuoteSingle, [{\n    key: \"strValue\",\n    get:\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== \"'\") errors.push(new YAMLSyntaxError(this, \"Missing closing 'quote\"));\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (Node.atDocumentBoundary(src, i + 1)) errors.push(new YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = Node.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new YAMLSemanticError(this, 'Multi-line single-quoted string needs to be sufficiently indented'));\n        } else if (ch === \"'\") {\n          str += ch;\n          i += 1;\n          if (src[i] !== \"'\") errors.push(new YAMLSyntaxError(this, 'Unescaped single quote? This should not happen.'));\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n    /**\n     * Parses a 'single quoted' value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteSingle.endOfQuote(src, start + 1);\n      this.valueRange = new Range(start, offset);\n      offset = Node.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch) {\n        if (ch === \"'\") {\n          if (src[offset + 1] !== \"'\") break;\n          ch = src[offset += 2];\n        } else {\n          ch = src[offset += 1];\n        }\n      }\n\n      return offset + 1;\n    }\n  }]);\n\n  return QuoteSingle;\n}(Node);\n\nfunction createNewNode(type, props) {\n  switch (type) {\n    case Type.ALIAS:\n      return new Alias(type, props);\n\n    case Type.BLOCK_FOLDED:\n    case Type.BLOCK_LITERAL:\n      return new BlockValue(type, props);\n\n    case Type.FLOW_MAP:\n    case Type.FLOW_SEQ:\n      return new FlowCollection(type, props);\n\n    case Type.MAP_KEY:\n    case Type.MAP_VALUE:\n    case Type.SEQ_ITEM:\n      return new CollectionItem(type, props);\n\n    case Type.COMMENT:\n    case Type.PLAIN:\n      return new PlainValue(type, props);\n\n    case Type.QUOTE_DOUBLE:\n      return new QuoteDouble(type, props);\n\n    case Type.QUOTE_SINGLE:\n      return new QuoteSingle(type, props);\n\n    /* istanbul ignore next */\n\n    default:\n      return null;\n    // should never happen\n  }\n}\n/**\n * @param {boolean} atLineStart - Node starts at beginning of line\n * @param {boolean} inFlow - true if currently in a flow context\n * @param {boolean} inCollection - true if currently in a collection context\n * @param {number} indent - Current level of indentation\n * @param {number} lineStart - Start of the current line\n * @param {Node} parent - The parent of the node\n * @param {string} src - Source of the YAML document\n */\n\n\nvar ParseContext = /*#__PURE__*/function () {\n  function ParseContext() {\n    var _this = this;\n\n    var orig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        atLineStart = _ref.atLineStart,\n        inCollection = _ref.inCollection,\n        inFlow = _ref.inFlow,\n        indent = _ref.indent,\n        lineStart = _ref.lineStart,\n        parent = _ref.parent;\n\n    _classCallCheck(this, ParseContext);\n\n    _defineProperty(this, \"parseNode\", function (overlay, start) {\n      if (Node.atDocumentBoundary(_this.src, start)) return null;\n      var context = new ParseContext(_this, overlay);\n\n      var _context$parseProps = context.parseProps(start),\n          props = _context$parseProps.props,\n          type = _context$parseProps.type,\n          valueStart = _context$parseProps.valueStart;\n\n      var node = createNewNode(type, props);\n      var offset = node.parse(context, valueStart);\n      node.range = new Range(start, offset);\n      /* istanbul ignore if */\n\n      if (offset <= start) {\n        // This should never happen, but if it does, let's make sure to at least\n        // step one character forward to avoid a busy loop.\n        node.error = new Error(\"Node#parse consumed no characters\");\n        node.error.parseEnd = offset;\n        node.error.source = node;\n        node.range.end = start + 1;\n      }\n\n      if (context.nodeStartsCollection(node)) {\n        if (!node.error && !context.atLineStart && context.parent.type === Type.DOCUMENT) {\n          node.error = new YAMLSyntaxError(node, 'Block collection must not have preceding content here (e.g. directives-end indicator)');\n        }\n\n        var collection = new Collection(node);\n        offset = collection.parse(new ParseContext(context), offset);\n        collection.range = new Range(start, offset);\n        return collection;\n      }\n\n      return node;\n    });\n\n    this.atLineStart = atLineStart != null ? atLineStart : orig.atLineStart || false;\n    this.inCollection = inCollection != null ? inCollection : orig.inCollection || false;\n    this.inFlow = inFlow != null ? inFlow : orig.inFlow || false;\n    this.indent = indent != null ? indent : orig.indent;\n    this.lineStart = lineStart != null ? lineStart : orig.lineStart;\n    this.parent = parent != null ? parent : orig.parent || {};\n    this.root = orig.root;\n    this.src = orig.src;\n  }\n\n  _createClass(ParseContext, [{\n    key: \"nodeStartsCollection\",\n    value: function nodeStartsCollection(node) {\n      var inCollection = this.inCollection,\n          inFlow = this.inFlow,\n          src = this.src;\n      if (inCollection || inFlow) return false;\n      if (node instanceof CollectionItem) return true; // check for implicit key\n\n      var offset = node.range.end;\n      if (src[offset] === '\\n' || src[offset - 1] === '\\n') return false;\n      offset = Node.endOfWhiteSpace(src, offset);\n      return src[offset] === ':';\n    } // Anchor and tag are before type, which determines the node implementation\n    // class; hence this intermediate step.\n\n  }, {\n    key: \"parseProps\",\n    value: function parseProps(offset) {\n      var inFlow = this.inFlow,\n          parent = this.parent,\n          src = this.src;\n      var props = [];\n      var lineHasProps = false;\n      offset = this.atLineStart ? Node.endOfIndent(src, offset) : Node.endOfWhiteSpace(src, offset);\n      var ch = src[offset];\n\n      while (ch === Char.ANCHOR || ch === Char.COMMENT || ch === Char.TAG || ch === '\\n') {\n        if (ch === '\\n') {\n          var inEnd = offset;\n          var lineStart = void 0;\n\n          do {\n            lineStart = inEnd + 1;\n            inEnd = Node.endOfIndent(src, lineStart);\n          } while (src[inEnd] === '\\n');\n\n          var indentDiff = inEnd - (lineStart + this.indent);\n          var noIndicatorAsIndent = parent.type === Type.SEQ_ITEM && parent.context.atLineStart;\n          if (src[inEnd] !== '#' && !Node.nextNodeIsIndented(src[inEnd], indentDiff, !noIndicatorAsIndent)) break;\n          this.atLineStart = true;\n          this.lineStart = lineStart;\n          lineHasProps = false;\n          offset = inEnd;\n        } else if (ch === Char.COMMENT) {\n          var end = Node.endOfLine(src, offset + 1);\n          props.push(new Range(offset, end));\n          offset = end;\n        } else {\n          var _end = Node.endOfIdentifier(src, offset + 1);\n\n          if (ch === Char.TAG && src[_end] === ',' && /^[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+,\\d\\d\\d\\d(-\\d\\d){0,2}\\/\\S/.test(src.slice(offset + 1, _end + 13))) {\n            // Let's presume we're dealing with a YAML 1.0 domain tag here, rather\n            // than an empty but 'foo.bar' private-tagged node in a flow collection\n            // followed without whitespace by a plain string starting with a year\n            // or date divided by something.\n            _end = Node.endOfIdentifier(src, _end + 5);\n          }\n\n          props.push(new Range(offset, _end));\n          lineHasProps = true;\n          offset = Node.endOfWhiteSpace(src, _end);\n        }\n\n        ch = src[offset];\n      } // '- &a : b' has an anchor on an empty node\n\n\n      if (lineHasProps && ch === ':' && Node.atBlank(src, offset + 1, true)) offset -= 1;\n      var type = ParseContext.parseType(src, offset, inFlow);\n      return {\n        props: props,\n        type: type,\n        valueStart: offset\n      };\n    }\n    /**\n     * Parses a node from the source\n     * @param {ParseContext} overlay\n     * @param {number} start - Index of first non-whitespace character for the node\n     * @returns {?Node} - null if at a document boundary\n     */\n\n  }], [{\n    key: \"parseType\",\n    value: function parseType(src, offset, inFlow) {\n      switch (src[offset]) {\n        case '*':\n          return Type.ALIAS;\n\n        case '>':\n          return Type.BLOCK_FOLDED;\n\n        case '|':\n          return Type.BLOCK_LITERAL;\n\n        case '{':\n          return Type.FLOW_MAP;\n\n        case '[':\n          return Type.FLOW_SEQ;\n\n        case '?':\n          return !inFlow && Node.atBlank(src, offset + 1, true) ? Type.MAP_KEY : Type.PLAIN;\n\n        case ':':\n          return !inFlow && Node.atBlank(src, offset + 1, true) ? Type.MAP_VALUE : Type.PLAIN;\n\n        case '-':\n          return !inFlow && Node.atBlank(src, offset + 1, true) ? Type.SEQ_ITEM : Type.PLAIN;\n\n        case '\"':\n          return Type.QUOTE_DOUBLE;\n\n        case \"'\":\n          return Type.QUOTE_SINGLE;\n\n        default:\n          return Type.PLAIN;\n      }\n    }\n  }]);\n\n  return ParseContext;\n}();\n\n// Published as 'yaml/parse-cst'\nfunction parse(src) {\n  var cr = [];\n\n  if (src.indexOf('\\r') !== -1) {\n    src = src.replace(/\\r\\n?/g, function (match, offset) {\n      if (match.length > 1) cr.push(offset);\n      return '\\n';\n    });\n  }\n\n  var documents = [];\n  var offset = 0;\n\n  do {\n    var doc = new Document();\n    var context = new ParseContext({\n      src: src\n    });\n    offset = doc.parse(context, offset);\n    documents.push(doc);\n  } while (offset < src.length);\n\n  documents.setOrigRanges = function () {\n    if (cr.length === 0) return false;\n\n    for (var i = 1; i < cr.length; ++i) {\n      cr[i] -= i;\n    }\n\n    var crOffset = 0;\n\n    for (var _i = 0; _i < documents.length; ++_i) {\n      crOffset = documents[_i].setOrigRanges(cr, crOffset);\n    }\n\n    cr.splice(0, cr.length);\n    return true;\n  };\n\n  documents.toString = function () {\n    return documents.join('...\\n');\n  };\n\n  return documents;\n}\n\nexport { parse };\n", "import { c as _classCallCheck, j as _inherits, k as _createSuper, b as _createClass, e as _defineProperty, p as _assertThisInitialized, a as _typeof, q as _toArray, T as Type, _ as _createForOfIteratorHelper, l as _get, m as _getPrototypeOf, o as YAMLReferenceError, r as _possibleConstructorReturn, h as _slicedToArray, g as YAMLSemanticError, n as defaultTags, f as YAMLWarning, C as Char, Y as YAMLSyntaxError, P as PlainValue } from './PlainValue-b8036b75.js';\n\nfunction addCommentBefore(str, indent, comment) {\n  if (!comment) return str;\n  var cc = comment.replace(/[\\s\\S]^/gm, \"$&\".concat(indent, \"#\"));\n  return \"#\".concat(cc, \"\\n\").concat(indent).concat(str);\n}\nfunction addComment(str, indent, comment) {\n  return !comment ? str : comment.indexOf('\\n') === -1 ? \"\".concat(str, \" #\").concat(comment) : \"\".concat(str, \"\\n\") + comment.replace(/^/gm, \"\".concat(indent || '', \"#\"));\n}\n\nvar Node = function Node() {\n  _classCallCheck(this, Node);\n};\n\nfunction toJSON(value, arg, ctx) {\n  if (Array.isArray(value)) return value.map(function (v, i) {\n    return toJSON(v, String(i), ctx);\n  });\n\n  if (value && typeof value.toJSON === 'function') {\n    var anchor = ctx && ctx.anchors && ctx.anchors.get(value);\n    if (anchor) ctx.onCreate = function (res) {\n      anchor.res = res;\n      delete ctx.onCreate;\n    };\n    var res = value.toJSON(arg, ctx);\n    if (anchor && ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n\n  if ((!ctx || !ctx.keep) && typeof value === 'bigint') return Number(value);\n  return value;\n}\n\nvar Scalar = /*#__PURE__*/function (_Node) {\n  _inherits(Scalar, _Node);\n\n  var _super = _createSuper(Scalar);\n\n  function Scalar(value) {\n    var _this;\n\n    _classCallCheck(this, Scalar);\n\n    _this = _super.call(this);\n    _this.value = value;\n    return _this;\n  }\n\n  _createClass(Scalar, [{\n    key: \"toJSON\",\n    value: function toJSON$1(arg, ctx) {\n      return ctx && ctx.keep ? this.value : toJSON(this.value, arg, ctx);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return String(this.value);\n    }\n  }]);\n\n  return Scalar;\n}(Node);\n\nfunction collectionFromPath(schema, path, value) {\n  var v = value;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var k = path[i];\n\n    if (Number.isInteger(k) && k >= 0) {\n      var a = [];\n      a[k] = v;\n      v = a;\n    } else {\n      var o = {};\n      Object.defineProperty(o, k, {\n        value: v,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n      v = o;\n    }\n  }\n\n  return schema.createNode(v, false);\n} // null, undefined, or an empty non-string iterable (e.g. [])\n\n\nvar isEmptyPath = function isEmptyPath(path) {\n  return path == null || _typeof(path) === 'object' && path[Symbol.iterator]().next().done;\n};\nvar Collection = /*#__PURE__*/function (_Node) {\n  _inherits(Collection, _Node);\n\n  var _super = _createSuper(Collection);\n\n  function Collection(schema) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _this.schema = schema;\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      if (isEmptyPath(path)) this.add(value);else {\n        var _path = _toArray(path),\n            key = _path[0],\n            rest = _path.slice(1);\n\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.addIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n      }\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(_ref) {\n      var _ref2 = _toArray(_ref),\n          key = _ref2[0],\n          rest = _ref2.slice(1);\n\n      if (rest.length === 0) return this.delete(key);\n      var node = this.get(key, true);\n      if (node instanceof Collection) return node.deleteIn(rest);else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(_ref3, keepScalar) {\n      var _ref4 = _toArray(_ref3),\n          key = _ref4[0],\n          rest = _ref4.slice(1);\n\n      var node = this.get(key, true);\n      if (rest.length === 0) return !keepScalar && node instanceof Scalar ? node.value : node;else return node instanceof Collection ? node.getIn(rest, keepScalar) : undefined;\n    }\n  }, {\n    key: \"hasAllNullValues\",\n    value: function hasAllNullValues() {\n      return this.items.every(function (node) {\n        if (!node || node.type !== 'PAIR') return false;\n        var n = node.value;\n        return n == null || n instanceof Scalar && n.value == null && !n.commentBefore && !n.comment && !n.tag;\n      });\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(_ref5) {\n      var _ref6 = _toArray(_ref5),\n          key = _ref6[0],\n          rest = _ref6.slice(1);\n\n      if (rest.length === 0) return this.has(key);\n      var node = this.get(key, true);\n      return node instanceof Collection ? node.hasIn(rest) : false;\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(_ref7, value) {\n      var _ref8 = _toArray(_ref7),\n          key = _ref8[0],\n          rest = _ref8.slice(1);\n\n      if (rest.length === 0) {\n        this.set(key, value);\n      } else {\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.setIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n      }\n    } // overridden in implementations\n\n    /* istanbul ignore next */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return null;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, _ref9, onComment, onChompKeep) {\n      var _this2 = this;\n\n      var blockItem = _ref9.blockItem,\n          flowChars = _ref9.flowChars,\n          isMap = _ref9.isMap,\n          itemIndent = _ref9.itemIndent;\n      var _ctx = ctx,\n          indent = _ctx.indent,\n          indentStep = _ctx.indentStep,\n          stringify = _ctx.stringify;\n      var inFlow = this.type === Type.FLOW_MAP || this.type === Type.FLOW_SEQ || ctx.inFlow;\n      if (inFlow) itemIndent += indentStep;\n      var allNullValues = isMap && this.hasAllNullValues();\n      ctx = Object.assign({}, ctx, {\n        allNullValues: allNullValues,\n        indent: itemIndent,\n        inFlow: inFlow,\n        type: null\n      });\n      var chompKeep = false;\n      var hasItemWithNewLine = false;\n      var nodes = this.items.reduce(function (nodes, item, i) {\n        var comment;\n\n        if (item) {\n          if (!chompKeep && item.spaceBefore) nodes.push({\n            type: 'comment',\n            str: ''\n          });\n          if (item.commentBefore) item.commentBefore.match(/^.*$/gm).forEach(function (line) {\n            nodes.push({\n              type: 'comment',\n              str: \"#\".concat(line)\n            });\n          });\n          if (item.comment) comment = item.comment;\n          if (inFlow && (!chompKeep && item.spaceBefore || item.commentBefore || item.comment || item.key && (item.key.commentBefore || item.key.comment) || item.value && (item.value.commentBefore || item.value.comment))) hasItemWithNewLine = true;\n        }\n\n        chompKeep = false;\n        var str = stringify(item, ctx, function () {\n          return comment = null;\n        }, function () {\n          return chompKeep = true;\n        });\n        if (inFlow && !hasItemWithNewLine && str.includes('\\n')) hasItemWithNewLine = true;\n        if (inFlow && i < _this2.items.length - 1) str += ',';\n        str = addComment(str, itemIndent, comment);\n        if (chompKeep && (comment || inFlow)) chompKeep = false;\n        nodes.push({\n          type: 'item',\n          str: str\n        });\n        return nodes;\n      }, []);\n      var str;\n\n      if (nodes.length === 0) {\n        str = flowChars.start + flowChars.end;\n      } else if (inFlow) {\n        var start = flowChars.start,\n            end = flowChars.end;\n        var strings = nodes.map(function (n) {\n          return n.str;\n        });\n\n        if (hasItemWithNewLine || strings.reduce(function (sum, str) {\n          return sum + str.length + 2;\n        }, 2) > Collection.maxFlowStringSingleLineLength) {\n          str = start;\n\n          var _iterator = _createForOfIteratorHelper(strings),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var s = _step.value;\n              str += s ? \"\\n\".concat(indentStep).concat(indent).concat(s) : '\\n';\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          str += \"\\n\".concat(indent).concat(end);\n        } else {\n          str = \"\".concat(start, \" \").concat(strings.join(' '), \" \").concat(end);\n        }\n      } else {\n        var _strings = nodes.map(blockItem);\n\n        str = _strings.shift();\n\n        var _iterator2 = _createForOfIteratorHelper(_strings),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _s = _step2.value;\n            str += _s ? \"\\n\".concat(indent).concat(_s) : '\\n';\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      if (this.comment) {\n        str += '\\n' + this.comment.replace(/^/gm, \"\".concat(indent, \"#\"));\n        if (onComment) onComment();\n      } else if (chompKeep && onChompKeep) onChompKeep();\n\n      return str;\n    }\n  }]);\n\n  return Collection;\n}(Node);\n\n_defineProperty(Collection, \"maxFlowStringSingleLineLength\", 60);\n\nfunction asItemIndex(key) {\n  var idx = key instanceof Scalar ? key.value : key;\n  if (idx && typeof idx === 'string') idx = Number(idx);\n  return Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\n\nvar YAMLSeq = /*#__PURE__*/function (_Collection) {\n  _inherits(YAMLSeq, _Collection);\n\n  var _super = _createSuper(YAMLSeq);\n\n  function YAMLSeq() {\n    _classCallCheck(this, YAMLSeq);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(YAMLSeq, [{\n    key: \"add\",\n    value: function add(value) {\n      this.items.push(value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') return false;\n      var del = this.items.splice(idx, 1);\n      return del.length > 0;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') return undefined;\n      var it = this.items[idx];\n      return !keepScalar && it instanceof Scalar ? it.value : it;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      var idx = asItemIndex(key);\n      return typeof idx === 'number' && idx < this.items.length;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') throw new Error(\"Expected a valid index, not \".concat(key, \".\"));\n      this.items[idx] = value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON$1(_, ctx) {\n      var seq = [];\n      if (ctx && ctx.onCreate) ctx.onCreate(seq);\n      var i = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          seq.push(toJSON(item, String(i++), ctx));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return seq;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      return _get(_getPrototypeOf(YAMLSeq.prototype), \"toString\", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.type === 'comment' ? n.str : \"- \".concat(n.str);\n        },\n        flowChars: {\n          start: '[',\n          end: ']'\n        },\n        isMap: false,\n        itemIndent: (ctx.indent || '') + '  '\n      }, onComment, onChompKeep);\n    }\n  }]);\n\n  return YAMLSeq;\n}(Collection);\n\nvar stringifyKey = function stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return '';\n  if (_typeof(jsKey) !== 'object') return String(jsKey);\n  if (key instanceof Node && ctx && ctx.doc) return key.toString({\n    anchors: Object.create(null),\n    doc: ctx.doc,\n    indent: '',\n    indentStep: ctx.indentStep,\n    inFlow: true,\n    inStringifyKey: true,\n    stringify: ctx.stringify\n  });\n  return JSON.stringify(jsKey);\n};\n\nvar Pair = /*#__PURE__*/function (_Node) {\n  _inherits(Pair, _Node);\n\n  var _super = _createSuper(Pair);\n\n  function Pair(key) {\n    var _this;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Pair);\n\n    _this = _super.call(this);\n    _this.key = key;\n    _this.value = value;\n    _this.type = Pair.Type.PAIR;\n    return _this;\n  }\n\n  _createClass(Pair, [{\n    key: \"commentBefore\",\n    get: function get() {\n      return this.key instanceof Node ? this.key.commentBefore : undefined;\n    },\n    set: function set(cb) {\n      if (this.key == null) this.key = new Scalar(null);\n      if (this.key instanceof Node) this.key.commentBefore = cb;else {\n        var msg = 'Pair.commentBefore is an alias for Pair.key.commentBefore. To set it, the key must be a Node.';\n        throw new Error(msg);\n      }\n    }\n  }, {\n    key: \"addToJSMap\",\n    value: function addToJSMap(ctx, map) {\n      var key = toJSON(this.key, '', ctx);\n\n      if (map instanceof Map) {\n        var value = toJSON(this.value, key, ctx);\n        map.set(key, value);\n      } else if (map instanceof Set) {\n        map.add(key);\n      } else {\n        var stringKey = stringifyKey(this.key, key, ctx);\n\n        var _value = toJSON(this.value, stringKey, ctx);\n\n        if (stringKey in map) Object.defineProperty(map, stringKey, {\n          value: _value,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        });else map[stringKey] = _value;\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      var pair = ctx && ctx.mapAsMap ? new Map() : {};\n      return this.addToJSMap(ctx, pair);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx || !ctx.doc) return JSON.stringify(this);\n      var _ctx$doc$options = ctx.doc.options,\n          indentSize = _ctx$doc$options.indent,\n          indentSeq = _ctx$doc$options.indentSeq,\n          simpleKeys = _ctx$doc$options.simpleKeys;\n      var key = this.key,\n          value = this.value;\n      var keyComment = key instanceof Node && key.comment;\n\n      if (simpleKeys) {\n        if (keyComment) {\n          throw new Error('With simple keys, key nodes cannot have comments');\n        }\n\n        if (key instanceof Collection) {\n          var msg = 'With simple keys, collection cannot be used as a key value';\n          throw new Error(msg);\n        }\n      }\n\n      var explicitKey = !simpleKeys && (!key || keyComment || (key instanceof Node ? key instanceof Collection || key.type === Type.BLOCK_FOLDED || key.type === Type.BLOCK_LITERAL : _typeof(key) === 'object'));\n      var _ctx = ctx,\n          doc = _ctx.doc,\n          indent = _ctx.indent,\n          indentStep = _ctx.indentStep,\n          stringify = _ctx.stringify;\n      ctx = Object.assign({}, ctx, {\n        implicitKey: !explicitKey,\n        indent: indent + indentStep\n      });\n      var chompKeep = false;\n      var str = stringify(key, ctx, function () {\n        return keyComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      str = addComment(str, ctx.indent, keyComment);\n\n      if (!explicitKey && str.length > 1024) {\n        if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n      }\n\n      if (ctx.allNullValues && !simpleKeys) {\n        if (this.comment) {\n          str = addComment(str, ctx.indent, this.comment);\n          if (onComment) onComment();\n        } else if (chompKeep && !keyComment && onChompKeep) onChompKeep();\n\n        return ctx.inFlow && !explicitKey ? str : \"? \".concat(str);\n      }\n\n      str = explicitKey ? \"? \".concat(str, \"\\n\").concat(indent, \":\") : \"\".concat(str, \":\");\n\n      if (this.comment) {\n        // expected (but not strictly required) to be a single-line comment\n        str = addComment(str, ctx.indent, this.comment);\n        if (onComment) onComment();\n      }\n\n      var vcb = '';\n      var valueComment = null;\n\n      if (value instanceof Node) {\n        if (value.spaceBefore) vcb = '\\n';\n\n        if (value.commentBefore) {\n          var cs = value.commentBefore.replace(/^/gm, \"\".concat(ctx.indent, \"#\"));\n          vcb += \"\\n\".concat(cs);\n        }\n\n        valueComment = value.comment;\n      } else if (value && _typeof(value) === 'object') {\n        value = doc.schema.createNode(value, true);\n      }\n\n      ctx.implicitKey = false;\n      if (!explicitKey && !this.comment && value instanceof Scalar) ctx.indentAtStart = str.length + 1;\n      chompKeep = false;\n\n      if (!indentSeq && indentSize >= 2 && !ctx.inFlow && !explicitKey && value instanceof YAMLSeq && value.type !== Type.FLOW_SEQ && !value.tag && !doc.anchors.getName(value)) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n      }\n\n      var valueStr = stringify(value, ctx, function () {\n        return valueComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      var ws = ' ';\n\n      if (vcb || this.comment) {\n        ws = \"\".concat(vcb, \"\\n\").concat(ctx.indent);\n      } else if (!explicitKey && value instanceof Collection) {\n        var flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n')) ws = \"\\n\".concat(ctx.indent);\n      } else if (valueStr[0] === '\\n') ws = '';\n\n      if (chompKeep && !valueComment && onChompKeep) onChompKeep();\n      return addComment(str + ws + valueStr, ctx.indent, valueComment);\n    }\n  }]);\n\n  return Pair;\n}(Node);\n\n_defineProperty(Pair, \"Type\", {\n  PAIR: 'PAIR',\n  MERGE_PAIR: 'MERGE_PAIR'\n});\n\nvar getAliasCount = function getAliasCount(node, anchors) {\n  if (node instanceof Alias) {\n    var anchor = anchors.get(node.source);\n    return anchor.count * anchor.aliasCount;\n  } else if (node instanceof Collection) {\n    var count = 0;\n\n    var _iterator = _createForOfIteratorHelper(node.items),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var c = getAliasCount(item, anchors);\n        if (c > count) count = c;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return count;\n  } else if (node instanceof Pair) {\n    var kc = getAliasCount(node.key, anchors);\n    var vc = getAliasCount(node.value, anchors);\n    return Math.max(kc, vc);\n  }\n\n  return 1;\n};\n\nvar Alias = /*#__PURE__*/function (_Node) {\n  _inherits(Alias, _Node);\n\n  var _super = _createSuper(Alias);\n\n  function Alias(source) {\n    var _this;\n\n    _classCallCheck(this, Alias);\n\n    _this = _super.call(this);\n    _this.source = source;\n    _this.type = Type.ALIAS;\n    return _this;\n  }\n\n  _createClass(Alias, [{\n    key: \"tag\",\n    set: function set(t) {\n      throw new Error('Alias nodes cannot have tags');\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON$1(arg, ctx) {\n      if (!ctx) return toJSON(this.source, arg, ctx);\n      var anchors = ctx.anchors,\n          maxAliasCount = ctx.maxAliasCount;\n      var anchor = anchors.get(this.source);\n      /* istanbul ignore if */\n\n      if (!anchor || anchor.res === undefined) {\n        var msg = 'This should not happen: Alias anchor was not resolved?';\n        if (this.cstNode) throw new YAMLReferenceError(this.cstNode, msg);else throw new ReferenceError(msg);\n      }\n\n      if (maxAliasCount >= 0) {\n        anchor.count += 1;\n        if (anchor.aliasCount === 0) anchor.aliasCount = getAliasCount(this.source, anchors);\n\n        if (anchor.count * anchor.aliasCount > maxAliasCount) {\n          var _msg = 'Excessive alias count indicates a resource exhaustion attack';\n          if (this.cstNode) throw new YAMLReferenceError(this.cstNode, _msg);else throw new ReferenceError(_msg);\n        }\n      }\n\n      return anchor.res;\n    } // Only called when stringifying an alias mapping key while constructing\n    // Object output.\n\n  }, {\n    key: \"toString\",\n    value: function toString(ctx) {\n      return Alias.stringify(this, ctx);\n    }\n  }], [{\n    key: \"stringify\",\n    value: function stringify(_ref, _ref2) {\n      var range = _ref.range,\n          source = _ref.source;\n      var anchors = _ref2.anchors,\n          doc = _ref2.doc,\n          implicitKey = _ref2.implicitKey,\n          inStringifyKey = _ref2.inStringifyKey;\n      var anchor = Object.keys(anchors).find(function (a) {\n        return anchors[a] === source;\n      });\n      if (!anchor && inStringifyKey) anchor = doc.anchors.getName(source) || doc.anchors.newName();\n      if (anchor) return \"*\".concat(anchor).concat(implicitKey ? ' ' : '');\n      var msg = doc.anchors.getName(source) ? 'Alias node must be after source node' : 'Source node not found for alias node';\n      throw new Error(\"\".concat(msg, \" [\").concat(range, \"]\"));\n    }\n  }]);\n\n  return Alias;\n}(Node);\n\n_defineProperty(Alias, \"default\", true);\n\nfunction findPair(items, key) {\n  var k = key instanceof Scalar ? key.value : key;\n\n  var _iterator = _createForOfIteratorHelper(items),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var it = _step.value;\n\n      if (it instanceof Pair) {\n        if (it.key === key || it.key === k) return it;\n        if (it.key && it.key.value === k) return it;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return undefined;\n}\nvar YAMLMap = /*#__PURE__*/function (_Collection) {\n  _inherits(YAMLMap, _Collection);\n\n  var _super = _createSuper(YAMLMap);\n\n  function YAMLMap() {\n    _classCallCheck(this, YAMLMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(YAMLMap, [{\n    key: \"add\",\n    value: function add(pair, overwrite) {\n      if (!pair) pair = new Pair(pair);else if (!(pair instanceof Pair)) pair = new Pair(pair.key || pair, pair.value);\n      var prev = findPair(this.items, pair.key);\n      var sortEntries = this.schema && this.schema.sortMapEntries;\n\n      if (prev) {\n        if (overwrite) prev.value = pair.value;else throw new Error(\"Key \".concat(pair.key, \" already set\"));\n      } else if (sortEntries) {\n        var i = this.items.findIndex(function (item) {\n          return sortEntries(pair, item) < 0;\n        });\n        if (i === -1) this.items.push(pair);else this.items.splice(i, 0, pair);\n      } else {\n        this.items.push(pair);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var it = findPair(this.items, key);\n      if (!it) return false;\n      var del = this.items.splice(this.items.indexOf(it), 1);\n      return del.length > 0;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      var it = findPair(this.items, key);\n      var node = it && it.value;\n      return !keepScalar && node instanceof Scalar ? node.value : node;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return !!findPair(this.items, key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param {*} arg ignored\n     * @param {*} ctx Conversion context, originally set in Document#toJSON()\n     * @param {Class} Type If set, forces the returned collection type\n     * @returns {*} Instance of Type, Map, or Object\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx, Type) {\n      var map = Type ? new Type() : ctx && ctx.mapAsMap ? new Map() : {};\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n      var _iterator2 = _createForOfIteratorHelper(this.items),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          item.addToJSMap(ctx, map);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n\n      var _iterator3 = _createForOfIteratorHelper(this.items),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n          if (!(item instanceof Pair)) throw new Error(\"Map items must all be pairs; found \".concat(JSON.stringify(item), \" instead\"));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return _get(_getPrototypeOf(YAMLMap.prototype), \"toString\", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.str;\n        },\n        flowChars: {\n          start: '{',\n          end: '}'\n        },\n        isMap: true,\n        itemIndent: ctx.indent || ''\n      }, onComment, onChompKeep);\n    }\n  }]);\n\n  return YAMLMap;\n}(Collection);\n\nvar MERGE_KEY = '<<';\nvar Merge = /*#__PURE__*/function (_Pair) {\n  _inherits(Merge, _Pair);\n\n  var _super = _createSuper(Merge);\n\n  function Merge(pair) {\n    var _this;\n\n    _classCallCheck(this, Merge);\n\n    if (pair instanceof Pair) {\n      var seq = pair.value;\n\n      if (!(seq instanceof YAMLSeq)) {\n        seq = new YAMLSeq();\n        seq.items.push(pair.value);\n        seq.range = pair.value.range;\n      }\n\n      _this = _super.call(this, pair.key, seq);\n      _this.range = pair.range;\n    } else {\n      _this = _super.call(this, new Scalar(MERGE_KEY), new YAMLSeq());\n    }\n\n    _this.type = Pair.Type.MERGE_PAIR;\n    return _possibleConstructorReturn(_this);\n  } // If the value associated with a merge key is a single mapping node, each of\n  // its key/value pairs is inserted into the current mapping, unless the key\n  // already exists in it. If the value associated with the merge key is a\n  // sequence, then this sequence is expected to contain mapping nodes and each\n  // of these nodes is merged in turn according to its order in the sequence.\n  // Keys in mapping nodes earlier in the sequence override keys specified in\n  // later mapping nodes. -- http://yaml.org/type/merge.html\n\n\n  _createClass(Merge, [{\n    key: \"addToJSMap\",\n    value: function addToJSMap(ctx, map) {\n      var _iterator = _createForOfIteratorHelper(this.value.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var source = _step.value.source;\n          if (!(source instanceof YAMLMap)) throw new Error('Merge sources must be maps');\n          var srcMap = source.toJSON(null, ctx, Map);\n\n          var _iterator2 = _createForOfIteratorHelper(srcMap),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _step2$value = _slicedToArray(_step2.value, 2),\n                  key = _step2$value[0],\n                  value = _step2$value[1];\n\n              if (map instanceof Map) {\n                if (!map.has(key)) map.set(key, value);\n              } else if (map instanceof Set) {\n                map.add(key);\n              } else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n                Object.defineProperty(map, key, {\n                  value: value,\n                  writable: true,\n                  enumerable: true,\n                  configurable: true\n                });\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment) {\n      var seq = this.value;\n      if (seq.items.length > 1) return _get(_getPrototypeOf(Merge.prototype), \"toString\", this).call(this, ctx, onComment);\n      this.value = seq.items[0];\n\n      var str = _get(_getPrototypeOf(Merge.prototype), \"toString\", this).call(this, ctx, onComment);\n\n      this.value = seq;\n      return str;\n    }\n  }]);\n\n  return Merge;\n}(Pair);\n\nvar binaryOptions = {\n  defaultType: Type.BLOCK_LITERAL,\n  lineWidth: 76\n};\nvar boolOptions = {\n  trueStr: 'true',\n  falseStr: 'false'\n};\nvar intOptions = {\n  asBigInt: false\n};\nvar nullOptions = {\n  nullStr: 'null'\n};\nvar strOptions = {\n  defaultType: Type.PLAIN,\n  doubleQuoted: {\n    jsonEncoding: false,\n    minMultiLineLength: 40\n  },\n  fold: {\n    lineWidth: 80,\n    minContentWidth: 20\n  }\n};\n\nfunction resolveScalar(str, tags, scalarFallback) {\n  var _iterator = _createForOfIteratorHelper(tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          format = _step$value.format,\n          test = _step$value.test,\n          resolve = _step$value.resolve;\n\n      if (test) {\n        var match = str.match(test);\n\n        if (match) {\n          var res = resolve.apply(null, match);\n          if (!(res instanceof Scalar)) res = new Scalar(res);\n          if (format) res.format = format;\n          return res;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (scalarFallback) str = scalarFallback(str);\n  return new Scalar(str);\n}\n\nvar FOLD_FLOW = 'flow';\nvar FOLD_BLOCK = 'block';\nvar FOLD_QUOTED = 'quoted'; // presumes i+1 is at the start of a line\n// returns index of last newline in more-indented block\n\nvar consumeMoreIndentedLines = function consumeMoreIndentedLines(text, i) {\n  var ch = text[i + 1];\n\n  while (ch === ' ' || ch === '\\t') {\n    do {\n      ch = text[i += 1];\n    } while (ch && ch !== '\\n');\n\n    ch = text[i + 1];\n  }\n\n  return i;\n};\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n *\n * @param {string} text\n * @param {string} indent\n * @param {string} [mode='flow'] `'block'` prevents more-indented lines\n *   from being folded; `'quoted'` allows for `\\` escapes, including escaped\n *   newlines\n * @param {Object} options\n * @param {number} [options.indentAtStart] Accounts for leading contents on\n *   the first line, defaulting to `indent.length`\n * @param {number} [options.lineWidth=80]\n * @param {number} [options.minContentWidth=20] Allow highly indented lines to\n *   stretch the line width or indent content from the start\n * @param {function} options.onFold Called once if the text is folded\n * @param {function} options.onFold Called once if any line of text exceeds\n *   lineWidth characters\n */\n\n\nfunction foldFlowLines(text, indent, mode, _ref) {\n  var indentAtStart = _ref.indentAtStart,\n      _ref$lineWidth = _ref.lineWidth,\n      lineWidth = _ref$lineWidth === void 0 ? 80 : _ref$lineWidth,\n      _ref$minContentWidth = _ref.minContentWidth,\n      minContentWidth = _ref$minContentWidth === void 0 ? 20 : _ref$minContentWidth,\n      onFold = _ref.onFold,\n      onOverflow = _ref.onOverflow;\n  if (!lineWidth || lineWidth < 0) return text;\n  var endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n  if (text.length <= endStep) return text;\n  var folds = [];\n  var escapedFolds = {};\n  var end = lineWidth - indent.length;\n\n  if (typeof indentAtStart === 'number') {\n    if (indentAtStart > lineWidth - Math.max(2, minContentWidth)) folds.push(0);else end = lineWidth - indentAtStart;\n  }\n\n  var split = undefined;\n  var prev = undefined;\n  var overflow = false;\n  var i = -1;\n  var escStart = -1;\n  var escEnd = -1;\n\n  if (mode === FOLD_BLOCK) {\n    i = consumeMoreIndentedLines(text, i);\n    if (i !== -1) end = i + endStep;\n  }\n\n  for (var ch; ch = text[i += 1];) {\n    if (mode === FOLD_QUOTED && ch === '\\\\') {\n      escStart = i;\n\n      switch (text[i + 1]) {\n        case 'x':\n          i += 3;\n          break;\n\n        case 'u':\n          i += 5;\n          break;\n\n        case 'U':\n          i += 9;\n          break;\n\n        default:\n          i += 1;\n      }\n\n      escEnd = i;\n    }\n\n    if (ch === '\\n') {\n      if (mode === FOLD_BLOCK) i = consumeMoreIndentedLines(text, i);\n      end = i + endStep;\n      split = undefined;\n    } else {\n      if (ch === ' ' && prev && prev !== ' ' && prev !== '\\n' && prev !== '\\t') {\n        // space surrounded by non-space can be replaced with newline + indent\n        var next = text[i + 1];\n        if (next && next !== ' ' && next !== '\\n' && next !== '\\t') split = i;\n      }\n\n      if (i >= end) {\n        if (split) {\n          folds.push(split);\n          end = split + endStep;\n          split = undefined;\n        } else if (mode === FOLD_QUOTED) {\n          // white-space collected at end may stretch past lineWidth\n          while (prev === ' ' || prev === '\\t') {\n            prev = ch;\n            ch = text[i += 1];\n            overflow = true;\n          } // Account for newline escape, but don't break preceding escape\n\n\n          var j = i > escEnd + 1 ? i - 2 : escStart - 1; // Bail out if lineWidth & minContentWidth are shorter than an escape string\n\n          if (escapedFolds[j]) return text;\n          folds.push(j);\n          escapedFolds[j] = true;\n          end = j + endStep;\n          split = undefined;\n        } else {\n          overflow = true;\n        }\n      }\n    }\n\n    prev = ch;\n  }\n\n  if (overflow && onOverflow) onOverflow();\n  if (folds.length === 0) return text;\n  if (onFold) onFold();\n  var res = text.slice(0, folds[0]);\n\n  for (var _i = 0; _i < folds.length; ++_i) {\n    var fold = folds[_i];\n\n    var _end = folds[_i + 1] || text.length;\n\n    if (fold === 0) res = \"\\n\".concat(indent).concat(text.slice(0, _end));else {\n      if (mode === FOLD_QUOTED && escapedFolds[fold]) res += \"\".concat(text[fold], \"\\\\\");\n      res += \"\\n\".concat(indent).concat(text.slice(fold + 1, _end));\n    }\n  }\n\n  return res;\n}\n\nvar getFoldOptions = function getFoldOptions(_ref) {\n  var indentAtStart = _ref.indentAtStart;\n  return indentAtStart ? Object.assign({\n    indentAtStart: indentAtStart\n  }, strOptions.fold) : strOptions.fold;\n}; // Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\n\n\nvar containsDocumentMarker = function containsDocumentMarker(str) {\n  return /^(%|---|\\.\\.\\.)/m.test(str);\n};\n\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n  if (!lineWidth || lineWidth < 0) return false;\n  var limit = lineWidth - indentLength;\n  var strLen = str.length;\n  if (strLen <= limit) return false;\n\n  for (var i = 0, start = 0; i < strLen; ++i) {\n    if (str[i] === '\\n') {\n      if (i - start > limit) return true;\n      start = i + 1;\n      if (strLen - start <= limit) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction doubleQuotedString(value, ctx) {\n  var implicitKey = ctx.implicitKey;\n  var _strOptions$doubleQuo = strOptions.doubleQuoted,\n      jsonEncoding = _strOptions$doubleQuo.jsonEncoding,\n      minMultiLineLength = _strOptions$doubleQuo.minMultiLineLength;\n  var json = JSON.stringify(value);\n  if (jsonEncoding) return json;\n  var indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  var str = '';\n  var start = 0;\n\n  for (var i = 0, ch = json[i]; ch; ch = json[++i]) {\n    if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n      // space before newline needs to be escaped to not be folded\n      str += json.slice(start, i) + '\\\\ ';\n      i += 1;\n      start = i;\n      ch = '\\\\';\n    }\n\n    if (ch === '\\\\') switch (json[i + 1]) {\n      case 'u':\n        {\n          str += json.slice(start, i);\n          var code = json.substr(i + 2, 4);\n\n          switch (code) {\n            case '0000':\n              str += '\\\\0';\n              break;\n\n            case '0007':\n              str += '\\\\a';\n              break;\n\n            case '000b':\n              str += '\\\\v';\n              break;\n\n            case '001b':\n              str += '\\\\e';\n              break;\n\n            case '0085':\n              str += '\\\\N';\n              break;\n\n            case '00a0':\n              str += '\\\\_';\n              break;\n\n            case '2028':\n              str += '\\\\L';\n              break;\n\n            case '2029':\n              str += '\\\\P';\n              break;\n\n            default:\n              if (code.substr(0, 2) === '00') str += '\\\\x' + code.substr(2);else str += json.substr(i, 6);\n          }\n\n          i += 5;\n          start = i + 1;\n        }\n        break;\n\n      case 'n':\n        if (implicitKey || json[i + 2] === '\"' || json.length < minMultiLineLength) {\n          i += 1;\n        } else {\n          // folding will eat first newline\n          str += json.slice(start, i) + '\\n\\n';\n\n          while (json[i + 2] === '\\\\' && json[i + 3] === 'n' && json[i + 4] !== '\"') {\n            str += '\\n';\n            i += 2;\n          }\n\n          str += indent; // space after newline needs to be escaped to not be folded\n\n          if (json[i + 2] === ' ') str += '\\\\';\n          i += 1;\n          start = i + 1;\n        }\n\n        break;\n\n      default:\n        i += 1;\n    }\n  }\n\n  str = start ? str + json.slice(start) : json;\n  return implicitKey ? str : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\n\nfunction singleQuotedString(value, ctx) {\n  if (ctx.implicitKey) {\n    if (/\\n/.test(value)) return doubleQuotedString(value, ctx);\n  } else {\n    // single quoted string can't have leading or trailing whitespace around newline\n    if (/[ \\t]\\n|\\n[ \\t]/.test(value)) return doubleQuotedString(value, ctx);\n  }\n\n  var indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  var res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, \"$&\\n\".concat(indent)) + \"'\";\n  return ctx.implicitKey ? res : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\n\nfunction blockString(_ref2, ctx, onComment, onChompKeep) {\n  var comment = _ref2.comment,\n      type = _ref2.type,\n      value = _ref2.value;\n\n  // 1. Block can't end in whitespace unless the last line is non-empty.\n  // 2. Strings consisting of only whitespace are best rendered explicitly.\n  if (/\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  var indent = ctx.indent || (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n  var indentSize = indent ? '2' : '1'; // root is at -1\n\n  var literal = type === Type.BLOCK_FOLDED ? false : type === Type.BLOCK_LITERAL ? true : !lineLengthOverLimit(value, strOptions.fold.lineWidth, indent.length);\n  var header = literal ? '|' : '>';\n  if (!value) return header + '\\n';\n  var wsStart = '';\n  var wsEnd = '';\n  value = value.replace(/[\\n\\t ]*$/, function (ws) {\n    var n = ws.indexOf('\\n');\n\n    if (n === -1) {\n      header += '-'; // strip\n    } else if (value === ws || n !== ws.length - 1) {\n      header += '+'; // keep\n\n      if (onChompKeep) onChompKeep();\n    }\n\n    wsEnd = ws.replace(/\\n$/, '');\n    return '';\n  }).replace(/^[\\n ]*/, function (ws) {\n    if (ws.indexOf(' ') !== -1) header += indentSize;\n    var m = ws.match(/ +$/);\n\n    if (m) {\n      wsStart = ws.slice(0, -m[0].length);\n      return m[0];\n    } else {\n      wsStart = ws;\n      return '';\n    }\n  });\n  if (wsEnd) wsEnd = wsEnd.replace(/\\n+(?!\\n|$)/g, \"$&\".concat(indent));\n  if (wsStart) wsStart = wsStart.replace(/\\n+/g, \"$&\".concat(indent));\n\n  if (comment) {\n    header += ' #' + comment.replace(/ ?[\\r\\n]+/g, ' ');\n    if (onComment) onComment();\n  }\n\n  if (!value) return \"\".concat(header).concat(indentSize, \"\\n\").concat(indent).concat(wsEnd);\n\n  if (literal) {\n    value = value.replace(/\\n+/g, \"$&\".concat(indent));\n    return \"\".concat(header, \"\\n\").concat(indent).concat(wsStart).concat(value).concat(wsEnd);\n  }\n\n  value = value.replace(/\\n+/g, '\\n$&').replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n  //         ^ ind.line  ^ empty     ^ capture next empty lines only at end of indent\n  .replace(/\\n+/g, \"$&\".concat(indent));\n  var body = foldFlowLines(\"\".concat(wsStart).concat(value).concat(wsEnd), indent, FOLD_BLOCK, strOptions.fold);\n  return \"\".concat(header, \"\\n\").concat(indent).concat(body);\n}\n\nfunction plainString(item, ctx, onComment, onChompKeep) {\n  var comment = item.comment,\n      type = item.type,\n      value = item.value;\n  var actualString = ctx.actualString,\n      implicitKey = ctx.implicitKey,\n      indent = ctx.indent,\n      inFlow = ctx.inFlow;\n\n  if (implicitKey && /[\\n[\\]{},]/.test(value) || inFlow && /[[\\]{},]/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  if (!value || /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n    // not allowed:\n    // - empty string, '-' or '?'\n    // - start with an indicator character (except [?:-]) or /[?-] /\n    // - '\\n ', ': ' or ' \\n' anywhere\n    // - '#' not preceded by a non-space char\n    // - end with ' ' or ':'\n    return implicitKey || inFlow || value.indexOf('\\n') === -1 ? value.indexOf('\"') !== -1 && value.indexOf(\"'\") === -1 ? singleQuotedString(value, ctx) : doubleQuotedString(value, ctx) : blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (!implicitKey && !inFlow && type !== Type.PLAIN && value.indexOf('\\n') !== -1) {\n    // Where allowed & type not set explicitly, prefer block style for multiline strings\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (indent === '' && containsDocumentMarker(value)) {\n    ctx.forceBlockIndent = true;\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  var str = value.replace(/\\n+/g, \"$&\\n\".concat(indent)); // Verify that output will be parsed as a string, as e.g. plain numbers and\n  // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n  // and others in v1.1.\n\n  if (actualString) {\n    var tags = ctx.doc.schema.tags;\n    var resolved = resolveScalar(str, tags, tags.scalarFallback).value;\n    if (typeof resolved !== 'string') return doubleQuotedString(value, ctx);\n  }\n\n  var body = implicitKey ? str : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n\n  if (comment && !inFlow && (body.indexOf('\\n') !== -1 || comment.indexOf('\\n') !== -1)) {\n    if (onComment) onComment();\n    return addCommentBefore(body, indent, comment);\n  }\n\n  return body;\n}\n\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n  var defaultType = strOptions.defaultType;\n  var implicitKey = ctx.implicitKey,\n      inFlow = ctx.inFlow;\n  var _item = item,\n      type = _item.type,\n      value = _item.value;\n\n  if (typeof value !== 'string') {\n    value = String(value);\n    item = Object.assign({}, item, {\n      value: value\n    });\n  }\n\n  var _stringify = function _stringify(_type) {\n    switch (_type) {\n      case Type.BLOCK_FOLDED:\n      case Type.BLOCK_LITERAL:\n        return blockString(item, ctx, onComment, onChompKeep);\n\n      case Type.QUOTE_DOUBLE:\n        return doubleQuotedString(value, ctx);\n\n      case Type.QUOTE_SINGLE:\n        return singleQuotedString(value, ctx);\n\n      case Type.PLAIN:\n        return plainString(item, ctx, onComment, onChompKeep);\n\n      default:\n        return null;\n    }\n  };\n\n  if (type !== Type.QUOTE_DOUBLE && /[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f]/.test(value)) {\n    // force double quotes on control characters\n    type = Type.QUOTE_DOUBLE;\n  } else if ((implicitKey || inFlow) && (type === Type.BLOCK_FOLDED || type === Type.BLOCK_LITERAL)) {\n    // should not happen; blocks are not valid inside flow containers\n    type = Type.QUOTE_DOUBLE;\n  }\n\n  var res = _stringify(type);\n\n  if (res === null) {\n    res = _stringify(defaultType);\n    if (res === null) throw new Error(\"Unsupported default string type \".concat(defaultType));\n  }\n\n  return res;\n}\n\nfunction stringifyNumber(_ref) {\n  var format = _ref.format,\n      minFractionDigits = _ref.minFractionDigits,\n      tag = _ref.tag,\n      value = _ref.value;\n  if (typeof value === 'bigint') return String(value);\n  if (!isFinite(value)) return isNaN(value) ? '.nan' : value < 0 ? '-.inf' : '.inf';\n  var n = JSON.stringify(value);\n\n  if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\\d/.test(n)) {\n    var i = n.indexOf('.');\n\n    if (i < 0) {\n      i = n.length;\n      n += '.';\n    }\n\n    var d = minFractionDigits - (n.length - i - 1);\n\n    while (d-- > 0) {\n      n += '0';\n    }\n  }\n\n  return n;\n}\n\nfunction checkFlowCollectionEnd(errors, cst) {\n  var char, name;\n\n  switch (cst.type) {\n    case Type.FLOW_MAP:\n      char = '}';\n      name = 'flow map';\n      break;\n\n    case Type.FLOW_SEQ:\n      char = ']';\n      name = 'flow sequence';\n      break;\n\n    default:\n      errors.push(new YAMLSemanticError(cst, 'Not a flow collection!?'));\n      return;\n  }\n\n  var lastItem;\n\n  for (var i = cst.items.length - 1; i >= 0; --i) {\n    var item = cst.items[i];\n\n    if (!item || item.type !== Type.COMMENT) {\n      lastItem = item;\n      break;\n    }\n  }\n\n  if (lastItem && lastItem.char !== char) {\n    var msg = \"Expected \".concat(name, \" to end with \").concat(char);\n    var err;\n\n    if (typeof lastItem.offset === 'number') {\n      err = new YAMLSemanticError(cst, msg);\n      err.offset = lastItem.offset + 1;\n    } else {\n      err = new YAMLSemanticError(lastItem, msg);\n      if (lastItem.range && lastItem.range.end) err.offset = lastItem.range.end - lastItem.range.start;\n    }\n\n    errors.push(err);\n  }\n}\nfunction checkFlowCommentSpace(errors, comment) {\n  var prev = comment.context.src[comment.range.start - 1];\n\n  if (prev !== '\\n' && prev !== '\\t' && prev !== ' ') {\n    var msg = 'Comments must be separated from other tokens by white space characters';\n    errors.push(new YAMLSemanticError(comment, msg));\n  }\n}\nfunction getLongKeyError(source, key) {\n  var sk = String(key);\n  var k = sk.substr(0, 8) + '...' + sk.substr(-8);\n  return new YAMLSemanticError(source, \"The \\\"\".concat(k, \"\\\" key is too long\"));\n}\nfunction resolveComments(collection, comments) {\n  var _iterator = _createForOfIteratorHelper(comments),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          afterKey = _step$value.afterKey,\n          before = _step$value.before,\n          comment = _step$value.comment;\n      var item = collection.items[before];\n\n      if (!item) {\n        if (comment !== undefined) {\n          if (collection.comment) collection.comment += '\\n' + comment;else collection.comment = comment;\n        }\n      } else {\n        if (afterKey && item.value) item = item.value;\n\n        if (comment === undefined) {\n          if (afterKey || !item.commentBefore) item.spaceBefore = true;\n        } else {\n          if (item.commentBefore) item.commentBefore += '\\n' + comment;else item.commentBefore = comment;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\n// on error, will return { str: string, errors: Error[] }\nfunction resolveString(doc, node) {\n  var res = node.strValue;\n  if (!res) return '';\n  if (typeof res === 'string') return res;\n  res.errors.forEach(function (error) {\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n  });\n  return res.str;\n}\n\nfunction resolveTagHandle(doc, node) {\n  var _node$tag = node.tag,\n      handle = _node$tag.handle,\n      suffix = _node$tag.suffix;\n  var prefix = doc.tagPrefixes.find(function (p) {\n    return p.handle === handle;\n  });\n\n  if (!prefix) {\n    var dtp = doc.getDefaults().tagPrefixes;\n    if (dtp) prefix = dtp.find(function (p) {\n      return p.handle === handle;\n    });\n    if (!prefix) throw new YAMLSemanticError(node, \"The \".concat(handle, \" tag handle is non-default and was not declared.\"));\n  }\n\n  if (!suffix) throw new YAMLSemanticError(node, \"The \".concat(handle, \" tag has no suffix.\"));\n\n  if (handle === '!' && (doc.version || doc.options.version) === '1.0') {\n    if (suffix[0] === '^') {\n      doc.warnings.push(new YAMLWarning(node, 'YAML 1.0 ^ tag expansion is not supported'));\n      return suffix;\n    }\n\n    if (/[:/]/.test(suffix)) {\n      // word/foo -> tag:word.yaml.org,2002:foo\n      var vocab = suffix.match(/^([a-z0-9-]+)\\/(.*)/i);\n      return vocab ? \"tag:\".concat(vocab[1], \".yaml.org,2002:\").concat(vocab[2]) : \"tag:\".concat(suffix);\n    }\n  }\n\n  return prefix.prefix + decodeURIComponent(suffix);\n}\n\nfunction resolveTagName(doc, node) {\n  var tag = node.tag,\n      type = node.type;\n  var nonSpecific = false;\n\n  if (tag) {\n    var handle = tag.handle,\n        suffix = tag.suffix,\n        verbatim = tag.verbatim;\n\n    if (verbatim) {\n      if (verbatim !== '!' && verbatim !== '!!') return verbatim;\n      var msg = \"Verbatim tags aren't resolved, so \".concat(verbatim, \" is invalid.\");\n      doc.errors.push(new YAMLSemanticError(node, msg));\n    } else if (handle === '!' && !suffix) {\n      nonSpecific = true;\n    } else {\n      try {\n        return resolveTagHandle(doc, node);\n      } catch (error) {\n        doc.errors.push(error);\n      }\n    }\n  }\n\n  switch (type) {\n    case Type.BLOCK_FOLDED:\n    case Type.BLOCK_LITERAL:\n    case Type.QUOTE_DOUBLE:\n    case Type.QUOTE_SINGLE:\n      return defaultTags.STR;\n\n    case Type.FLOW_MAP:\n    case Type.MAP:\n      return defaultTags.MAP;\n\n    case Type.FLOW_SEQ:\n    case Type.SEQ:\n      return defaultTags.SEQ;\n\n    case Type.PLAIN:\n      return nonSpecific ? defaultTags.STR : null;\n\n    default:\n      return null;\n  }\n}\n\nfunction resolveByTagName(doc, node, tagName) {\n  var tags = doc.schema.tags;\n  var matchWithTest = [];\n\n  var _iterator = _createForOfIteratorHelper(tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tag = _step.value;\n\n      if (tag.tag === tagName) {\n        if (tag.test) matchWithTest.push(tag);else {\n          var res = tag.resolve(doc, node);\n          return res instanceof Collection ? res : new Scalar(res);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var str = resolveString(doc, node);\n  if (typeof str === 'string' && matchWithTest.length > 0) return resolveScalar(str, matchWithTest, tags.scalarFallback);\n  return null;\n}\n\nfunction getFallbackTagName(_ref) {\n  var type = _ref.type;\n\n  switch (type) {\n    case Type.FLOW_MAP:\n    case Type.MAP:\n      return defaultTags.MAP;\n\n    case Type.FLOW_SEQ:\n    case Type.SEQ:\n      return defaultTags.SEQ;\n\n    default:\n      return defaultTags.STR;\n  }\n}\n\nfunction resolveTag(doc, node, tagName) {\n  try {\n    var res = resolveByTagName(doc, node, tagName);\n\n    if (res) {\n      if (tagName && node.tag) res.tag = tagName;\n      return res;\n    }\n  } catch (error) {\n    /* istanbul ignore if */\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n    return null;\n  }\n\n  try {\n    var fallback = getFallbackTagName(node);\n    if (!fallback) throw new Error(\"The tag \".concat(tagName, \" is unavailable\"));\n    var msg = \"The tag \".concat(tagName, \" is unavailable, falling back to \").concat(fallback);\n    doc.warnings.push(new YAMLWarning(node, msg));\n\n    var _res = resolveByTagName(doc, node, fallback);\n\n    _res.tag = tagName;\n    return _res;\n  } catch (error) {\n    var refError = new YAMLReferenceError(node, error.message);\n    refError.stack = error.stack;\n    doc.errors.push(refError);\n    return null;\n  }\n}\n\nvar isCollectionItem = function isCollectionItem(node) {\n  if (!node) return false;\n  var type = node.type;\n  return type === Type.MAP_KEY || type === Type.MAP_VALUE || type === Type.SEQ_ITEM;\n};\n\nfunction resolveNodeProps(errors, node) {\n  var comments = {\n    before: [],\n    after: []\n  };\n  var hasAnchor = false;\n  var hasTag = false;\n  var props = isCollectionItem(node.context.parent) ? node.context.parent.props.concat(node.props) : node.props;\n\n  var _iterator = _createForOfIteratorHelper(props),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _step.value,\n          start = _step$value.start,\n          end = _step$value.end;\n\n      switch (node.context.src[start]) {\n        case Char.COMMENT:\n          {\n            if (!node.commentHasRequiredWhitespace(start)) {\n              var msg = 'Comments must be separated from other tokens by white space characters';\n              errors.push(new YAMLSemanticError(node, msg));\n            }\n\n            var header = node.header,\n                valueRange = node.valueRange;\n            var cc = valueRange && (start > valueRange.start || header && start > header.start) ? comments.after : comments.before;\n            cc.push(node.context.src.slice(start + 1, end));\n            break;\n          }\n        // Actual anchor & tag resolution is handled by schema, here we just complain\n\n        case Char.ANCHOR:\n          if (hasAnchor) {\n            var _msg = 'A node can have at most one anchor';\n            errors.push(new YAMLSemanticError(node, _msg));\n          }\n\n          hasAnchor = true;\n          break;\n\n        case Char.TAG:\n          if (hasTag) {\n            var _msg2 = 'A node can have at most one tag';\n            errors.push(new YAMLSemanticError(node, _msg2));\n          }\n\n          hasTag = true;\n          break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    comments: comments,\n    hasAnchor: hasAnchor,\n    hasTag: hasTag\n  };\n}\n\nfunction resolveNodeValue(doc, node) {\n  var anchors = doc.anchors,\n      errors = doc.errors,\n      schema = doc.schema;\n\n  if (node.type === Type.ALIAS) {\n    var name = node.rawValue;\n    var src = anchors.getNode(name);\n\n    if (!src) {\n      var msg = \"Aliased anchor not found: \".concat(name);\n      errors.push(new YAMLReferenceError(node, msg));\n      return null;\n    } // Lazy resolution for circular references\n\n\n    var res = new Alias(src);\n\n    anchors._cstAliases.push(res);\n\n    return res;\n  }\n\n  var tagName = resolveTagName(doc, node);\n  if (tagName) return resolveTag(doc, node, tagName);\n\n  if (node.type !== Type.PLAIN) {\n    var _msg3 = \"Failed to resolve \".concat(node.type, \" node here\");\n\n    errors.push(new YAMLSyntaxError(node, _msg3));\n    return null;\n  }\n\n  try {\n    var str = resolveString(doc, node);\n    return resolveScalar(str, schema.tags, schema.tags.scalarFallback);\n  } catch (error) {\n    if (!error.source) error.source = node;\n    errors.push(error);\n    return null;\n  }\n} // sets node.resolved on success\n\n\nfunction resolveNode(doc, node) {\n  if (!node) return null;\n  if (node.error) doc.errors.push(node.error);\n\n  var _resolveNodeProps = resolveNodeProps(doc.errors, node),\n      comments = _resolveNodeProps.comments,\n      hasAnchor = _resolveNodeProps.hasAnchor,\n      hasTag = _resolveNodeProps.hasTag;\n\n  if (hasAnchor) {\n    var anchors = doc.anchors;\n    var name = node.anchor;\n    var prev = anchors.getNode(name); // At this point, aliases for any preceding node with the same anchor\n    // name have already been resolved, so it may safely be renamed.\n\n    if (prev) anchors.map[anchors.newName(name)] = prev; // During parsing, we need to store the CST node in anchors.map as\n    // anchors need to be available during resolution to allow for\n    // circular references.\n\n    anchors.map[name] = node;\n  }\n\n  if (node.type === Type.ALIAS && (hasAnchor || hasTag)) {\n    var msg = 'An alias node must not specify any properties';\n    doc.errors.push(new YAMLSemanticError(node, msg));\n  }\n\n  var res = resolveNodeValue(doc, node);\n\n  if (res) {\n    res.range = [node.range.start, node.range.end];\n    if (doc.options.keepCstNodes) res.cstNode = node;\n    if (doc.options.keepNodeTypes) res.type = node.type;\n    var cb = comments.before.join('\\n');\n\n    if (cb) {\n      res.commentBefore = res.commentBefore ? \"\".concat(res.commentBefore, \"\\n\").concat(cb) : cb;\n    }\n\n    var ca = comments.after.join('\\n');\n    if (ca) res.comment = res.comment ? \"\".concat(res.comment, \"\\n\").concat(ca) : ca;\n  }\n\n  return node.resolved = res;\n}\n\nfunction resolveMap(doc, cst) {\n  if (cst.type !== Type.MAP && cst.type !== Type.FLOW_MAP) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a mapping\");\n    doc.errors.push(new YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === Type.FLOW_MAP ? resolveFlowMapItems(doc, cst) : resolveBlockMapItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var map = new YAMLMap();\n  map.items = items;\n  resolveComments(map, comments);\n  var hasCollectionKey = false;\n\n  for (var i = 0; i < items.length; ++i) {\n    var iKey = items[i].key;\n    if (iKey instanceof Collection) hasCollectionKey = true;\n\n    if (doc.schema.merge && iKey && iKey.value === MERGE_KEY) {\n      items[i] = new Merge(items[i]);\n      var sources = items[i].value.items;\n      var error = null;\n      sources.some(function (node) {\n        if (node instanceof Alias) {\n          // During parsing, alias sources are CST nodes; to account for\n          // circular references their resolved values can't be used here.\n          var type = node.source.type;\n          if (type === Type.MAP || type === Type.FLOW_MAP) return false;\n          return error = 'Merge nodes aliases can only point to maps';\n        }\n\n        return error = 'Merge nodes can only have Alias nodes as values';\n      });\n      if (error) doc.errors.push(new YAMLSemanticError(cst, error));\n    } else {\n      for (var j = i + 1; j < items.length; ++j) {\n        var jKey = items[j].key;\n\n        if (iKey === jKey || iKey && jKey && Object.prototype.hasOwnProperty.call(iKey, 'value') && iKey.value === jKey.value) {\n          var _msg = \"Map keys must be unique; \\\"\".concat(iKey, \"\\\" is repeated\");\n\n          doc.errors.push(new YAMLSemanticError(cst, _msg));\n          break;\n        }\n      }\n    }\n  }\n\n  if (hasCollectionKey && !doc.options.mapAsMap) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = map;\n  return map;\n}\n\nvar valueHasPairComment = function valueHasPairComment(_ref2) {\n  var _ref2$context = _ref2.context,\n      lineStart = _ref2$context.lineStart,\n      node = _ref2$context.node,\n      src = _ref2$context.src,\n      props = _ref2.props;\n  if (props.length === 0) return false;\n  var start = props[0].start;\n  if (node && start > node.valueRange.start) return false;\n  if (src[start] !== Char.COMMENT) return false;\n\n  for (var i = lineStart; i < start; ++i) {\n    if (src[i] === '\\n') return false;\n  }\n\n  return true;\n};\n\nfunction resolvePairComment(item, pair) {\n  if (!valueHasPairComment(item)) return;\n  var comment = item.getPropValue(0, Char.COMMENT, true);\n  var found = false;\n  var cb = pair.value.commentBefore;\n\n  if (cb && cb.startsWith(comment)) {\n    pair.value.commentBefore = cb.substr(comment.length + 1);\n    found = true;\n  } else {\n    var cc = pair.value.comment;\n\n    if (!item.node && cc && cc.startsWith(comment)) {\n      pair.value.comment = cc.substr(comment.length + 1);\n      found = true;\n    }\n  }\n\n  if (found) pair.comment = comment;\n}\n\nfunction resolveBlockMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var keyStart = null;\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case Type.BLANK_LINE:\n        comments.push({\n          afterKey: !!key,\n          before: items.length\n        });\n        break;\n\n      case Type.COMMENT:\n        comments.push({\n          afterKey: !!key,\n          before: items.length,\n          comment: item.comment\n        });\n        break;\n\n      case Type.MAP_KEY:\n        if (key !== undefined) items.push(new Pair(key));\n        if (item.error) doc.errors.push(item.error);\n        key = resolveNode(doc, item.node);\n        keyStart = null;\n        break;\n\n      case Type.MAP_VALUE:\n        {\n          if (key === undefined) key = null;\n          if (item.error) doc.errors.push(item.error);\n\n          if (!item.context.atLineStart && item.node && item.node.type === Type.MAP && !item.node.context.atLineStart) {\n            var msg = 'Nested mappings are not allowed in compact mappings';\n            doc.errors.push(new YAMLSemanticError(item.node, msg));\n          }\n\n          var valueNode = item.node;\n\n          if (!valueNode && item.props.length > 0) {\n            // Comments on an empty mapping value need to be preserved, so we\n            // need to construct a minimal empty node here to use instead of the\n            // missing `item.node`. -- eemeli/yaml#19\n            valueNode = new PlainValue(Type.PLAIN, []);\n            valueNode.context = {\n              parent: item,\n              src: item.context.src\n            };\n            var pos = item.range.start + 1;\n            valueNode.range = {\n              start: pos,\n              end: pos\n            };\n            valueNode.valueRange = {\n              start: pos,\n              end: pos\n            };\n\n            if (typeof item.range.origStart === 'number') {\n              var origPos = item.range.origStart + 1;\n              valueNode.range.origStart = valueNode.range.origEnd = origPos;\n              valueNode.valueRange.origStart = valueNode.valueRange.origEnd = origPos;\n            }\n          }\n\n          var pair = new Pair(key, resolveNode(doc, valueNode));\n          resolvePairComment(item, pair);\n          items.push(pair);\n\n          if (key && typeof keyStart === 'number') {\n            if (item.range.start > keyStart + 1024) doc.errors.push(getLongKeyError(cst, key));\n          }\n\n          key = undefined;\n          keyStart = null;\n        }\n        break;\n\n      default:\n        if (key !== undefined) items.push(new Pair(key));\n        key = resolveNode(doc, item);\n        keyStart = item.range.start;\n        if (item.error) doc.errors.push(item.error);\n\n        next: for (var j = i + 1;; ++j) {\n          var nextItem = cst.items[j];\n\n          switch (nextItem && nextItem.type) {\n            case Type.BLANK_LINE:\n            case Type.COMMENT:\n              continue next;\n\n            case Type.MAP_VALUE:\n              break next;\n\n            default:\n              {\n                var _msg2 = 'Implicit map keys need to be followed by map values';\n                doc.errors.push(new YAMLSemanticError(item, _msg2));\n                break next;\n              }\n          }\n        }\n\n        if (item.valueRangeContainsNewline) {\n          var _msg3 = 'Implicit map keys need to be on a single line';\n          doc.errors.push(new YAMLSemanticError(item, _msg3));\n        }\n\n    }\n  }\n\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var explicitKey = false;\n  var next = '{';\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char === '?' && key === undefined && !explicitKey) {\n        explicitKey = true;\n        next = ':';\n        continue;\n      }\n\n      if (char === ':') {\n        if (key === undefined) key = null;\n\n        if (next === ':') {\n          next = ',';\n          continue;\n        }\n      } else {\n        if (explicitKey) {\n          if (key === undefined && char !== ',') key = null;\n          explicitKey = false;\n        }\n\n        if (key !== undefined) {\n          items.push(new Pair(key));\n          key = undefined;\n\n          if (char === ',') {\n            next = ':';\n            continue;\n          }\n        }\n      }\n\n      if (char === '}') {\n        if (i === cst.items.length - 1) continue;\n      } else if (char === next) {\n        next = ':';\n        continue;\n      }\n\n      var msg = \"Flow map contains an unexpected \".concat(char);\n      var err = new YAMLSyntaxError(cst, msg);\n      err.offset = offset;\n      doc.errors.push(err);\n    } else if (item.type === Type.BLANK_LINE) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length\n      });\n    } else if (item.type === Type.COMMENT) {\n      checkFlowCommentSpace(doc.errors, item);\n      comments.push({\n        afterKey: !!key,\n        before: items.length,\n        comment: item.comment\n      });\n    } else if (key === undefined) {\n      if (next === ',') doc.errors.push(new YAMLSemanticError(item, 'Separator , missing in flow map'));\n      key = resolveNode(doc, item);\n    } else {\n      if (next !== ',') doc.errors.push(new YAMLSemanticError(item, 'Indicator : missing in flow map entry'));\n      items.push(new Pair(key, resolveNode(doc, item)));\n      key = undefined;\n      explicitKey = false;\n    }\n  }\n\n  checkFlowCollectionEnd(doc.errors, cst);\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveSeq(doc, cst) {\n  if (cst.type !== Type.SEQ && cst.type !== Type.FLOW_SEQ) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a sequence\");\n    doc.errors.push(new YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === Type.FLOW_SEQ ? resolveFlowSeqItems(doc, cst) : resolveBlockSeqItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var seq = new YAMLSeq();\n  seq.items = items;\n  resolveComments(seq, comments);\n\n  if (!doc.options.mapAsMap && items.some(function (it) {\n    return it instanceof Pair && it.key instanceof Collection;\n  })) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = seq;\n  return seq;\n}\n\nfunction resolveBlockSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case Type.BLANK_LINE:\n        comments.push({\n          before: items.length\n        });\n        break;\n\n      case Type.COMMENT:\n        comments.push({\n          comment: item.comment,\n          before: items.length\n        });\n        break;\n\n      case Type.SEQ_ITEM:\n        if (item.error) doc.errors.push(item.error);\n        items.push(resolveNode(doc, item.node));\n\n        if (item.hasProps) {\n          var msg = 'Sequence items cannot have tags or anchors before the - indicator';\n          doc.errors.push(new YAMLSemanticError(item, msg));\n        }\n\n        break;\n\n      default:\n        if (item.error) doc.errors.push(item.error);\n        doc.errors.push(new YAMLSyntaxError(item, \"Unexpected \".concat(item.type, \" node in sequence\")));\n    }\n  }\n\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var explicitKey = false;\n  var key = undefined;\n  var keyStart = null;\n  var next = '[';\n  var prevItem = null;\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char !== ':' && (explicitKey || key !== undefined)) {\n        if (explicitKey && key === undefined) key = next ? items.pop() : null;\n        items.push(new Pair(key));\n        explicitKey = false;\n        key = undefined;\n        keyStart = null;\n      }\n\n      if (char === next) {\n        next = null;\n      } else if (!next && char === '?') {\n        explicitKey = true;\n      } else if (next !== '[' && char === ':' && key === undefined) {\n        if (next === ',') {\n          key = items.pop();\n\n          if (key instanceof Pair) {\n            var msg = 'Chaining flow sequence pairs is invalid';\n            var err = new YAMLSemanticError(cst, msg);\n            err.offset = offset;\n            doc.errors.push(err);\n          }\n\n          if (!explicitKey && typeof keyStart === 'number') {\n            var keyEnd = item.range ? item.range.start : item.offset;\n            if (keyEnd > keyStart + 1024) doc.errors.push(getLongKeyError(cst, key));\n            var src = prevItem.context.src;\n\n            for (var _i = keyStart; _i < keyEnd; ++_i) {\n              if (src[_i] === '\\n') {\n                var _msg = 'Implicit keys of flow sequence pairs need to be on a single line';\n                doc.errors.push(new YAMLSemanticError(prevItem, _msg));\n                break;\n              }\n            }\n          }\n        } else {\n          key = null;\n        }\n\n        keyStart = null;\n        explicitKey = false;\n        next = null;\n      } else if (next === '[' || char !== ']' || i < cst.items.length - 1) {\n        var _msg2 = \"Flow sequence contains an unexpected \".concat(char);\n\n        var _err = new YAMLSyntaxError(cst, _msg2);\n\n        _err.offset = offset;\n        doc.errors.push(_err);\n      }\n    } else if (item.type === Type.BLANK_LINE) {\n      comments.push({\n        before: items.length\n      });\n    } else if (item.type === Type.COMMENT) {\n      checkFlowCommentSpace(doc.errors, item);\n      comments.push({\n        comment: item.comment,\n        before: items.length\n      });\n    } else {\n      if (next) {\n        var _msg3 = \"Expected a \".concat(next, \" in flow sequence\");\n\n        doc.errors.push(new YAMLSemanticError(item, _msg3));\n      }\n\n      var value = resolveNode(doc, item);\n\n      if (key === undefined) {\n        items.push(value);\n        prevItem = item;\n      } else {\n        items.push(new Pair(key, value));\n        key = undefined;\n      }\n\n      keyStart = item.range.start;\n      next = ',';\n    }\n  }\n\n  checkFlowCollectionEnd(doc.errors, cst);\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nexport { Alias as A, Collection as C, Merge as M, Node as N, Pair as P, Scalar as S, YAMLSeq as Y, boolOptions as a, binaryOptions as b, stringifyString as c, YAMLMap as d, isEmptyPath as e, addComment as f, resolveMap as g, resolveSeq as h, intOptions as i, resolveString as j, stringifyNumber as k, findPair as l, nullOptions as n, resolveNode as r, strOptions as s, toJSON as t };\n", "import { o as YAMLReferenceError, T as Type, g as YAMLSemanticError, _ as _createForOfIteratorHelper, e as _defineProperty, j as _inherits, k as _createSuper, c as _classCallCheck, p as _assertThisInitialized, b as _createClass, a as _typeof, l as _get, m as _getPrototypeOf } from './PlainValue-b8036b75.js';\nimport { j as resolveString, b as binaryOptions, c as stringifyString, h as resolveSeq, P as Pair, d as YAMLMap, Y as YAMLSeq, t as toJSON, S as Scalar, l as findPair, g as resolveMap, k as stringifyNumber } from './resolveSeq-492ab440.js';\n\n/* global atob, btoa, Buffer */\nvar binary = {\n  identify: function identify(value) {\n    return value instanceof Uint8Array;\n  },\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: function resolve(doc, node) {\n    var src = resolveString(doc, node);\n\n    if (typeof Buffer === 'function') {\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      // On IE 11, atob() can't handle newlines\n      var str = atob(src.replace(/[\\n\\r]/g, ''));\n      var buffer = new Uint8Array(str.length);\n\n      for (var i = 0; i < str.length; ++i) {\n        buffer[i] = str.charCodeAt(i);\n      }\n\n      return buffer;\n    } else {\n      var msg = 'This environment does not support reading binary tags; either Buffer or atob is required';\n      doc.errors.push(new YAMLReferenceError(node, msg));\n      return null;\n    }\n  },\n  options: binaryOptions,\n  stringify: function stringify(_ref, ctx, onComment, onChompKeep) {\n    var comment = _ref.comment,\n        type = _ref.type,\n        value = _ref.value;\n    var src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      var s = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        s += String.fromCharCode(value[i]);\n      }\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = binaryOptions.defaultType;\n\n    if (type === Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      var lineWidth = binaryOptions.lineWidth;\n      var n = Math.ceil(src.length / lineWidth);\n      var lines = new Array(n);\n\n      for (var _i = 0, o = 0; _i < n; ++_i, o += lineWidth) {\n        lines[_i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return stringifyString({\n      comment: comment,\n      type: type,\n      value: value\n    }, ctx, onComment, onChompKeep);\n  }\n};\n\nfunction parsePairs(doc, cst) {\n  var seq = resolveSeq(doc, cst);\n\n  for (var i = 0; i < seq.items.length; ++i) {\n    var item = seq.items[i];\n    if (item instanceof Pair) continue;else if (item instanceof YAMLMap) {\n      if (item.items.length > 1) {\n        var msg = 'Each pair must have its own sequence indicator';\n        throw new YAMLSemanticError(cst, msg);\n      }\n\n      var pair = item.items[0] || new Pair();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? \"\".concat(item.commentBefore, \"\\n\").concat(pair.commentBefore) : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? \"\".concat(item.comment, \"\\n\").concat(pair.comment) : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof Pair ? item : new Pair(item);\n  }\n\n  return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n  var pairs = new YAMLSeq(schema);\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var it = _step.value;\n      var key = void 0,\n          value = void 0;\n\n      if (Array.isArray(it)) {\n        if (it.length === 2) {\n          key = it[0];\n          value = it[1];\n        } else throw new TypeError(\"Expected [key, value] tuple: \".concat(it));\n      } else if (it && it instanceof Object) {\n        var keys = Object.keys(it);\n\n        if (keys.length === 1) {\n          key = keys[0];\n          value = it[key];\n        } else throw new TypeError(\"Expected { key: value } tuple: \".concat(it));\n      } else {\n        key = it;\n      }\n\n      var pair = schema.createPair(key, value, ctx);\n      pairs.items.push(pair);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return pairs;\n}\nvar pairs = {\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: parsePairs,\n  createNode: createPairs\n};\n\nvar YAMLOMap = /*#__PURE__*/function (_YAMLSeq) {\n  _inherits(YAMLOMap, _YAMLSeq);\n\n  var _super = _createSuper(YAMLOMap);\n\n  function YAMLOMap() {\n    var _this;\n\n    _classCallCheck(this, YAMLOMap);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"add\", YAMLMap.prototype.add.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"delete\", YAMLMap.prototype.delete.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"get\", YAMLMap.prototype.get.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"has\", YAMLMap.prototype.has.bind(_assertThisInitialized(_this)));\n\n    _defineProperty(_assertThisInitialized(_this), \"set\", YAMLMap.prototype.set.bind(_assertThisInitialized(_this)));\n\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n\n  _createClass(YAMLOMap, [{\n    key: \"toJSON\",\n    value: function toJSON$1(_, ctx) {\n      var map = new Map();\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n      var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n          var key = void 0,\n              value = void 0;\n\n          if (pair instanceof Pair) {\n            key = toJSON(pair.key, '', ctx);\n            value = toJSON(pair.value, key, ctx);\n          } else {\n            key = toJSON(pair, '', ctx);\n          }\n\n          if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n          map.set(key, value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return map;\n    }\n  }]);\n\n  return YAMLOMap;\n}(YAMLSeq);\n\n_defineProperty(YAMLOMap, \"tag\", 'tag:yaml.org,2002:omap');\n\nfunction parseOMap(doc, cst) {\n  var pairs = parsePairs(doc, cst);\n  var seenKeys = [];\n\n  var _iterator2 = _createForOfIteratorHelper(pairs.items),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var key = _step2.value.key;\n\n      if (key instanceof Scalar) {\n        if (seenKeys.includes(key.value)) {\n          var msg = 'Ordered maps must not include duplicate keys';\n          throw new YAMLSemanticError(cst, msg);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  var pairs = createPairs(schema, iterable, ctx);\n  var omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nvar omap = {\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: parseOMap,\n  createNode: createOMap\n};\n\nvar YAMLSet = /*#__PURE__*/function (_YAMLMap) {\n  _inherits(YAMLSet, _YAMLMap);\n\n  var _super = _createSuper(YAMLSet);\n\n  function YAMLSet() {\n    var _this;\n\n    _classCallCheck(this, YAMLSet);\n\n    _this = _super.call(this);\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n\n  _createClass(YAMLSet, [{\n    key: \"add\",\n    value: function add(key) {\n      var pair = key instanceof Pair ? key : new Pair(key);\n      var prev = findPair(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepPair) {\n      var pair = findPair(this.items, key);\n      return !keepPair && pair instanceof Pair ? pair.key instanceof Scalar ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof value !== 'boolean') throw new Error(\"Expected boolean value for set(key, value) in a YAML set, not \".concat(_typeof(value)));\n      var prev = findPair(this.items, key);\n\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new Pair(key));\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      return _get(_getPrototypeOf(YAMLSet.prototype), \"toJSON\", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues()) return _get(_getPrototypeOf(YAMLSet.prototype), \"toString\", this).call(this, ctx, onComment, onChompKeep);else throw new Error('Set items must all have null values');\n    }\n  }]);\n\n  return YAMLSet;\n}(YAMLMap);\n\n_defineProperty(YAMLSet, \"tag\", 'tag:yaml.org,2002:set');\n\nfunction parseSet(doc, cst) {\n  var map = resolveMap(doc, cst);\n  if (!map.hasAllNullValues()) throw new YAMLSemanticError(cst, 'Set items must all have null values');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  var set = new YAMLSet();\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      set.items.push(schema.createPair(value, null, ctx));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return set;\n}\n\nvar set = {\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  resolve: parseSet,\n  createNode: createSet\n};\n\nvar parseSexagesimal = function parseSexagesimal(sign, parts) {\n  var n = parts.split(':').reduce(function (n, p) {\n    return n * 60 + Number(p);\n  }, 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nvar stringifySexagesimal = function stringifySexagesimal(_ref) {\n  var value = _ref.value;\n  if (isNaN(value) || !isFinite(value)) return stringifyNumber(value);\n  var sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  var parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(function (n) {\n    return n < 10 ? '0' + String(n) : String(n);\n  }).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nvar intTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar floatTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nvar timestamp = {\n  identify: function identify(value) {\n    return value instanceof Date;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      var d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '');\n  }\n};\n\n/* global console, process, YAML_SILENCE_DEPRECATION_WARNINGS, YAML_SILENCE_WARNINGS */\nfunction shouldWarn(deprecation) {\n  var env = typeof process !== 'undefined' && process.env || {};\n\n  if (deprecation) {\n    if (typeof YAML_SILENCE_DEPRECATION_WARNINGS !== 'undefined') return !YAML_SILENCE_DEPRECATION_WARNINGS;\n    return !env.YAML_SILENCE_DEPRECATION_WARNINGS;\n  }\n\n  if (typeof YAML_SILENCE_WARNINGS !== 'undefined') return !YAML_SILENCE_WARNINGS;\n  return !env.YAML_SILENCE_WARNINGS;\n}\n\nfunction warn(warning, type) {\n  if (shouldWarn(false)) {\n    var emit = typeof process !== 'undefined' && process.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n    // https://github.com/facebook/jest/issues/2549\n\n    if (emit) emit(warning, type);else {\n      // eslint-disable-next-line no-console\n      console.warn(type ? \"\".concat(type, \": \").concat(warning) : warning);\n    }\n  }\n}\nfunction warnFileDeprecation(filename) {\n  if (shouldWarn(true)) {\n    var path = filename.replace(/.*yaml[/\\\\]/i, '').replace(/\\.js$/, '').replace(/\\\\/g, '/');\n    warn(\"The endpoint 'yaml/\".concat(path, \"' will be removed in a future release.\"), 'DeprecationWarning');\n  }\n}\nvar warned = {};\nfunction warnOptionDeprecation(name, alternative) {\n  if (!warned[name] && shouldWarn(true)) {\n    warned[name] = true;\n    var msg = \"The option '\".concat(name, \"' will be removed in a future release\");\n    msg += alternative ? \", use '\".concat(alternative, \"' instead.\") : '.';\n    warn(msg, 'DeprecationWarning');\n  }\n}\n\nexport { warnOptionDeprecation as a, binary as b, warnFileDeprecation as c, floatTime as f, intTime as i, omap as o, pairs as p, set as s, timestamp as t, warn as w };\n", "import { _ as _createForOfIteratorHelper, h as _slicedToArray, a as _typeof, b as _createClass, e as _defineProperty, c as _classCallCheck, d as defaultTagPrefix, n as defaultTags } from './PlainValue-b8036b75.js';\nimport { d as YAMLMap, g as resolveMap, Y as YAMLSeq, h as resolveSeq, j as resolveString, c as stringifyString, s as strOptions, S as Scalar, n as nullOptions, a as boolOptions, i as intOptions, k as stringifyNumber, N as Node, A as Alias, P as Pair } from './resolveSeq-492ab440.js';\nimport { b as binary, o as omap, p as pairs, s as set, i as intTime, f as floatTime, t as timestamp, a as warnOptionDeprecation } from './warnings-df54cb69.js';\n\nfunction createMap(schema, obj, ctx) {\n  var map = new YAMLMap(schema);\n\n  if (obj instanceof Map) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        map.items.push(schema.createPair(key, value, ctx));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (obj && _typeof(obj) === 'object') {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      map.items.push(schema.createPair(_key, obj[_key], ctx));\n    }\n  }\n\n  if (typeof schema.sortMapEntries === 'function') {\n    map.items.sort(schema.sortMapEntries);\n  }\n\n  return map;\n}\n\nvar map = {\n  createNode: createMap,\n  default: true,\n  nodeClass: YAMLMap,\n  tag: 'tag:yaml.org,2002:map',\n  resolve: resolveMap\n};\n\nfunction createSeq(schema, obj, ctx) {\n  var seq = new YAMLSeq(schema);\n\n  if (obj && obj[Symbol.iterator]) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var it = _step.value;\n        var v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n        seq.items.push(v);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return seq;\n}\n\nvar seq = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: YAMLSeq,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve: resolveSeq\n};\n\nvar string = {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: function stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return stringifyString(item, ctx, onComment, onChompKeep);\n  },\n  options: strOptions\n};\n\nvar failsafe = [map, seq, string];\n\n/* global BigInt */\n\nvar intIdentify$2 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar intResolve$1 = function intResolve(src, part, radix) {\n  return intOptions.asBigInt ? BigInt(src) : parseInt(part, radix);\n};\n\nfunction intStringify$1(node, radix, prefix) {\n  var value = node.value;\n  if (intIdentify$2(value) && value >= 0) return prefix + value.toString(radix);\n  return stringifyNumber(node);\n}\n\nvar nullObj = {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n};\nvar boolObj = {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: function resolve(str) {\n    return str[0] === 't' || str[0] === 'T';\n  },\n  options: boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? boolOptions.trueStr : boolOptions.falseStr;\n  }\n};\nvar octObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: function resolve(str, oct) {\n    return intResolve$1(str, oct, 8);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 8, '0o');\n  }\n};\nvar intObj = {\n  identify: intIdentify$2,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return intResolve$1(str, str, 10);\n  },\n  options: intOptions,\n  stringify: stringifyNumber\n};\nvar hexObj = {\n  identify: function identify(value) {\n    return intIdentify$2(value) && value >= 0;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: function resolve(str, hex) {\n    return intResolve$1(str, hex, 16);\n  },\n  options: intOptions,\n  stringify: function stringify(node) {\n    return intStringify$1(node, 16, '0x');\n  }\n};\nvar nanObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n};\nvar expObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n};\nvar floatObj = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:\\.([0-9]+)|[0-9]+\\.([0-9]*))$/,\n  resolve: function resolve(str, frac1, frac2) {\n    var frac = frac1 || frac2;\n    var node = new Scalar(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n  stringify: stringifyNumber\n};\nvar core = failsafe.concat([nullObj, boolObj, octObj, intObj, hexObj, nanObj, expObj, floatObj]);\n\n/* global BigInt */\n\nvar intIdentify$1 = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nvar stringifyJSON = function stringifyJSON(_ref) {\n  var value = _ref.value;\n  return JSON.stringify(value);\n};\n\nvar json = [map, seq, {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: function resolve() {\n    return null;\n  },\n  stringify: stringifyJSON\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true|false$/,\n  resolve: function resolve(str) {\n    return str === 'true';\n  },\n  stringify: stringifyJSON\n}, {\n  identify: intIdentify$1,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: function resolve(str) {\n    return intOptions.asBigInt ? BigInt(str) : parseInt(str, 10);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return intIdentify$1(value) ? value.toString() : JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: stringifyJSON\n}];\n\njson.scalarFallback = function (str) {\n  throw new SyntaxError(\"Unresolved plain scalar \".concat(JSON.stringify(str)));\n};\n\n/* global BigInt */\n\nvar boolStringify = function boolStringify(_ref) {\n  var value = _ref.value;\n  return value ? boolOptions.trueStr : boolOptions.falseStr;\n};\n\nvar intIdentify = function intIdentify(value) {\n  return typeof value === 'bigint' || Number.isInteger(value);\n};\n\nfunction intResolve(sign, src, radix) {\n  var str = src.replace(/_/g, '');\n\n  if (intOptions.asBigInt) {\n    switch (radix) {\n      case 2:\n        str = \"0b\".concat(str);\n        break;\n\n      case 8:\n        str = \"0o\".concat(str);\n        break;\n\n      case 16:\n        str = \"0x\".concat(str);\n        break;\n    }\n\n    var _n = BigInt(str);\n\n    return sign === '-' ? BigInt(-1) * _n : _n;\n  }\n\n  var n = parseInt(str, radix);\n  return sign === '-' ? -1 * n : n;\n}\n\nfunction intStringify(node, radix, prefix) {\n  var value = node.value;\n\n  if (intIdentify(value)) {\n    var str = value.toString(radix);\n    return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n  }\n\n  return stringifyNumber(node);\n}\n\nvar yaml11 = failsafe.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new Scalar(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: nullOptions,\n  stringify: function stringify() {\n    return nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return true;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return false;\n  },\n  options: boolOptions,\n  stringify: boolStringify\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^([-+]?)0b([0-1_]+)$/,\n  resolve: function resolve(str, sign, bin) {\n    return intResolve(sign, bin, 2);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 2, '0b');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^([-+]?)0([0-7_]+)$/,\n  resolve: function resolve(str, sign, oct) {\n    return intResolve(sign, oct, 8);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 8, '0');\n  }\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^([-+]?)([0-9][0-9_]*)$/,\n  resolve: function resolve(str, sign, abs) {\n    return intResolve(sign, abs, 10);\n  },\n  stringify: stringifyNumber\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^([-+]?)0x([0-9a-fA-F_]+)$/,\n  resolve: function resolve(str, sign, hex) {\n    return intResolve(sign, hex, 16);\n  },\n  stringify: function stringify(node) {\n    return intStringify(node, 16, '0x');\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str.replace(/_/g, ''));\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new Scalar(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      var f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n  stringify: stringifyNumber\n}], binary, omap, pairs, set, intTime, floatTime, timestamp);\n\nvar schemas = {\n  core: core,\n  failsafe: failsafe,\n  json: json,\n  yaml11: yaml11\n};\nvar tags = {\n  binary: binary,\n  bool: boolObj,\n  float: floatObj,\n  floatExp: expObj,\n  floatNaN: nanObj,\n  floatTime: floatTime,\n  int: intObj,\n  intHex: hexObj,\n  intOct: octObj,\n  intTime: intTime,\n  map: map,\n  null: nullObj,\n  omap: omap,\n  pairs: pairs,\n  seq: seq,\n  set: set,\n  timestamp: timestamp\n};\n\nfunction findTagObject(value, tagName, tags) {\n  if (tagName) {\n    var match = tags.filter(function (t) {\n      return t.tag === tagName;\n    });\n    var tagObj = match.find(function (t) {\n      return !t.format;\n    }) || match[0];\n    if (!tagObj) throw new Error(\"Tag \".concat(tagName, \" not found\"));\n    return tagObj;\n  } // TODO: deprecate/remove class check\n\n\n  return tags.find(function (t) {\n    return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;\n  });\n}\n\nfunction createNode(value, tagName, ctx) {\n  if (value instanceof Node) return value;\n  var defaultPrefix = ctx.defaultPrefix,\n      onTagObj = ctx.onTagObj,\n      prevObjects = ctx.prevObjects,\n      schema = ctx.schema,\n      wrapScalars = ctx.wrapScalars;\n  if (tagName && tagName.startsWith('!!')) tagName = defaultPrefix + tagName.slice(2);\n  var tagObj = findTagObject(value, tagName, schema.tags);\n\n  if (!tagObj) {\n    if (typeof value.toJSON === 'function') value = value.toJSON();\n    if (!value || _typeof(value) !== 'object') return wrapScalars ? new Scalar(value) : value;\n    tagObj = value instanceof Map ? map : value[Symbol.iterator] ? seq : map;\n  }\n\n  if (onTagObj) {\n    onTagObj(tagObj);\n    delete ctx.onTagObj;\n  } // Detect duplicate references to the same object & use Alias nodes for all\n  // after first. The `obj` wrapper allows for circular references to resolve.\n\n\n  var obj = {\n    value: undefined,\n    node: undefined\n  };\n\n  if (value && _typeof(value) === 'object' && prevObjects) {\n    var prev = prevObjects.get(value);\n\n    if (prev) {\n      var alias = new Alias(prev); // leaves source dirty; must be cleaned by caller\n\n      ctx.aliasNodes.push(alias); // defined along with prevObjects\n\n      return alias;\n    }\n\n    obj.value = value;\n    prevObjects.set(value, obj);\n  }\n\n  obj.node = tagObj.createNode ? tagObj.createNode(ctx.schema, value, ctx) : wrapScalars ? new Scalar(value) : value;\n  if (tagName && obj.node instanceof Node) obj.node.tag = tagName;\n  return obj.node;\n}\n\nfunction getSchemaTags(schemas, knownTags, customTags, schemaId) {\n  var tags = schemas[schemaId.replace(/\\W/g, '')]; // 'yaml-1.1' -> 'yaml11'\n\n  if (!tags) {\n    var keys = Object.keys(schemas).map(function (key) {\n      return JSON.stringify(key);\n    }).join(', ');\n    throw new Error(\"Unknown schema \\\"\".concat(schemaId, \"\\\"; use one of \").concat(keys));\n  }\n\n  if (Array.isArray(customTags)) {\n    var _iterator = _createForOfIteratorHelper(customTags),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var tag = _step.value;\n        tags = tags.concat(tag);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (typeof customTags === 'function') {\n    tags = customTags(tags.slice());\n  }\n\n  for (var i = 0; i < tags.length; ++i) {\n    var _tag = tags[i];\n\n    if (typeof _tag === 'string') {\n      var tagObj = knownTags[_tag];\n\n      if (!tagObj) {\n        var _keys = Object.keys(knownTags).map(function (key) {\n          return JSON.stringify(key);\n        }).join(', ');\n\n        throw new Error(\"Unknown custom tag \\\"\".concat(_tag, \"\\\"; use one of \").concat(_keys));\n      }\n\n      tags[i] = tagObj;\n    }\n  }\n\n  return tags;\n}\n\nvar sortMapEntriesByKey = function sortMapEntriesByKey(a, b) {\n  return a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\n};\n\nvar Schema = /*#__PURE__*/function () {\n  // TODO: remove in v2\n  // TODO: remove in v2\n  function Schema(_ref) {\n    var customTags = _ref.customTags,\n        merge = _ref.merge,\n        schema = _ref.schema,\n        sortMapEntries = _ref.sortMapEntries,\n        deprecatedCustomTags = _ref.tags;\n\n    _classCallCheck(this, Schema);\n\n    this.merge = !!merge;\n    this.name = schema;\n    this.sortMapEntries = sortMapEntries === true ? sortMapEntriesByKey : sortMapEntries || null;\n    if (!customTags && deprecatedCustomTags) warnOptionDeprecation('tags', 'customTags');\n    this.tags = getSchemaTags(schemas, tags, customTags || deprecatedCustomTags, schema);\n  }\n\n  _createClass(Schema, [{\n    key: \"createNode\",\n    value: function createNode$1(value, wrapScalars, tagName, ctx) {\n      var baseCtx = {\n        defaultPrefix: Schema.defaultPrefix,\n        schema: this,\n        wrapScalars: wrapScalars\n      };\n      var createCtx = ctx ? Object.assign(ctx, baseCtx) : baseCtx;\n      return createNode(value, tagName, createCtx);\n    }\n  }, {\n    key: \"createPair\",\n    value: function createPair(key, value, ctx) {\n      if (!ctx) ctx = {\n        wrapScalars: true\n      };\n      var k = this.createNode(key, ctx.wrapScalars, null, ctx);\n      var v = this.createNode(value, ctx.wrapScalars, null, ctx);\n      return new Pair(k, v);\n    }\n  }]);\n\n  return Schema;\n}();\n\n_defineProperty(Schema, \"defaultPrefix\", defaultTagPrefix);\n\n_defineProperty(Schema, \"defaultTags\", defaultTags);\n\nexport { Schema as S };\n", "import { d as defaultTagPrefix, _ as _createForOfIteratorHelper, a as _typeof, b as _createClass, c as _classCallCheck, e as _defineProperty, Y as YAMLSyntaxError, T as Type, f as YAMLWarning, g as YAMLSemanticError, h as _slicedToArray, i as YAMLError, j as _inherits, k as _createSuper } from './PlainValue-b8036b75.js';\nimport { parse as parse$1 } from './parse-cst.js';\nimport { b as binaryOptions, a as boolOptions, i as intOptions, n as nullOptions, s as strOptions, N as Node, P as Pair, S as Scalar, c as stringifyString, A as Alias, Y as YAMLSeq, d as YAMLMap, M as Merge, C as Collection, r as resolveNode, e as isEmptyPath, t as toJSON, f as addComment } from './resolveSeq-492ab440.js';\nimport { S as Schema } from './Schema-e94716c8.js';\nimport { w as warn } from './warnings-df54cb69.js';\n\nvar defaultOptions = {\n  anchorPrefix: 'a',\n  customTags: null,\n  indent: 2,\n  indentSeq: true,\n  keepCstNodes: false,\n  keepNodeTypes: true,\n  keepBlobsInJSON: true,\n  mapAsMap: false,\n  maxAliasCount: 100,\n  prettyErrors: false,\n  // TODO Set true in v2\n  simpleKeys: false,\n  version: '1.2'\n};\nvar scalarOptions = {\n  get binary() {\n    return binaryOptions;\n  },\n\n  set binary(opt) {\n    Object.assign(binaryOptions, opt);\n  },\n\n  get bool() {\n    return boolOptions;\n  },\n\n  set bool(opt) {\n    Object.assign(boolOptions, opt);\n  },\n\n  get int() {\n    return intOptions;\n  },\n\n  set int(opt) {\n    Object.assign(intOptions, opt);\n  },\n\n  get null() {\n    return nullOptions;\n  },\n\n  set null(opt) {\n    Object.assign(nullOptions, opt);\n  },\n\n  get str() {\n    return strOptions;\n  },\n\n  set str(opt) {\n    Object.assign(strOptions, opt);\n  }\n\n};\nvar documentOptions = {\n  '1.0': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: defaultTagPrefix\n    }, {\n      handle: '!!',\n      prefix: 'tag:private.yaml.org,2002:'\n    }]\n  },\n  1.1: {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: defaultTagPrefix\n    }]\n  },\n  1.2: {\n    schema: 'core',\n    merge: false,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: defaultTagPrefix\n    }]\n  }\n};\n\nfunction stringifyTag(doc, tag) {\n  if ((doc.version || doc.options.version) === '1.0') {\n    var priv = tag.match(/^tag:private\\.yaml\\.org,2002:([^:/]+)$/);\n    if (priv) return '!' + priv[1];\n    var vocab = tag.match(/^tag:([a-zA-Z0-9-]+)\\.yaml\\.org,2002:(.*)/);\n    return vocab ? \"!\".concat(vocab[1], \"/\").concat(vocab[2]) : \"!\".concat(tag.replace(/^tag:/, ''));\n  }\n\n  var p = doc.tagPrefixes.find(function (p) {\n    return tag.indexOf(p.prefix) === 0;\n  });\n\n  if (!p) {\n    var dtp = doc.getDefaults().tagPrefixes;\n    p = dtp && dtp.find(function (p) {\n      return tag.indexOf(p.prefix) === 0;\n    });\n  }\n\n  if (!p) return tag[0] === '!' ? tag : \"!<\".concat(tag, \">\");\n  var suffix = tag.substr(p.prefix.length).replace(/[!,[\\]{}]/g, function (ch) {\n    return {\n      '!': '%21',\n      ',': '%2C',\n      '[': '%5B',\n      ']': '%5D',\n      '{': '%7B',\n      '}': '%7D'\n    }[ch];\n  });\n  return p.handle + suffix;\n}\n\nfunction getTagObject(tags, item) {\n  if (item instanceof Alias) return Alias;\n\n  if (item.tag) {\n    var match = tags.filter(function (t) {\n      return t.tag === item.tag;\n    });\n    if (match.length > 0) return match.find(function (t) {\n      return t.format === item.format;\n    }) || match[0];\n  }\n\n  var tagObj, obj;\n\n  if (item instanceof Scalar) {\n    obj = item.value; // TODO: deprecate/remove class check\n\n    var _match = tags.filter(function (t) {\n      return t.identify && t.identify(obj) || t.class && obj instanceof t.class;\n    });\n\n    tagObj = _match.find(function (t) {\n      return t.format === item.format;\n    }) || _match.find(function (t) {\n      return !t.format;\n    });\n  } else {\n    obj = item;\n    tagObj = tags.find(function (t) {\n      return t.nodeClass && obj instanceof t.nodeClass;\n    });\n  }\n\n  if (!tagObj) {\n    var name = obj && obj.constructor ? obj.constructor.name : _typeof(obj);\n    throw new Error(\"Tag not resolved for \".concat(name, \" value\"));\n  }\n\n  return tagObj;\n} // needs to be called before value stringifier to allow for circular anchor refs\n\n\nfunction stringifyProps(node, tagObj, _ref) {\n  var anchors = _ref.anchors,\n      doc = _ref.doc;\n  var props = [];\n  var anchor = doc.anchors.getName(node);\n\n  if (anchor) {\n    anchors[anchor] = node;\n    props.push(\"&\".concat(anchor));\n  }\n\n  if (node.tag) {\n    props.push(stringifyTag(doc, node.tag));\n  } else if (!tagObj.default) {\n    props.push(stringifyTag(doc, tagObj.tag));\n  }\n\n  return props.join(' ');\n}\n\nfunction stringify$1(item, ctx, onComment, onChompKeep) {\n  var _ctx$doc = ctx.doc,\n      anchors = _ctx$doc.anchors,\n      schema = _ctx$doc.schema;\n  var tagObj;\n\n  if (!(item instanceof Node)) {\n    var createCtx = {\n      aliasNodes: [],\n      onTagObj: function onTagObj(o) {\n        return tagObj = o;\n      },\n      prevObjects: new Map()\n    };\n    item = schema.createNode(item, true, null, createCtx);\n\n    var _iterator = _createForOfIteratorHelper(createCtx.aliasNodes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var alias = _step.value;\n        alias.source = alias.source.node;\n        var name = anchors.getName(alias.source);\n\n        if (!name) {\n          name = anchors.newName();\n          anchors.map[name] = alias.source;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (item instanceof Pair) return item.toString(ctx, onComment, onChompKeep);\n  if (!tagObj) tagObj = getTagObject(schema.tags, item);\n  var props = stringifyProps(item, tagObj, ctx);\n  if (props.length > 0) ctx.indentAtStart = (ctx.indentAtStart || 0) + props.length + 1;\n  var str = typeof tagObj.stringify === 'function' ? tagObj.stringify(item, ctx, onComment, onChompKeep) : item instanceof Scalar ? stringifyString(item, ctx, onComment, onChompKeep) : item.toString(ctx, onComment, onChompKeep);\n  if (!props) return str;\n  return item instanceof Scalar || str[0] === '{' || str[0] === '[' ? \"\".concat(props, \" \").concat(str) : \"\".concat(props, \"\\n\").concat(ctx.indent).concat(str);\n}\n\nvar Anchors = /*#__PURE__*/function () {\n  function Anchors(prefix) {\n    _classCallCheck(this, Anchors);\n\n    _defineProperty(this, \"map\", Object.create(null));\n\n    this.prefix = prefix;\n  }\n\n  _createClass(Anchors, [{\n    key: \"createAlias\",\n    value: function createAlias(node, name) {\n      this.setAnchor(node, name);\n      return new Alias(node);\n    }\n  }, {\n    key: \"createMergePair\",\n    value: function createMergePair() {\n      var _this = this;\n\n      var merge = new Merge();\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      merge.value.items = sources.map(function (s) {\n        if (s instanceof Alias) {\n          if (s.source instanceof YAMLMap) return s;\n        } else if (s instanceof YAMLMap) {\n          return _this.createAlias(s);\n        }\n\n        throw new Error('Merge sources must be Map nodes or their Aliases');\n      });\n      return merge;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName(node) {\n      var map = this.map;\n      return Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n    }\n  }, {\n    key: \"getNames\",\n    value: function getNames() {\n      return Object.keys(this.map);\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(name) {\n      return this.map[name];\n    }\n  }, {\n    key: \"newName\",\n    value: function newName(prefix) {\n      if (!prefix) prefix = this.prefix;\n      var names = Object.keys(this.map);\n\n      for (var i = 1; true; ++i) {\n        var name = \"\".concat(prefix).concat(i);\n        if (!names.includes(name)) return name;\n      }\n    } // During parsing, map & aliases contain CST nodes\n\n  }, {\n    key: \"resolveNodes\",\n    value: function resolveNodes() {\n      var map = this.map,\n          _cstAliases = this._cstAliases;\n      Object.keys(map).forEach(function (a) {\n        map[a] = map[a].resolved;\n      });\n\n      _cstAliases.forEach(function (a) {\n        a.source = a.source.resolved;\n      });\n\n      delete this._cstAliases;\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(node, name) {\n      if (node != null && !Anchors.validAnchorNode(node)) {\n        throw new Error('Anchors may only be set for Scalar, Seq and Map nodes');\n      }\n\n      if (name && /[\\x00-\\x19\\s,[\\]{}]/.test(name)) {\n        throw new Error('Anchor names must not contain whitespace or control characters');\n      }\n\n      var map = this.map;\n      var prev = node && Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n\n      if (prev) {\n        if (!name) {\n          return prev;\n        } else if (prev !== name) {\n          delete map[prev];\n          map[name] = node;\n        }\n      } else {\n        if (!name) {\n          if (!node) return null;\n          name = this.newName();\n        }\n\n        map[name] = node;\n      }\n\n      return name;\n    }\n  }], [{\n    key: \"validAnchorNode\",\n    value: function validAnchorNode(node) {\n      return node instanceof Scalar || node instanceof YAMLSeq || node instanceof YAMLMap;\n    }\n  }]);\n\n  return Anchors;\n}();\n\nvar visit = function visit(node, tags) {\n  if (node && _typeof(node) === 'object') {\n    var tag = node.tag;\n\n    if (node instanceof Collection) {\n      if (tag) tags[tag] = true;\n      node.items.forEach(function (n) {\n        return visit(n, tags);\n      });\n    } else if (node instanceof Pair) {\n      visit(node.key, tags);\n      visit(node.value, tags);\n    } else if (node instanceof Scalar) {\n      if (tag) tags[tag] = true;\n    }\n  }\n\n  return tags;\n};\n\nvar listTagNames = function listTagNames(node) {\n  return Object.keys(visit(node, {}));\n};\n\nfunction parseContents(doc, contents) {\n  var comments = {\n    before: [],\n    after: []\n  };\n  var body = undefined;\n  var spaceBefore = false;\n\n  var _iterator = _createForOfIteratorHelper(contents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (node.valueRange) {\n        if (body !== undefined) {\n          var msg = 'Document contains trailing content not separated by a ... or --- line';\n          doc.errors.push(new YAMLSyntaxError(node, msg));\n          break;\n        }\n\n        var res = resolveNode(doc, node);\n\n        if (spaceBefore) {\n          res.spaceBefore = true;\n          spaceBefore = false;\n        }\n\n        body = res;\n      } else if (node.comment !== null) {\n        var cc = body === undefined ? comments.before : comments.after;\n        cc.push(node.comment);\n      } else if (node.type === Type.BLANK_LINE) {\n        spaceBefore = true;\n\n        if (body === undefined && comments.before.length > 0 && !doc.commentBefore) {\n          // space-separated comments at start are parsed as document comments\n          doc.commentBefore = comments.before.join('\\n');\n          comments.before = [];\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  doc.contents = body || null;\n\n  if (!body) {\n    doc.comment = comments.before.concat(comments.after).join('\\n') || null;\n  } else {\n    var cb = comments.before.join('\\n');\n\n    if (cb) {\n      var cbNode = body instanceof Collection && body.items[0] ? body.items[0] : body;\n      cbNode.commentBefore = cbNode.commentBefore ? \"\".concat(cb, \"\\n\").concat(cbNode.commentBefore) : cb;\n    }\n\n    doc.comment = comments.after.join('\\n') || null;\n  }\n}\n\nfunction resolveTagDirective(_ref, directive) {\n  var tagPrefixes = _ref.tagPrefixes;\n\n  var _directive$parameters = _slicedToArray(directive.parameters, 2),\n      handle = _directive$parameters[0],\n      prefix = _directive$parameters[1];\n\n  if (!handle || !prefix) {\n    var msg = 'Insufficient parameters given for %TAG directive';\n    throw new YAMLSemanticError(directive, msg);\n  }\n\n  if (tagPrefixes.some(function (p) {\n    return p.handle === handle;\n  })) {\n    var _msg = 'The %TAG directive must only be given at most once per handle in the same document.';\n    throw new YAMLSemanticError(directive, _msg);\n  }\n\n  return {\n    handle: handle,\n    prefix: prefix\n  };\n}\n\nfunction resolveYamlDirective(doc, directive) {\n  var _directive$parameters2 = _slicedToArray(directive.parameters, 1),\n      version = _directive$parameters2[0];\n\n  if (directive.name === 'YAML:1.0') version = '1.0';\n\n  if (!version) {\n    var msg = 'Insufficient parameters given for %YAML directive';\n    throw new YAMLSemanticError(directive, msg);\n  }\n\n  if (!documentOptions[version]) {\n    var v0 = doc.version || doc.options.version;\n\n    var _msg2 = \"Document will be parsed as YAML \".concat(v0, \" rather than YAML \").concat(version);\n\n    doc.warnings.push(new YAMLWarning(directive, _msg2));\n  }\n\n  return version;\n}\n\nfunction parseDirectives(doc, directives, prevDoc) {\n  var directiveComments = [];\n  var hasDirectives = false;\n\n  var _iterator = _createForOfIteratorHelper(directives),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var directive = _step.value;\n      var comment = directive.comment,\n          name = directive.name;\n\n      switch (name) {\n        case 'TAG':\n          try {\n            doc.tagPrefixes.push(resolveTagDirective(doc, directive));\n          } catch (error) {\n            doc.errors.push(error);\n          }\n\n          hasDirectives = true;\n          break;\n\n        case 'YAML':\n        case 'YAML:1.0':\n          if (doc.version) {\n            var msg = 'The %YAML directive must only be given at most once per document.';\n            doc.errors.push(new YAMLSemanticError(directive, msg));\n          }\n\n          try {\n            doc.version = resolveYamlDirective(doc, directive);\n          } catch (error) {\n            doc.errors.push(error);\n          }\n\n          hasDirectives = true;\n          break;\n\n        default:\n          if (name) {\n            var _msg3 = \"YAML only supports %TAG and %YAML directives, and not %\".concat(name);\n\n            doc.warnings.push(new YAMLWarning(directive, _msg3));\n          }\n\n      }\n\n      if (comment) directiveComments.push(comment);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (prevDoc && !hasDirectives && '1.1' === (doc.version || prevDoc.version || doc.options.version)) {\n    var copyTagPrefix = function copyTagPrefix(_ref2) {\n      var handle = _ref2.handle,\n          prefix = _ref2.prefix;\n      return {\n        handle: handle,\n        prefix: prefix\n      };\n    };\n\n    doc.tagPrefixes = prevDoc.tagPrefixes.map(copyTagPrefix);\n    doc.version = prevDoc.version;\n  }\n\n  doc.commentBefore = directiveComments.join('\\n') || null;\n}\n\nfunction assertCollection(contents) {\n  if (contents instanceof Collection) return true;\n  throw new Error('Expected a YAML collection as document contents');\n}\n\nvar Document$1 = /*#__PURE__*/function () {\n  function Document(options) {\n    _classCallCheck(this, Document);\n\n    this.anchors = new Anchors(options.anchorPrefix);\n    this.commentBefore = null;\n    this.comment = null;\n    this.contents = null;\n    this.directivesEndMarker = null;\n    this.errors = [];\n    this.options = options;\n    this.schema = null;\n    this.tagPrefixes = [];\n    this.version = null;\n    this.warnings = [];\n  }\n\n  _createClass(Document, [{\n    key: \"add\",\n    value: function add(value) {\n      assertCollection(this.contents);\n      return this.contents.add(value);\n    }\n  }, {\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      assertCollection(this.contents);\n      this.contents.addIn(path, value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      assertCollection(this.contents);\n      return this.contents.delete(key);\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(path) {\n      if (isEmptyPath(path)) {\n        if (this.contents == null) return false;\n        this.contents = null;\n        return true;\n      }\n\n      assertCollection(this.contents);\n      return this.contents.deleteIn(path);\n    }\n  }, {\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Document.defaults[this.version] || Document.defaults[this.options.version] || {};\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      return this.contents instanceof Collection ? this.contents.get(key, keepScalar) : undefined;\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(path, keepScalar) {\n      if (isEmptyPath(path)) return !keepScalar && this.contents instanceof Scalar ? this.contents.value : this.contents;\n      return this.contents instanceof Collection ? this.contents.getIn(path, keepScalar) : undefined;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.contents instanceof Collection ? this.contents.has(key) : false;\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(path) {\n      if (isEmptyPath(path)) return this.contents !== undefined;\n      return this.contents instanceof Collection ? this.contents.hasIn(path) : false;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      assertCollection(this.contents);\n      this.contents.set(key, value);\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(path, value) {\n      if (isEmptyPath(path)) this.contents = value;else {\n        assertCollection(this.contents);\n        this.contents.setIn(path, value);\n      }\n    }\n  }, {\n    key: \"setSchema\",\n    value: function setSchema(id, customTags) {\n      if (!id && !customTags && this.schema) return;\n      if (typeof id === 'number') id = id.toFixed(1);\n\n      if (id === '1.0' || id === '1.1' || id === '1.2') {\n        if (this.version) this.version = id;else this.options.version = id;\n        delete this.options.schema;\n      } else if (id && typeof id === 'string') {\n        this.options.schema = id;\n      }\n\n      if (Array.isArray(customTags)) this.options.customTags = customTags;\n      var opt = Object.assign({}, this.getDefaults(), this.options);\n      this.schema = new Schema(opt);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(node, prevDoc) {\n      if (this.options.keepCstNodes) this.cstNode = node;\n      if (this.options.keepNodeTypes) this.type = 'DOCUMENT';\n      var _node$directives = node.directives,\n          directives = _node$directives === void 0 ? [] : _node$directives,\n          _node$contents = node.contents,\n          contents = _node$contents === void 0 ? [] : _node$contents,\n          directivesEndMarker = node.directivesEndMarker,\n          error = node.error,\n          valueRange = node.valueRange;\n\n      if (error) {\n        if (!error.source) error.source = this;\n        this.errors.push(error);\n      }\n\n      parseDirectives(this, directives, prevDoc);\n      if (directivesEndMarker) this.directivesEndMarker = true;\n      this.range = valueRange ? [valueRange.start, valueRange.end] : null;\n      this.setSchema();\n      this.anchors._cstAliases = [];\n      parseContents(this, contents);\n      this.anchors.resolveNodes();\n\n      if (this.options.prettyErrors) {\n        var _iterator = _createForOfIteratorHelper(this.errors),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _error = _step.value;\n            if (_error instanceof YAMLError) _error.makePretty();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(this.warnings),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var warn = _step2.value;\n            if (warn instanceof YAMLError) warn.makePretty();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"listNonDefaultTags\",\n    value: function listNonDefaultTags() {\n      return listTagNames(this.contents).filter(function (t) {\n        return t.indexOf(Schema.defaultPrefix) !== 0;\n      });\n    }\n  }, {\n    key: \"setTagPrefix\",\n    value: function setTagPrefix(handle, prefix) {\n      if (handle[0] !== '!' || handle[handle.length - 1] !== '!') throw new Error('Handle must start and end with !');\n\n      if (prefix) {\n        var prev = this.tagPrefixes.find(function (p) {\n          return p.handle === handle;\n        });\n        if (prev) prev.prefix = prefix;else this.tagPrefixes.push({\n          handle: handle,\n          prefix: prefix\n        });\n      } else {\n        this.tagPrefixes = this.tagPrefixes.filter(function (p) {\n          return p.handle !== handle;\n        });\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON$1(arg, onAnchor) {\n      var _this = this;\n\n      var _this$options = this.options,\n          keepBlobsInJSON = _this$options.keepBlobsInJSON,\n          mapAsMap = _this$options.mapAsMap,\n          maxAliasCount = _this$options.maxAliasCount;\n      var keep = keepBlobsInJSON && (typeof arg !== 'string' || !(this.contents instanceof Scalar));\n      var ctx = {\n        doc: this,\n        indentStep: '  ',\n        keep: keep,\n        mapAsMap: keep && !!mapAsMap,\n        maxAliasCount: maxAliasCount,\n        stringify: stringify$1 // Requiring directly in Pair would create circular dependencies\n\n      };\n      var anchorNames = Object.keys(this.anchors.map);\n      if (anchorNames.length > 0) ctx.anchors = new Map(anchorNames.map(function (name) {\n        return [_this.anchors.map[name], {\n          alias: [],\n          aliasCount: 0,\n          count: 1\n        }];\n      }));\n\n      var res = toJSON(this.contents, arg, ctx);\n\n      if (typeof onAnchor === 'function' && ctx.anchors) {\n        var _iterator3 = _createForOfIteratorHelper(ctx.anchors.values()),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _step3$value = _step3.value,\n                count = _step3$value.count,\n                _res = _step3$value.res;\n            onAnchor(_res, count);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      return res;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');\n      var indentSize = this.options.indent;\n\n      if (!Number.isInteger(indentSize) || indentSize <= 0) {\n        var s = JSON.stringify(indentSize);\n        throw new Error(\"\\\"indent\\\" option must be a positive integer, not \".concat(s));\n      }\n\n      this.setSchema();\n      var lines = [];\n      var hasDirectives = false;\n\n      if (this.version) {\n        var vd = '%YAML 1.2';\n\n        if (this.schema.name === 'yaml-1.1') {\n          if (this.version === '1.0') vd = '%YAML:1.0';else if (this.version === '1.1') vd = '%YAML 1.1';\n        }\n\n        lines.push(vd);\n        hasDirectives = true;\n      }\n\n      var tagNames = this.listNonDefaultTags();\n      this.tagPrefixes.forEach(function (_ref) {\n        var handle = _ref.handle,\n            prefix = _ref.prefix;\n\n        if (tagNames.some(function (t) {\n          return t.indexOf(prefix) === 0;\n        })) {\n          lines.push(\"%TAG \".concat(handle, \" \").concat(prefix));\n          hasDirectives = true;\n        }\n      });\n      if (hasDirectives || this.directivesEndMarker) lines.push('---');\n\n      if (this.commentBefore) {\n        if (hasDirectives || !this.directivesEndMarker) lines.unshift('');\n        lines.unshift(this.commentBefore.replace(/^/gm, '#'));\n      }\n\n      var ctx = {\n        anchors: Object.create(null),\n        doc: this,\n        indent: '',\n        indentStep: ' '.repeat(indentSize),\n        stringify: stringify$1 // Requiring directly in nodes would create circular dependencies\n\n      };\n      var chompKeep = false;\n      var contentComment = null;\n\n      if (this.contents) {\n        if (this.contents instanceof Node) {\n          if (this.contents.spaceBefore && (hasDirectives || this.directivesEndMarker)) lines.push('');\n          if (this.contents.commentBefore) lines.push(this.contents.commentBefore.replace(/^/gm, '#')); // top-level block scalars need to be indented if followed by a comment\n\n          ctx.forceBlockIndent = !!this.comment;\n          contentComment = this.contents.comment;\n        }\n\n        var onChompKeep = contentComment ? null : function () {\n          return chompKeep = true;\n        };\n        var body = stringify$1(this.contents, ctx, function () {\n          return contentComment = null;\n        }, onChompKeep);\n        lines.push(addComment(body, '', contentComment));\n      } else if (this.contents !== undefined) {\n        lines.push(stringify$1(this.contents, ctx));\n      }\n\n      if (this.comment) {\n        if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');\n        lines.push(this.comment.replace(/^/gm, '#'));\n      }\n\n      return lines.join('\\n') + '\\n';\n    }\n  }]);\n\n  return Document;\n}();\n\n_defineProperty(Document$1, \"defaults\", documentOptions);\n\nfunction createNode(value) {\n  var wrapScalars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var tag = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (tag === undefined && typeof wrapScalars === 'string') {\n    tag = wrapScalars;\n    wrapScalars = true;\n  }\n\n  var options = Object.assign({}, Document$1.defaults[defaultOptions.version], defaultOptions);\n  var schema = new Schema(options);\n  return schema.createNode(value, wrapScalars, tag);\n}\n\nvar Document = /*#__PURE__*/function (_YAMLDocument) {\n  _inherits(Document, _YAMLDocument);\n\n  var _super = _createSuper(Document);\n\n  function Document(options) {\n    _classCallCheck(this, Document);\n\n    return _super.call(this, Object.assign({}, defaultOptions, options));\n  }\n\n  return Document;\n}(Document$1);\n\nfunction parseAllDocuments(src, options) {\n  var stream = [];\n  var prev;\n\n  var _iterator = _createForOfIteratorHelper(parse$1(src)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cstDoc = _step.value;\n      var doc = new Document(options);\n      doc.parse(cstDoc, prev);\n      stream.push(doc);\n      prev = doc;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return stream;\n}\n\nfunction parseDocument(src, options) {\n  var cst = parse$1(src);\n  var doc = new Document(options).parse(cst[0]);\n\n  if (cst.length > 1) {\n    var errMsg = 'Source contains multiple documents; please use YAML.parseAllDocuments()';\n    doc.errors.unshift(new YAMLSemanticError(cst[1], errMsg));\n  }\n\n  return doc;\n}\n\nfunction parse(src, options) {\n  var doc = parseDocument(src, options);\n  doc.warnings.forEach(function (warning) {\n    return warn(warning);\n  });\n  if (doc.errors.length > 0) throw doc.errors[0];\n  return doc.toJSON();\n}\n\nfunction stringify(value, options) {\n  var doc = new Document(options);\n  doc.contents = value;\n  return String(doc);\n}\n\nvar YAML = {\n  createNode: createNode,\n  defaultOptions: defaultOptions,\n  Document: Document,\n  parse: parse,\n  parseAllDocuments: parseAllDocuments,\n  parseCST: parse$1,\n  parseDocument: parseDocument,\n  scalarOptions: scalarOptions,\n  stringify: stringify\n};\n\nexport { YAML };\n", "module.exports = require('./dist').YAML\n", "/* eslint-disable @typescript-eslint/no-require-imports */\n\nimport parseJsonType from 'parse-json';\nimport yamlType from 'yaml';\nimport importFreshType from 'import-fresh';\nimport { LoaderSync } from './index';\nimport { LoadersSync } from './types';\n\nlet importFresh: typeof importFreshType;\nconst loadJs: LoaderSync = function loadJs(filepath) {\n  if (importFresh === undefined) {\n    importFresh = require('import-fresh');\n  }\n\n  const result = importFresh(filepath);\n  return result;\n};\n\nlet parseJson: typeof parseJsonType;\nconst loadJson: LoaderSync = function loadJson(filepath, content) {\n  if (parseJson === undefined) {\n    parseJson = require('parse-json');\n  }\n\n  try {\n    const result = parseJson(content);\n    return result;\n  } catch (error) {\n    error.message = `JSON Error in ${filepath}:\\n${error.message}`;\n    throw error;\n  }\n};\n\nlet yaml: typeof yamlType;\nconst loadYaml: LoaderSync = function loadYaml(filepath, content) {\n  if (yaml === undefined) {\n    yaml = require('yaml');\n  }\n\n  try {\n    const result = yaml.parse(content, { prettyErrors: true });\n    return result;\n  } catch (error) {\n    error.message = `YAML Error in ${filepath}:\\n${error.message}`;\n    throw error;\n  }\n};\n\nconst loaders: LoadersSync = { loadJs, loadJson, loadYaml };\n\nexport { loaders };\n", "// Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\nfunction getPropertyByPath(\n  source: { [key: string]: unknown },\n  path: string | Array<string>,\n): unknown {\n  if (\n    typeof path === 'string' &&\n    Object.prototype.hasOwnProperty.call(source, path)\n  ) {\n    return source[path];\n  }\n\n  const parsedPath = typeof path === 'string' ? path.split('.') : path;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return parsedPath.reduce((previous: any, key): unknown => {\n    if (previous === undefined) {\n      return previous;\n    }\n    return previous[key];\n  }, source);\n}\n\nexport { getPropertyByPath };\n", "import path from 'path';\nimport { loaders } from './loaders';\nimport { getPropertyByPath } from './getPropertyByPath';\nimport {\n  CosmiconfigResult,\n  ExplorerOptions,\n  ExplorerOptionsSync,\n  Cache,\n  LoadedFileContent,\n} from './types';\nimport { Loader } from './index';\n\nclass ExplorerBase<T extends ExplorerOptions | ExplorerOptionsSync> {\n  protected readonly loadCache?: Cache;\n  protected readonly searchCache?: Cache;\n  protected readonly config: T;\n\n  public constructor(options: T) {\n    if (options.cache === true) {\n      this.loadCache = new Map();\n      this.searchCache = new Map();\n    }\n\n    this.config = options;\n    this.validateConfig();\n  }\n\n  public clearLoadCache(): void {\n    if (this.loadCache) {\n      this.loadCache.clear();\n    }\n  }\n\n  public clearSearchCache(): void {\n    if (this.searchCache) {\n      this.searchCache.clear();\n    }\n  }\n\n  public clearCaches(): void {\n    this.clearLoadCache();\n    this.clearSearchCache();\n  }\n\n  private validateConfig(): void {\n    const config = this.config;\n\n    config.searchPlaces.forEach((place): void => {\n      const loaderKey = path.extname(place) || 'noExt';\n      const loader = config.loaders[loaderKey];\n      if (!loader) {\n        throw new Error(\n          `No loader specified for ${getExtensionDescription(\n            place,\n          )}, so searchPlaces item \"${place}\" is invalid`,\n        );\n      }\n\n      if (typeof loader !== 'function') {\n        throw new Error(\n          `loader for ${getExtensionDescription(\n            place,\n          )} is not a function (type provided: \"${typeof loader}\"), so searchPlaces item \"${place}\" is invalid`,\n        );\n      }\n    });\n  }\n\n  protected shouldSearchStopWithResult(result: CosmiconfigResult): boolean {\n    if (result === null) return false;\n    if (result.isEmpty && this.config.ignoreEmptySearchPlaces) return false;\n    return true;\n  }\n\n  protected nextDirectoryToSearch(\n    currentDir: string,\n    currentResult: CosmiconfigResult,\n  ): string | null {\n    if (this.shouldSearchStopWithResult(currentResult)) {\n      return null;\n    }\n    const nextDir = nextDirUp(currentDir);\n    if (nextDir === currentDir || currentDir === this.config.stopDir) {\n      return null;\n    }\n    return nextDir;\n  }\n\n  private loadPackageProp(filepath: string, content: string): unknown {\n    const parsedContent = loaders.loadJson(filepath, content);\n    const packagePropValue = getPropertyByPath(\n      parsedContent,\n      this.config.packageProp,\n    );\n    return packagePropValue || null;\n  }\n\n  protected getLoaderEntryForFile(filepath: string): Loader {\n    if (path.basename(filepath) === 'package.json') {\n      const loader = this.loadPackageProp.bind(this);\n      return loader;\n    }\n\n    const loaderKey = path.extname(filepath) || 'noExt';\n\n    const loader = this.config.loaders[loaderKey];\n\n    if (!loader) {\n      throw new Error(\n        `No loader specified for ${getExtensionDescription(filepath)}`,\n      );\n    }\n\n    return loader;\n  }\n\n  protected loadedContentToCosmiconfigResult(\n    filepath: string,\n    loadedContent: LoadedFileContent,\n  ): CosmiconfigResult {\n    if (loadedContent === null) {\n      return null;\n    }\n    if (loadedContent === undefined) {\n      return { filepath, config: undefined, isEmpty: true };\n    }\n    return { config: loadedContent, filepath };\n  }\n\n  protected validateFilePath(filepath: string): void {\n    if (!filepath) {\n      throw new Error('load must pass a non-empty string');\n    }\n  }\n}\n\nfunction nextDirUp(dir: string): string {\n  return path.dirname(dir);\n}\n\nfunction getExtensionDescription(filepath: string): string {\n  const ext = path.extname(filepath);\n  return ext ? `extension \"${ext}\"` : 'files without extensions';\n}\n\nexport { ExplorerBase, getExtensionDescription };\n", "import fs from 'fs';\n\nasync function fsReadFileAsync(\n  pathname: string,\n  encoding: string,\n): Promise<string> {\n  return new Promise((resolve, reject): void => {\n    fs.readFile(pathname, encoding, (error, contents): void => {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      resolve(contents);\n    });\n  });\n}\n\ninterface Options {\n  throwNotFound?: boolean;\n}\n\nasync function readFile(\n  filepath: string,\n  options: Options = {},\n): Promise<string | null> {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = await fsReadFileAsync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && error.code === 'ENOENT') {\n      return null;\n    }\n\n    throw error;\n  }\n}\n\nfunction readFileSync(filepath: string, options: Options = {}): string | null {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = fs.readFileSync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && error.code === 'ENOENT') {\n      return null;\n    }\n\n    throw error;\n  }\n}\n\nexport { readFile, readFileSync };\n", "import { Cache, CosmiconfigResult } from './types';\n\nasync function cacheWrapper(\n  cache: Cache,\n  key: string,\n  fn: () => Promise<CosmiconfigResult>,\n): Promise<CosmiconfigResult> {\n  const cached = cache.get(key);\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = await fn();\n  cache.set(key, result);\n  return result;\n}\n\nfunction cacheWrapperSync(\n  cache: Cache,\n  key: string,\n  fn: () => CosmiconfigResult,\n): CosmiconfigResult {\n  const cached = cache.get(key);\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const result = fn();\n  cache.set(key, result);\n  return result;\n}\n\nexport { cacheWrapper, cacheWrapperSync };\n", "'use strict';\nconst {promisify} = require('util');\nconst fs = require('fs');\n\nasync function isType(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\tconst stats = await promisify(fs[fsStatType])(filePath);\n\t\treturn stats[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nfunction isTypeSync(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\treturn fs[fsStatType](filePath)[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexports.isFile = isType.bind(null, 'stat', 'isFile');\nexports.isDirectory = isType.bind(null, 'stat', 'isDirectory');\nexports.isSymlink = isType.bind(null, 'lstat', 'isSymbolicLink');\nexports.isFileSync = isTypeSync.bind(null, 'statSync', 'isFile');\nexports.isDirectorySync = isTypeSync.bind(null, 'statSync', 'isDirectory');\nexports.isSymlinkSync = isTypeSync.bind(null, 'lstatSync', 'isSymbolicLink');\n", "import path from 'path';\nimport { isDirectory, isDirectorySync } from 'path-type';\n\nasync function getDirectory(filepath: string): Promise<string> {\n  const filePathIsDirectory = await isDirectory(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = path.dirname(filepath);\n\n  return directory;\n}\n\nfunction getDirectorySync(filepath: string): string {\n  const filePathIsDirectory = isDirectorySync(filepath);\n\n  if (filePathIsDirectory === true) {\n    return filepath;\n  }\n\n  const directory = path.dirname(filepath);\n\n  return directory;\n}\n\nexport { getDirectory, getDirectorySync };\n", "import path from 'path';\nimport { ExplorerBase } from './ExplorerBase';\nimport { readFile } from './readFile';\nimport { cacheWrapper } from './cacheWrapper';\nimport { getDirectory } from './getDirectory';\nimport { CosmiconfigResult, ExplorerOptions, LoadedFileContent } from './types';\n\nclass Explorer extends ExplorerBase<ExplorerOptions> {\n  public constructor(options: ExplorerOptions) {\n    super(options);\n  }\n\n  public async search(\n    searchFrom: string = process.cwd(),\n  ): Promise<CosmiconfigResult> {\n    const startDirectory = await getDirectory(searchFrom);\n    const result = await this.searchFromDirectory(startDirectory);\n\n    return result;\n  }\n\n  private async searchFromDirectory(dir: string): Promise<CosmiconfigResult> {\n    const absoluteDir = path.resolve(process.cwd(), dir);\n\n    const run = async (): Promise<CosmiconfigResult> => {\n      const result = await this.searchDirectory(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectory(nextDir);\n      }\n\n      const transformResult = await this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.searchCache) {\n      return cacheWrapper(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  private async searchDirectory(dir: string): Promise<CosmiconfigResult> {\n    for await (const place of this.config.searchPlaces) {\n      const placeResult = await this.loadSearchPlace(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult) === true) {\n        return placeResult;\n      }\n    }\n\n    // config not found\n    return null;\n  }\n\n  private async loadSearchPlace(\n    dir: string,\n    place: string,\n  ): Promise<CosmiconfigResult> {\n    const filepath = path.join(dir, place);\n    const fileContents = await readFile(filepath);\n\n    const result = await this.createCosmiconfigResult(filepath, fileContents);\n\n    return result;\n  }\n\n  private async loadFileContent(\n    filepath: string,\n    content: string | null,\n  ): Promise<LoadedFileContent> {\n    if (content === null) {\n      return null;\n    }\n    if (content.trim() === '') {\n      return undefined;\n    }\n    const loader = this.getLoaderEntryForFile(filepath);\n    const loaderResult = await loader(filepath, content);\n    return loaderResult;\n  }\n\n  private async createCosmiconfigResult(\n    filepath: string,\n    content: string | null,\n  ): Promise<CosmiconfigResult> {\n    const fileContent = await this.loadFileContent(filepath, content);\n    const result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n\n    return result;\n  }\n\n  public async load(filepath: string): Promise<CosmiconfigResult> {\n    this.validateFilePath(filepath);\n    const absoluteFilePath = path.resolve(process.cwd(), filepath);\n\n    const runLoad = async (): Promise<CosmiconfigResult> => {\n      const fileContents = await readFile(absoluteFilePath, {\n        throwNotFound: true,\n      });\n\n      const result = await this.createCosmiconfigResult(\n        absoluteFilePath,\n        fileContents,\n      );\n\n      const transformResult = await this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.loadCache) {\n      return cacheWrapper(this.loadCache, absoluteFilePath, runLoad);\n    }\n\n    return runLoad();\n  }\n}\n\nexport { Explorer };\n", "import path from 'path';\nimport { ExplorerBase } from './ExplorerBase';\nimport { readFileSync } from './readFile';\nimport { cacheWrapperSync } from './cacheWrapper';\nimport { getDirectorySync } from './getDirectory';\nimport {\n  CosmiconfigResult,\n  ExplorerOptionsSync,\n  LoadedFileContent,\n} from './types';\n\nclass ExplorerSync extends ExplorerBase<ExplorerOptionsSync> {\n  public constructor(options: ExplorerOptionsSync) {\n    super(options);\n  }\n\n  public searchSync(searchFrom: string = process.cwd()): CosmiconfigResult {\n    const startDirectory = getDirectorySync(searchFrom);\n    const result = this.searchFromDirectorySync(startDirectory);\n\n    return result;\n  }\n\n  private searchFromDirectorySync(dir: string): CosmiconfigResult {\n    const absoluteDir = path.resolve(process.cwd(), dir);\n\n    const run = (): CosmiconfigResult => {\n      const result = this.searchDirectorySync(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectorySync(nextDir);\n      }\n\n      const transformResult = this.config.transform(result);\n\n      return transformResult;\n    };\n\n    if (this.searchCache) {\n      return cacheWrapperSync(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  private searchDirectorySync(dir: string): CosmiconfigResult {\n    for (const place of this.config.searchPlaces) {\n      const placeResult = this.loadSearchPlaceSync(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult) === true) {\n        return placeResult;\n      }\n    }\n\n    // config not found\n    return null;\n  }\n\n  private loadSearchPlaceSync(dir: string, place: string): CosmiconfigResult {\n    const filepath = path.join(dir, place);\n    const content = readFileSync(filepath);\n\n    const result = this.createCosmiconfigResultSync(filepath, content);\n\n    return result;\n  }\n\n  private loadFileContentSync(\n    filepath: string,\n    content: string | null,\n  ): LoadedFileContent {\n    if (content === null) {\n      return null;\n    }\n    if (content.trim() === '') {\n      return undefined;\n    }\n    const loader = this.getLoaderEntryForFile(filepath);\n    const loaderResult = loader(filepath, content);\n\n    return loaderResult;\n  }\n\n  private createCosmiconfigResultSync(\n    filepath: string,\n    content: string | null,\n  ): CosmiconfigResult {\n    const fileContent = this.loadFileContentSync(filepath, content);\n    const result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n\n    return result;\n  }\n\n  public loadSync(filepath: string): CosmiconfigResult {\n    this.validateFilePath(filepath);\n    const absoluteFilePath = path.resolve(process.cwd(), filepath);\n\n    const runLoadSync = (): CosmiconfigResult => {\n      const content = readFileSync(absoluteFilePath, { throwNotFound: true });\n      const cosmiconfigResult = this.createCosmiconfigResultSync(\n        absoluteFilePath,\n        content,\n      );\n\n      const transformResult = this.config.transform(cosmiconfigResult);\n\n      return transformResult;\n    };\n\n    if (this.loadCache) {\n      return cacheWrapperSync(this.loadCache, absoluteFilePath, runLoadSync);\n    }\n\n    return runLoadSync();\n  }\n}\n\nexport { ExplorerSync };\n", "\"use strict\";\n//# sourceMappingURL=types.js.map", "import os from 'os';\nimport { Explorer } from './Explorer';\nimport { ExplorerSync } from './ExplorerSync';\nimport { loaders } from './loaders';\nimport {\n  Config,\n  CosmiconfigResult,\n  ExplorerOptions,\n  ExplorerOptionsSync,\n  Loaders,\n  LoadersSync,\n} from './types';\n\ntype LoaderResult = Config | null;\nexport type Loader =\n  | ((filepath: string, content: string) => Promise<LoaderResult>)\n  | LoaderSync;\nexport type LoaderSync = (filepath: string, content: string) => LoaderResult;\n\nexport type Transform =\n  | ((CosmiconfigResult: CosmiconfigResult) => Promise<CosmiconfigResult>)\n  | TransformSync;\n\nexport type TransformSync = (\n  CosmiconfigResult: CosmiconfigResult,\n) => CosmiconfigResult;\n\ninterface OptionsBase {\n  packageProp?: string;\n  searchPlaces?: Array<string>;\n  ignoreEmptySearchPlaces?: boolean;\n  stopDir?: string;\n  cache?: boolean;\n}\n\nexport interface Options extends OptionsBase {\n  loaders?: Loaders;\n  transform?: Transform;\n}\n\nexport interface OptionsSync extends OptionsBase {\n  loaders?: LoadersSync;\n  transform?: TransformSync;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfig(moduleName: string, options: Options = {}) {\n  const normalizedOptions: ExplorerOptions = normalizeOptions(\n    moduleName,\n    options,\n  );\n\n  const explorer = new Explorer(normalizedOptions);\n\n  return {\n    search: explorer.search.bind(explorer),\n    load: explorer.load.bind(explorer),\n    clearLoadCache: explorer.clearLoadCache.bind(explorer),\n    clearSearchCache: explorer.clearSearchCache.bind(explorer),\n    clearCaches: explorer.clearCaches.bind(explorer),\n  } as const;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction cosmiconfigSync(moduleName: string, options: OptionsSync = {}) {\n  const normalizedOptions: ExplorerOptionsSync = normalizeOptions(\n    moduleName,\n    options,\n  );\n\n  const explorerSync = new ExplorerSync(normalizedOptions);\n\n  return {\n    search: explorerSync.searchSync.bind(explorerSync),\n    load: explorerSync.loadSync.bind(explorerSync),\n    clearLoadCache: explorerSync.clearLoadCache.bind(explorerSync),\n    clearSearchCache: explorerSync.clearSearchCache.bind(explorerSync),\n    clearCaches: explorerSync.clearCaches.bind(explorerSync),\n  } as const;\n}\n\n// do not allow mutation of default loaders. Make sure it is set inside options\nconst defaultLoaders = Object.freeze({\n  '.js': loaders.loadJs,\n  '.json': loaders.loadJson,\n  '.yaml': loaders.loadYaml,\n  '.yml': loaders.loadYaml,\n  noExt: loaders.loadYaml,\n} as const);\n\nfunction normalizeOptions(\n  moduleName: string,\n  options: OptionsSync,\n): ExplorerOptionsSync;\nfunction normalizeOptions(\n  moduleName: string,\n  options: Options,\n): ExplorerOptions;\nfunction normalizeOptions(\n  moduleName: string,\n  options: Options | OptionsSync,\n): ExplorerOptions | ExplorerOptionsSync {\n  const defaults: ExplorerOptions | ExplorerOptionsSync = {\n    packageProp: moduleName,\n    searchPlaces: [\n      'package.json',\n      `.${moduleName}rc`,\n      `.${moduleName}rc.json`,\n      `.${moduleName}rc.yaml`,\n      `.${moduleName}rc.yml`,\n      `.${moduleName}rc.js`,\n      `${moduleName}.config.js`,\n    ],\n    ignoreEmptySearchPlaces: true,\n    stopDir: os.homedir(),\n    cache: true,\n    transform: identity,\n    loaders: defaultLoaders,\n  };\n\n  const normalizedOptions: ExplorerOptions | ExplorerOptionsSync = {\n    ...defaults,\n    ...options,\n    loaders: {\n      ...defaults.loaders,\n      ...options.loaders,\n    },\n  };\n\n  return normalizedOptions;\n}\n\nconst identity: TransformSync = function identity(x) {\n  return x;\n};\n\nexport { cosmiconfig, cosmiconfigSync, defaultLoaders };\n", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nconst p = require('path');\n\nconst resolve = require('resolve'); // const printAST = require('ast-pretty-print')\n\n\nconst macrosRegex = /[./]macro(\\.js)?$/;\n\nconst testMacrosRegex = v => macrosRegex.test(v); // https://stackoverflow.com/a/32749533/971592\n\n\nclass MacroError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'MacroError';\n    /* istanbul ignore else */\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else if (!this.stack) {\n      this.stack = new Error(message).stack;\n    }\n  }\n\n}\n\nlet _configExplorer = null;\n\nfunction getConfigExporer() {\n  return _configExplorer = _configExplorer || // Lazy load cosmiconfig since it is a relatively large bundle\n  require('cosmiconfig').cosmiconfigSync('babel-plugin-macros', {\n    searchPlaces: ['package.json', '.babel-plugin-macrosrc', '.babel-plugin-macrosrc.json', '.babel-plugin-macrosrc.yaml', '.babel-plugin-macrosrc.yml', '.babel-plugin-macrosrc.js', 'babel-plugin-macros.config.js'],\n    packageProp: 'babelMacros'\n  });\n}\n\nfunction createMacro(macro, options = {}) {\n  if (options.configName === 'options') {\n    throw new Error(`You cannot use the configName \"options\". It is reserved for babel-plugin-macros.`);\n  }\n\n  macroWrapper.isBabelMacro = true;\n  macroWrapper.options = options;\n  return macroWrapper;\n\n  function macroWrapper(args) {\n    const {\n      source,\n      isBabelMacrosCall\n    } = args;\n\n    if (!isBabelMacrosCall) {\n      throw new MacroError(`The macro you imported from \"${source}\" is being executed outside the context of compilation with babel-plugin-macros. ` + `This indicates that you don't have the babel plugin \"babel-plugin-macros\" configured correctly. ` + `Please see the documentation for how to configure babel-plugin-macros properly: ` + 'https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/user.md');\n    }\n\n    return macro(args);\n  }\n}\n\nfunction nodeResolvePath(source, basedir) {\n  return resolve.sync(source, {\n    basedir,\n    // This is here to support the package being globally installed\n    // read more: https://github.com/kentcdodds/babel-plugin-macros/pull/138\n    paths: [p.resolve(__dirname, '../../')]\n  });\n}\n\nfunction macrosPlugin(babel, _ref = {}) {\n  let {\n    require: _require = require,\n    resolvePath = nodeResolvePath,\n    isMacrosName = testMacrosRegex\n  } = _ref,\n      options = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"require\", \"resolvePath\", \"isMacrosName\"]);\n\n  function interopRequire(path) {\n    // eslint-disable-next-line import/no-dynamic-require\n    const o = _require(path);\n\n    return o && o.__esModule && o.default ? o.default : o;\n  }\n\n  return {\n    name: 'macros',\n    visitor: {\n      Program(progPath, state) {\n        progPath.traverse({\n          ImportDeclaration(path) {\n            const isMacros = looksLike(path, {\n              node: {\n                source: {\n                  value: v => isMacrosName(v)\n                }\n              }\n            });\n\n            if (!isMacros) {\n              return;\n            }\n\n            const imports = path.node.specifiers.map(s => ({\n              localName: s.local.name,\n              importedName: s.type === 'ImportDefaultSpecifier' ? 'default' : s.imported.name\n            }));\n            const source = path.node.source.value;\n            const result = applyMacros({\n              path,\n              imports,\n              source,\n              state,\n              babel,\n              interopRequire,\n              resolvePath,\n              options\n            });\n\n            if (!result || !result.keepImports) {\n              path.remove();\n            }\n          },\n\n          VariableDeclaration(path) {\n            const isMacros = child => looksLike(child, {\n              node: {\n                init: {\n                  callee: {\n                    type: 'Identifier',\n                    name: 'require'\n                  },\n                  arguments: args => args.length === 1 && isMacrosName(args[0].value)\n                }\n              }\n            });\n\n            path.get('declarations').filter(isMacros).forEach(child => {\n              const imports = child.node.id.name ? [{\n                localName: child.node.id.name,\n                importedName: 'default'\n              }] : child.node.id.properties.map(property => ({\n                localName: property.value.name,\n                importedName: property.key.name\n              }));\n              const call = child.get('init');\n              const source = call.node.arguments[0].value;\n              const result = applyMacros({\n                path: call,\n                imports,\n                source,\n                state,\n                babel,\n                interopRequire,\n                resolvePath,\n                options\n              });\n\n              if (!result || !result.keepImports) {\n                child.remove();\n              }\n            });\n          }\n\n        });\n      }\n\n    }\n  };\n} // eslint-disable-next-line complexity\n\n\nfunction applyMacros({\n  path,\n  imports,\n  source,\n  state,\n  babel,\n  interopRequire,\n  resolvePath,\n  options\n}) {\n  /* istanbul ignore next (pretty much only useful for astexplorer I think) */\n  const {\n    file: {\n      opts: {\n        filename = ''\n      }\n    }\n  } = state;\n  let hasReferences = false;\n  const referencePathsByImportName = imports.reduce((byName, {\n    importedName,\n    localName\n  }) => {\n    const binding = path.scope.getBinding(localName);\n    byName[importedName] = binding.referencePaths;\n    hasReferences = hasReferences || Boolean(byName[importedName].length);\n    return byName;\n  }, {});\n  const isRelative = source.indexOf('.') === 0;\n  const requirePath = resolvePath(source, p.dirname(getFullFilename(filename)));\n  const macro = interopRequire(requirePath);\n\n  if (!macro.isBabelMacro) {\n    throw new Error(`The macro imported from \"${source}\" must be wrapped in \"createMacro\" ` + `which you can get from \"babel-plugin-macros\". ` + `Please refer to the documentation to see how to do this properly: https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/author.md#writing-a-macro`);\n  }\n\n  const config = getConfig(macro, filename, source, options);\n  let result;\n\n  try {\n    /**\n     * Other plugins that run before babel-plugin-macros might use path.replace, where a path is\n     * put into its own replacement. Apparently babel does not update the scope after such\n     * an operation. As a remedy, the whole scope is traversed again with an empty \"Identifier\"\n     * visitor - this makes the problem go away.\n     *\n     * See: https://github.com/kentcdodds/import-all.macro/issues/7\n     */\n    state.file.scope.path.traverse({\n      Identifier() {}\n\n    });\n    result = macro({\n      references: referencePathsByImportName,\n      source,\n      state,\n      babel,\n      config,\n      isBabelMacrosCall: true\n    });\n  } catch (error) {\n    if (error.name === 'MacroError') {\n      throw error;\n    }\n\n    error.message = `${source}: ${error.message}`;\n\n    if (!isRelative) {\n      error.message = `${error.message} Learn more: https://www.npmjs.com/package/${source.replace( // remove everything after package name\n      // @org/package/macro -> @org/package\n      // package/macro      -> package\n      /^((?:@[^/]+\\/)?[^/]+).*/, '$1')}`;\n    }\n\n    throw error;\n  }\n\n  return result;\n}\n\nfunction getConfigFromFile(configName, filename) {\n  try {\n    const loaded = getConfigExporer().search(filename);\n\n    if (loaded) {\n      return {\n        options: loaded.config[configName],\n        path: loaded.filepath\n      };\n    }\n  } catch (e) {\n    return {\n      error: e\n    };\n  }\n\n  return {};\n}\n\nfunction getConfigFromOptions(configName, options) {\n  if (options.hasOwnProperty(configName)) {\n    if (options[configName] && typeof options[configName] !== 'object') {\n      // eslint-disable-next-line no-console\n      console.error(`The macro plugin options' ${configName} property was not an object or null.`);\n    } else {\n      return {\n        options: options[configName]\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getConfig(macro, filename, source, options) {\n  const {\n    configName\n  } = macro.options;\n\n  if (configName) {\n    const fileConfig = getConfigFromFile(configName, filename);\n    const optionsConfig = getConfigFromOptions(configName, options);\n\n    if (optionsConfig.options === undefined && fileConfig.options === undefined && fileConfig.error !== undefined) {\n      // eslint-disable-next-line no-console\n      console.error(`There was an error trying to load the config \"${configName}\" ` + `for the macro imported from \"${source}. ` + `Please see the error thrown for more information.`);\n      throw fileConfig.error;\n    }\n\n    if (fileConfig.options !== undefined && optionsConfig.options !== undefined && typeof fileConfig.options !== 'object') {\n      throw new Error(`${fileConfig.path} specified a ${configName} config of type ` + `${typeof optionsConfig.options}, but the the macros plugin's ` + `options.${configName} did contain an object. Both configs must ` + `contain objects for their options to be mergeable.`);\n    }\n\n    return (0, _extends2.default)({}, optionsConfig.options, {}, fileConfig.options);\n  }\n\n  return undefined;\n}\n/*\n istanbul ignore next\n because this is hard to test\n and not worth it...\n */\n\n\nfunction getFullFilename(filename) {\n  if (p.isAbsolute(filename)) {\n    return filename;\n  }\n\n  return p.join(process.cwd(), filename);\n}\n\nfunction looksLike(a, b) {\n  return a && b && Object.keys(b).every(bKey => {\n    const bVal = b[bKey];\n    const aVal = a[bKey];\n\n    if (typeof bVal === 'function') {\n      return bVal(aVal);\n    }\n\n    return isPrimitive(bVal) ? bVal === aVal : looksLike(aVal, bVal);\n  });\n}\n\nfunction isPrimitive(val) {\n  // eslint-disable-next-line\n  return val == null || /^[sbn]/.test(typeof val);\n}\n\nmodule.exports = macrosPlugin;\nObject.assign(module.exports, {\n  createMacro,\n  MacroError\n});", "\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push(\"jsx\");\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];", "import nodePath from 'path';\nimport { SourceMapGenerator } from 'source-map';\nimport convert from 'convert-source-map';\nimport findRoot from 'find-root';\nimport memoize from '@emotion/memoize';\nimport hashString from '@emotion/hash';\nimport escapeRegexp from 'escape-string-regexp';\nimport { serializeStyles } from '@emotion/serialize';\nimport { addNamed, addDefault } from '@babel/helper-module-imports';\nimport { createMacro } from 'babel-plugin-macros';\n\n// babel-plugin-styled-components\n// https://github.com/styled-components/babel-plugin-styled-components/blob/8d44acc36f067d60d4e09f9c22ff89695bc332d2/src/minify/index.js\nvar multilineCommentRegex = /\\/\\*[^!](.|[\\r\\n])*?\\*\\//g;\nvar lineCommentStart = /\\/\\//g;\nvar symbolRegex = /(\\s*[;:{},]\\s*)/g; // Counts occurences of substr inside str\n\nvar countOccurences = function countOccurences(str, substr) {\n  return str.split(substr).length - 1;\n}; // Joins substrings until predicate returns true\n\n\nvar reduceSubstr = function reduceSubstr(substrs, join, predicate) {\n  var length = substrs.length;\n  var res = substrs[0];\n\n  if (length === 1) {\n    return res;\n  }\n\n  for (var i = 1; i < length; i++) {\n    if (predicate(res)) {\n      break;\n    }\n\n    res += join + substrs[i];\n  }\n\n  return res;\n}; // Joins at comment starts when it's inside a string or parantheses\n// effectively removing line comments\n\n\nvar stripLineComment = function stripLineComment(line) {\n  return reduceSubstr(line.split(lineCommentStart), '//', function (str) {\n    return !str.endsWith(':') && // NOTE: This is another guard against urls, if they're not inside strings or parantheses.\n    countOccurences(str, \"'\") % 2 === 0 && countOccurences(str, '\"') % 2 === 0 && countOccurences(str, '(') === countOccurences(str, ')');\n  });\n};\nvar compressSymbols = function compressSymbols(code) {\n  return code.split(symbolRegex).reduce(function (str, fragment, index) {\n    // Even-indices are non-symbol fragments\n    if (index % 2 === 0) {\n      return str + fragment;\n    } // Only manipulate symbols outside of strings\n\n\n    if (countOccurences(str, \"'\") % 2 === 0 && countOccurences(str, '\"') % 2 === 0) {\n      return str + fragment.trim();\n    }\n\n    return str + fragment;\n  }, '');\n}; // Detects lines that are exclusively line comments\n\nvar isLineComment = function isLineComment(line) {\n  return line.trim().startsWith('//');\n};\n\nvar linebreakRegex = /[\\r\\n]\\s*/g;\nvar spacesAndLinebreakRegex = /\\s+|\\n+/g;\n\nfunction multilineReplacer(match) {\n  // When we encounter a standard multi-line CSS comment and it contains a '@'\n  // character, we keep the comment but optimize it into a single line. Some\n  // Stylis plugins, such as the stylis-rtl via the cssjanus plugin, use this\n  // special comment syntax to control behavior (such as: /* @noflip */).\n  // We can do this with standard CSS comments because they will work with\n  // compression, as opposed to non-standard single-line comments that will\n  // break compressed CSS. If the comment doesn't contain '@', then we replace\n  // it with a line break, which effectively removes it from the output.\n  var keepComment = match.indexOf('@') > -1;\n\n  if (keepComment) {\n    return match.replace(spacesAndLinebreakRegex, ' ').trim();\n  }\n\n  return '\\n';\n}\n\nvar minify = function minify(code) {\n  var newCode = code.replace(multilineCommentRegex, multilineReplacer) // If allowed, remove line breaks and extra space from multi-line comments so they appear on one line\n  .split(linebreakRegex) // Split at newlines\n  .filter(function (line) {\n    return line.length > 0 && !isLineComment(line);\n  }) // Removes lines containing only line comments\n  .map(stripLineComment) // Remove line comments inside text\n  .join(' '); // Rejoin all lines\n\n  return compressSymbols(newCode);\n};\n\nfunction getExpressionsFromTemplateLiteral(node, t) {\n  var raw = createRawStringFromTemplateLiteral(node);\n  var minified = minify(raw);\n  return replacePlaceholdersWithExpressions(minified, node.expressions || [], t);\n}\n\nvar interleave = function interleave(strings, interpolations) {\n  return interpolations.reduce(function (array, interp, i) {\n    return array.concat([interp], strings[i + 1]);\n  }, [strings[0]]);\n};\n\nfunction getDynamicMatches(str) {\n  var re = /xxx(\\d+)xxx/gm;\n  var match;\n  var matches = [];\n\n  while ((match = re.exec(str)) !== null) {\n    // so that flow doesn't complain\n    if (match !== null) {\n      matches.push({\n        value: match[0],\n        p1: parseInt(match[1], 10),\n        index: match.index\n      });\n    }\n  }\n\n  return matches;\n}\n\nfunction replacePlaceholdersWithExpressions(str, expressions, t) {\n  var matches = getDynamicMatches(str);\n\n  if (matches.length === 0) {\n    if (str === '') {\n      return [];\n    }\n\n    return [t.stringLiteral(str)];\n  }\n\n  var strings = [];\n  var finalExpressions = [];\n  var cursor = 0;\n  matches.forEach(function (_ref, i) {\n    var value = _ref.value,\n        p1 = _ref.p1,\n        index = _ref.index;\n    var preMatch = str.substring(cursor, index);\n    cursor = cursor + preMatch.length + value.length;\n\n    if (preMatch) {\n      strings.push(t.stringLiteral(preMatch));\n    } else if (i === 0) {\n      strings.push(t.stringLiteral(''));\n    }\n\n    finalExpressions.push(expressions[p1]);\n\n    if (i === matches.length - 1) {\n      strings.push(t.stringLiteral(str.substring(index + value.length)));\n    }\n  });\n  return interleave(strings, finalExpressions).filter(function (node) {\n    return node.value !== '';\n  });\n}\n\nfunction createRawStringFromTemplateLiteral(quasi) {\n  var strs = quasi.quasis.map(function (x) {\n    return x.value.cooked;\n  });\n  var src = strs.reduce(function (arr, str, i) {\n    arr.push(str);\n\n    if (i !== strs.length - 1) {\n      arr.push(\"xxx\" + i + \"xxx\");\n    }\n\n    return arr;\n  }, []).join('').trim();\n  return src;\n}\n\nvar invalidClassNameCharacters = /[!\"#$%&'()*+,./:;<=>?@[\\]^`|}~{]/g;\n\nvar sanitizeLabelPart = function sanitizeLabelPart(labelPart) {\n  return labelPart.trim().replace(invalidClassNameCharacters, '-');\n};\n\nfunction getLabel(identifierName, autoLabel, labelFormat, filename) {\n  if (!identifierName || !autoLabel) return null;\n  if (!labelFormat) return sanitizeLabelPart(identifierName);\n  var parsedPath = nodePath.parse(filename);\n  var localDirname = nodePath.basename(parsedPath.dir);\n  var localFilename = parsedPath.name;\n\n  if (localFilename === 'index') {\n    localFilename = localDirname;\n  }\n\n  return labelFormat.replace(/\\[local\\]/gi, sanitizeLabelPart(identifierName)).replace(/\\[filename\\]/gi, sanitizeLabelPart(localFilename)).replace(/\\[dirname\\]/gi, sanitizeLabelPart(localDirname));\n}\n\nfunction getLabelFromPath(path, state, t) {\n  return getLabel(getIdentifierName(path, t), state.opts.autoLabel === undefined ? process.env.NODE_ENV !== 'production' : state.opts.autoLabel, state.opts.labelFormat, state.file.opts.filename);\n}\nvar pascalCaseRegex = /^[A-Z][A-Za-z]+/;\n\nfunction getDeclaratorName(path, t) {\n  // $FlowFixMe\n  var parent = path.findParent(function (p) {\n    return p.isVariableDeclarator() || p.isFunctionDeclaration() || p.isFunctionExpression() || p.isArrowFunctionExpression() || p.isObjectProperty();\n  });\n\n  if (!parent) {\n    return '';\n  } // we probably have a css call assigned to a variable\n  // so we'll just return the variable name\n\n\n  if (parent.isVariableDeclarator()) {\n    if (t.isIdentifier(parent.node.id)) {\n      return parent.node.id.name;\n    }\n\n    return '';\n  } // we probably have an inline css prop usage\n\n\n  if (parent.isFunctionDeclaration()) {\n    var _name = parent.node.id.name;\n\n    if (pascalCaseRegex.test(_name)) {\n      return _name;\n    }\n\n    return '';\n  } // we could also have an object property\n\n\n  if (parent.isObjectProperty() && !parent.node.computed) {\n    return parent.node.key.name;\n  }\n\n  var variableDeclarator = path.findParent(function (p) {\n    return p.isVariableDeclarator();\n  });\n\n  if (!variableDeclarator) {\n    return '';\n  }\n\n  var name = variableDeclarator.node.id.name;\n\n  if (pascalCaseRegex.test(name)) {\n    return name;\n  }\n\n  return '';\n}\n\nfunction getIdentifierName(path, t) {\n  var classOrClassPropertyParent;\n\n  if (t.isObjectProperty(path.parentPath) && path.parentPath.node.computed === false && (t.isIdentifier(path.parentPath.node.key) || t.isStringLiteral(path.parentPath.node.key))) {\n    return path.parentPath.node.key.name || path.parentPath.node.key.value;\n  }\n\n  if (path) {\n    // $FlowFixMe\n    classOrClassPropertyParent = path.findParent(function (p) {\n      return t.isClassProperty(p) || t.isClass(p);\n    });\n  }\n\n  if (classOrClassPropertyParent) {\n    if (t.isClassProperty(classOrClassPropertyParent) && classOrClassPropertyParent.node.computed === false && t.isIdentifier(classOrClassPropertyParent.node.key)) {\n      return classOrClassPropertyParent.node.key.name;\n    }\n\n    if (t.isClass(classOrClassPropertyParent) && classOrClassPropertyParent.node.id) {\n      return t.isIdentifier(classOrClassPropertyParent.node.id) ? classOrClassPropertyParent.node.id.name : '';\n    }\n  }\n\n  var declaratorName = getDeclaratorName(path, t); // if the name starts with _ it was probably generated by babel so we should ignore it\n\n  if (declaratorName.charAt(0) === '_') {\n    return '';\n  }\n\n  return declaratorName;\n}\n\nfunction getGeneratorOpts(file) {\n  return file.opts.generatorOpts ? file.opts.generatorOpts : file.opts;\n}\n\nfunction makeSourceMapGenerator(file) {\n  var generatorOpts = getGeneratorOpts(file);\n  var filename = generatorOpts.sourceFileName;\n  var generator = new SourceMapGenerator({\n    file: filename,\n    sourceRoot: generatorOpts.sourceRoot\n  });\n  generator.setSourceContent(filename, file.code);\n  return generator;\n}\nfunction getSourceMap(offset, state) {\n  var generator = makeSourceMapGenerator(state.file);\n  var generatorOpts = getGeneratorOpts(state.file);\n\n  if (generatorOpts.sourceFileName && generatorOpts.sourceFileName !== 'unknown') {\n    generator.addMapping({\n      generated: {\n        line: 1,\n        column: 0\n      },\n      source: generatorOpts.sourceFileName,\n      original: offset\n    });\n    return convert.fromObject(generator).toComment({\n      multiline: true\n    });\n  }\n\n  return '';\n}\n\nvar hashArray = function hashArray(arr) {\n  return hashString(arr.join(''));\n};\n\nvar unsafeRequire = require;\nvar getPackageRootPath = memoize(function (filename) {\n  return findRoot(filename);\n});\nvar separator = new RegExp(escapeRegexp(nodePath.sep), 'g');\n\nvar normalizePath = function normalizePath(path) {\n  return nodePath.normalize(path).replace(separator, '/');\n};\n\nfunction getTargetClassName(state, t) {\n  if (state.emotionTargetClassNameCount === undefined) {\n    state.emotionTargetClassNameCount = 0;\n  }\n\n  var hasFilepath = state.file.opts.filename && state.file.opts.filename !== 'unknown';\n  var filename = hasFilepath ? state.file.opts.filename : ''; // normalize the file path to ignore folder structure\n  // outside the current node project and arch-specific delimiters\n\n  var moduleName = '';\n  var rootPath = filename;\n\n  try {\n    rootPath = getPackageRootPath(filename);\n    moduleName = unsafeRequire(rootPath + '/package.json').name;\n  } catch (err) {}\n\n  var finalPath = filename === rootPath ? 'root' : filename.slice(rootPath.length);\n  var positionInFile = state.emotionTargetClassNameCount++;\n  var stuffToHash = [moduleName];\n\n  if (finalPath) {\n    stuffToHash.push(normalizePath(finalPath));\n  } else {\n    stuffToHash.push(state.file.code);\n  }\n\n  var stableClassName = \"e\" + hashArray(stuffToHash) + positionInFile;\n  return stableClassName;\n}\n\n// it's meant to simplify the most common cases so i don't want to make it especially complex\n// also, this will be unnecessary when prepack is ready\n\nfunction simplifyObject(node, t) {\n  var finalString = '';\n\n  for (var i = 0; i < node.properties.length; i++) {\n    var _ref;\n\n    var property = node.properties[i];\n\n    if (!t.isObjectProperty(property) || property.computed || !t.isIdentifier(property.key) && !t.isStringLiteral(property.key) || !t.isStringLiteral(property.value) && !t.isNumericLiteral(property.value) && !t.isObjectExpression(property.value)) {\n      return node;\n    }\n\n    var key = property.key.name || property.key.value;\n\n    if (key === 'styles') {\n      return node;\n    }\n\n    if (t.isObjectExpression(property.value)) {\n      var simplifiedChild = simplifyObject(property.value, t);\n\n      if (!t.isStringLiteral(simplifiedChild)) {\n        return node;\n      }\n\n      finalString += key + \"{\" + simplifiedChild.value + \"}\";\n      continue;\n    }\n\n    var value = property.value.value;\n    finalString += serializeStyles([(_ref = {}, _ref[key] = value, _ref)]).styles;\n  }\n\n  return t.stringLiteral(finalString);\n}\n\n// this only works correctly in modules, but we don't run on scripts anyway, so it's fine\n// the difference is that in modules template objects are being cached per call site\nfunction getTypeScriptMakeTemplateObjectPath(path) {\n  if (path.node.arguments.length === 0) {\n    return null;\n  }\n\n  var firstArgPath = path.get('arguments')[0];\n\n  if (firstArgPath.isLogicalExpression() && firstArgPath.get('left').isIdentifier() && firstArgPath.get('right').isAssignmentExpression() && firstArgPath.get('right.right').isCallExpression() && firstArgPath.get('right.right.callee').isIdentifier() && firstArgPath.node.right.right.callee.name.includes('makeTemplateObject') && firstArgPath.node.right.right.arguments.length === 2) {\n    return firstArgPath.get('right.right');\n  }\n\n  return null;\n} // this is only used to prevent appending strings/expressions to arguments incorectly\n// we could push them to found array expressions, as we do it for TS-transpile output ¯\\_(ツ)_/¯\n// it seems overly complicated though - mainly because we'd also have to check against existing stuff of a particular type (source maps & labels)\n// considering Babel double-transpilation as a valid use case seems rather far-fetched\n\nfunction isTaggedTemplateTranspiledByBabel(path) {\n  if (path.node.arguments.length === 0) {\n    return false;\n  }\n\n  var firstArgPath = path.get('arguments')[0];\n\n  if (!firstArgPath.isCallExpression() || !firstArgPath.get('callee').isIdentifier()) {\n    return false;\n  }\n\n  var calleeName = firstArgPath.node.callee.name;\n\n  if (!calleeName.includes('templateObject')) {\n    return false;\n  }\n\n  var bindingPath = path.scope.getBinding(calleeName).path;\n\n  if (!bindingPath.isFunction()) {\n    return false;\n  }\n\n  var functionBody = bindingPath.get('body.body');\n\n  if (!functionBody[0].isVariableDeclaration()) {\n    return false;\n  }\n\n  var declarationInit = functionBody[0].get('declarations')[0].get('init');\n\n  if (!declarationInit.isCallExpression()) {\n    return false;\n  }\n\n  var declarationInitArguments = declarationInit.get('arguments');\n\n  if (declarationInitArguments.length === 0 || declarationInitArguments.length > 2 || declarationInitArguments.some(function (argPath) {\n    return !argPath.isArrayExpression();\n  })) {\n    return false;\n  }\n\n  return true;\n}\n\nvar appendStringToArguments = function appendStringToArguments(path, string, t) {\n  if (!string) {\n    return;\n  }\n\n  var args = path.node.arguments;\n\n  if (t.isStringLiteral(args[args.length - 1])) {\n    args[args.length - 1].value += string;\n  } else {\n    var makeTemplateObjectCallPath = getTypeScriptMakeTemplateObjectPath(path);\n\n    if (makeTemplateObjectCallPath) {\n      makeTemplateObjectCallPath.get('arguments').forEach(function (argPath) {\n        var elements = argPath.get('elements');\n        var lastElement = elements[elements.length - 1];\n        lastElement.replaceWith(t.stringLiteral(lastElement.node.value + string));\n      });\n    } else if (!isTaggedTemplateTranspiledByBabel(path)) {\n      args.push(t.stringLiteral(string));\n    }\n  }\n};\nvar joinStringLiterals = function joinStringLiterals(expressions, t) {\n  return expressions.reduce(function (finalExpressions, currentExpression, i) {\n    if (!t.isStringLiteral(currentExpression)) {\n      finalExpressions.push(currentExpression);\n    } else if (t.isStringLiteral(finalExpressions[finalExpressions.length - 1])) {\n      finalExpressions[finalExpressions.length - 1].value += currentExpression.value;\n    } else {\n      finalExpressions.push(currentExpression);\n    }\n\n    return finalExpressions;\n  }, []);\n};\n\nvar CSS_OBJECT_STRINGIFIED_ERROR = \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; // with babel@6 fallback\n\nvar cloneNode = function cloneNode(t, node) {\n  return typeof t.cloneNode === 'function' ? t.cloneNode(node) : t.cloneDeep(node);\n};\n\nfunction createSourceMapConditional(t, production, development) {\n  return t.conditionalExpression(t.binaryExpression('===', t.memberExpression(t.memberExpression(t.identifier('process'), t.identifier('env')), t.identifier('NODE_ENV')), t.stringLiteral('production')), production, development);\n}\n\nvar transformExpressionWithStyles = function transformExpressionWithStyles(_ref) {\n  var babel = _ref.babel,\n      state = _ref.state,\n      path = _ref.path,\n      shouldLabel = _ref.shouldLabel,\n      _ref$sourceMap = _ref.sourceMap,\n      sourceMap = _ref$sourceMap === void 0 ? '' : _ref$sourceMap;\n  var t = babel.types;\n\n  if (t.isTaggedTemplateExpression(path)) {\n    var expressions = getExpressionsFromTemplateLiteral(path.node.quasi, t);\n\n    if (state.emotionSourceMap && path.node.quasi.loc !== undefined) {\n      sourceMap = getSourceMap(path.node.quasi.loc.start, state);\n    }\n\n    path.replaceWith(t.callExpression(path.node.tag, expressions));\n  }\n\n  if (t.isCallExpression(path)) {\n    var canAppendStrings = path.node.arguments.every(function (arg) {\n      return arg.type !== 'SpreadElement';\n    });\n\n    if (canAppendStrings && shouldLabel) {\n      var label = getLabelFromPath(path, state, t);\n\n      if (label) {\n        appendStringToArguments(path, \";label:\" + label + \";\", t);\n      }\n    }\n\n    path.get('arguments').forEach(function (node) {\n      if (t.isObjectExpression(node)) {\n        node.replaceWith(simplifyObject(node.node, t));\n      }\n    });\n    path.node.arguments = joinStringLiterals(path.node.arguments, t);\n\n    if (canAppendStrings && state.emotionSourceMap && !sourceMap && path.node.loc !== undefined) {\n      sourceMap = getSourceMap(path.node.loc.start, state);\n    }\n\n    if (path.node.arguments.length === 1 && t.isStringLiteral(path.node.arguments[0])) {\n      var cssString = path.node.arguments[0].value;\n      var res = serializeStyles([cssString]);\n      var prodNode = t.objectExpression([t.objectProperty(t.identifier('name'), t.stringLiteral(res.name)), t.objectProperty(t.identifier('styles'), t.stringLiteral(res.styles))]);\n      var node = prodNode;\n\n      if (sourceMap) {\n        if (!state.emotionStringifiedCssId) {\n          var uid = state.file.scope.generateUidIdentifier('__EMOTION_STRINGIFIED_CSS_ERROR__');\n          state.emotionStringifiedCssId = uid;\n          var cssObjectToString = t.functionDeclaration(uid, [], t.blockStatement([t.returnStatement(t.stringLiteral(CSS_OBJECT_STRINGIFIED_ERROR))]));\n          cssObjectToString._compact = true;\n          state.file.path.unshiftContainer('body', [cssObjectToString]);\n        }\n\n        var devNode = t.objectExpression([t.objectProperty(t.identifier('name'), t.stringLiteral(res.name)), t.objectProperty(t.identifier('styles'), t.stringLiteral(res.styles)), t.objectProperty(t.identifier('map'), t.stringLiteral(sourceMap)), t.objectProperty(t.identifier('toString'), cloneNode(t, state.emotionStringifiedCssId))]);\n        node = createSourceMapConditional(t, prodNode, devNode);\n      }\n\n      return node;\n    }\n\n    if (sourceMap) {\n      var lastIndex = path.node.arguments.length - 1;\n      var last = path.node.arguments[lastIndex];\n      var sourceMapConditional = createSourceMapConditional(t, t.stringLiteral(''), t.stringLiteral(sourceMap));\n\n      if (t.isStringLiteral(last)) {\n        path.node.arguments[lastIndex] = t.binaryExpression('+', last, sourceMapConditional);\n      } else {\n        var makeTemplateObjectCallPath = getTypeScriptMakeTemplateObjectPath(path);\n\n        if (makeTemplateObjectCallPath) {\n          var sourceMapId = state.file.scope.generateUidIdentifier('emotionSourceMap');\n          var sourceMapDeclaration = t.variableDeclaration('var', [t.variableDeclarator(sourceMapId, sourceMapConditional)]);\n          sourceMapDeclaration._compact = true;\n          state.file.path.unshiftContainer('body', [sourceMapDeclaration]);\n          makeTemplateObjectCallPath.get('arguments').forEach(function (argPath) {\n            var elements = argPath.get('elements');\n            var lastElement = elements[elements.length - 1];\n            lastElement.replaceWith(t.binaryExpression('+', lastElement.node, cloneNode(t, sourceMapId)));\n          });\n        } else if (!isTaggedTemplateTranspiledByBabel(path)) {\n          path.node.arguments.push(sourceMapConditional);\n        }\n      }\n    }\n  }\n};\n\nvar getKnownProperties = function getKnownProperties(t, node) {\n  return new Set(node.properties.filter(function (n) {\n    return t.isObjectProperty(n) && !n.computed;\n  }).map(function (n) {\n    return t.isIdentifier(n.key) ? n.key.name : n.key.value;\n  }));\n};\n\nvar getStyledOptions = function getStyledOptions(t, path, state) {\n  var args = path.node.arguments;\n  var optionsArgument = args.length >= 2 ? args[1] : null;\n  var properties = [];\n  var knownProperties = optionsArgument && t.isObjectExpression(optionsArgument) ? getKnownProperties(t, optionsArgument) : new Set();\n\n  if (!knownProperties.has('target')) {\n    properties.push(t.objectProperty(t.identifier('target'), t.stringLiteral(getTargetClassName(state))));\n  }\n\n  var label = getLabelFromPath(path, state, t);\n\n  if (label && !knownProperties.has('label')) {\n    properties.push(t.objectProperty(t.identifier('label'), t.stringLiteral(label)));\n  }\n\n  if (optionsArgument) {\n    if (!t.isObjectExpression(optionsArgument)) {\n      return t.callExpression(state.file.addHelper('extends'), [t.objectExpression([]), t.objectExpression(properties), optionsArgument]);\n    }\n\n    properties.unshift.apply(properties, optionsArgument.properties);\n  }\n\n  return t.objectExpression( // $FlowFixMe\n  properties);\n};\n\nvar createEmotionMacro = function createEmotionMacro(instancePath) {\n  return createMacro(function macro(_ref) {\n    var references = _ref.references,\n        state = _ref.state,\n        babel = _ref.babel,\n        isEmotionCall = _ref.isEmotionCall;\n\n    if (!isEmotionCall) {\n      state.emotionSourceMap = true;\n    }\n\n    var t = babel.types;\n    Object.keys(references).forEach(function (referenceKey) {\n      var isPure = true;\n      var runtimeNode = addNamed(state.file.path, referenceKey, instancePath);\n\n      switch (referenceKey) {\n        case 'injectGlobal':\n          {\n            isPure = false;\n          }\n        // eslint-disable-next-line no-fallthrough\n\n        case 'css':\n        case 'keyframes':\n          {\n            references[referenceKey].reverse().forEach(function (reference) {\n              var path = reference.parentPath;\n              reference.replaceWith(t.cloneDeep(runtimeNode));\n\n              if (isPure) {\n                path.addComment('leading', '#__PURE__');\n              }\n\n              var node = transformExpressionWithStyles({\n                babel: babel,\n                state: state,\n                path: path,\n                shouldLabel: true\n              });\n\n              if (node) {\n                path.node.arguments[0] = node;\n              }\n            });\n            break;\n          }\n\n        default:\n          {\n            references[referenceKey].reverse().forEach(function (reference) {\n              reference.replaceWith(t.cloneDeep(runtimeNode));\n            });\n          }\n      }\n    });\n  });\n};\n\nvar createStyledMacro = function createStyledMacro(_ref) {\n  var importPath = _ref.importPath,\n      _ref$originalImportPa = _ref.originalImportPath,\n      originalImportPath = _ref$originalImportPa === void 0 ? importPath : _ref$originalImportPa,\n      isWeb = _ref.isWeb;\n  return createMacro(function (_ref2) {\n    var references = _ref2.references,\n        state = _ref2.state,\n        babel = _ref2.babel,\n        isEmotionCall = _ref2.isEmotionCall;\n\n    if (!isEmotionCall) {\n      state.emotionSourceMap = true;\n    }\n\n    var t = babel.types;\n\n    if (references[\"default\"] && references[\"default\"].length) {\n      var _styledIdentifier;\n\n      var getStyledIdentifier = function getStyledIdentifier() {\n        if (_styledIdentifier === undefined) {\n          _styledIdentifier = addDefault(state.file.path, importPath, {\n            nameHint: 'styled'\n          });\n        }\n\n        return t.cloneDeep(_styledIdentifier);\n      };\n\n      var originalImportPathStyledIdentifier;\n\n      var getOriginalImportPathStyledIdentifier = function getOriginalImportPathStyledIdentifier() {\n        if (originalImportPathStyledIdentifier === undefined) {\n          originalImportPathStyledIdentifier = addDefault(state.file.path, originalImportPath, {\n            nameHint: 'styled'\n          });\n        }\n\n        return t.cloneDeep(originalImportPathStyledIdentifier);\n      };\n\n      if (importPath === originalImportPath) {\n        getOriginalImportPathStyledIdentifier = getStyledIdentifier;\n      }\n\n      references[\"default\"].forEach(function (reference) {\n        var isCall = false;\n\n        if (t.isMemberExpression(reference.parent) && reference.parent.computed === false) {\n          isCall = true;\n\n          if ( // checks if the first character is lowercase\n          // becasue we don't want to transform the member expression if\n          // it's in primitives/native\n          reference.parent.property.name.charCodeAt(0) > 96) {\n            reference.parentPath.replaceWith(t.callExpression(getStyledIdentifier(), [t.stringLiteral(reference.parent.property.name)]));\n          } else {\n            reference.replaceWith(getStyledIdentifier());\n          }\n        } else if (reference.parentPath && reference.parentPath.parentPath && t.isCallExpression(reference.parentPath) && reference.parent.callee === reference.node) {\n          isCall = true;\n          reference.replaceWith(getStyledIdentifier());\n        } else {\n          reference.replaceWith(getOriginalImportPathStyledIdentifier());\n        }\n\n        if (reference.parentPath && reference.parentPath.parentPath) {\n          var styledCallPath = reference.parentPath.parentPath;\n          var node = transformExpressionWithStyles({\n            path: styledCallPath,\n            state: state,\n            babel: babel,\n            shouldLabel: false\n          });\n\n          if (node && isWeb) {\n            // we know the argument length will be 1 since that's the only time we will have a node since it will be static\n            styledCallPath.node.arguments[0] = node;\n          }\n        }\n\n        if (isCall) {\n          reference.addComment('leading', '#__PURE__');\n\n          if (isWeb) {\n            reference.parentPath.node.arguments[1] = getStyledOptions(t, reference.parentPath, state);\n          }\n        }\n      });\n    }\n\n    Object.keys(references).filter(function (x) {\n      return x !== 'default';\n    }).forEach(function (referenceKey) {\n      var runtimeNode = addNamed(state.file.path, referenceKey, importPath);\n      references[referenceKey].reverse().forEach(function (reference) {\n        reference.replaceWith(t.cloneDeep(runtimeNode));\n      });\n    });\n  });\n};\n\nvar transformCssCallExpression = function transformCssCallExpression(_ref) {\n  var babel = _ref.babel,\n      state = _ref.state,\n      path = _ref.path,\n      sourceMap = _ref.sourceMap;\n  var node = transformExpressionWithStyles({\n    babel: babel,\n    state: state,\n    path: path,\n    shouldLabel: true,\n    sourceMap: sourceMap\n  });\n\n  if (node) {\n    path.replaceWith(node);\n    path.hoist();\n  } else if (path.isCallExpression()) {\n    path.addComment('leading', '#__PURE__');\n  }\n};\nvar cssMacro = createMacro(function (_ref2) {\n  var references = _ref2.references,\n      state = _ref2.state,\n      babel = _ref2.babel,\n      isEmotionCall = _ref2.isEmotionCall;\n\n  if (!isEmotionCall) {\n    state.emotionSourceMap = true;\n  }\n\n  var t = babel.types;\n\n  if (references[\"default\"] && references[\"default\"].length) {\n    references[\"default\"].reverse().forEach(function (reference) {\n      if (!state.cssIdentifier) {\n        state.cssIdentifier = addDefault(reference, '@emotion/css', {\n          nameHint: 'css'\n        });\n      }\n\n      reference.replaceWith(t.cloneDeep(state.cssIdentifier));\n      transformCssCallExpression({\n        babel: babel,\n        state: state,\n        path: reference.parentPath\n      });\n    });\n  }\n\n  Object.keys(references).filter(function (x) {\n    return x !== 'default';\n  }).forEach(function (referenceKey) {\n    var runtimeNode = addNamed(state.file.path, referenceKey, '@emotion/css', {\n      nameHint: referenceKey\n    });\n    references[referenceKey].reverse().forEach(function (reference) {\n      reference.replaceWith(t.cloneDeep(runtimeNode));\n    });\n  });\n});\n\nvar webStyledMacro = createStyledMacro({\n  importPath: '@emotion/styled-base',\n  originalImportPath: '@emotion/styled',\n  isWeb: true\n});\nvar nativeStyledMacro = createStyledMacro({\n  importPath: '@emotion/native',\n  originalImportPath: '@emotion/native',\n  isWeb: false\n});\nvar primitivesStyledMacro = createStyledMacro({\n  importPath: '@emotion/primitives',\n  originalImportPath: '@emotion/primitives',\n  isWeb: false\n});\nvar macros = {\n  createEmotionMacro: createEmotionMacro,\n  css: cssMacro,\n  createStyledMacro: createStyledMacro\n};\n\nvar emotionCoreMacroThatsNotARealMacro = function emotionCoreMacroThatsNotARealMacro(_ref) {\n  var references = _ref.references,\n      state = _ref.state,\n      babel = _ref.babel;\n  Object.keys(references).forEach(function (refKey) {\n    if (refKey === 'css') {\n      references[refKey].forEach(function (path) {\n        transformCssCallExpression({\n          babel: babel,\n          state: state,\n          path: path.parentPath\n        });\n      });\n    }\n  });\n};\n\nemotionCoreMacroThatsNotARealMacro.keepImport = true;\n\nfunction getAbsolutePath(instancePath, rootPath) {\n  if (instancePath.charAt(0) === '.') {\n    var absoluteInstancePath = nodePath.resolve(rootPath, instancePath);\n    return absoluteInstancePath;\n  }\n\n  return false;\n}\n\nfunction getInstancePathToCompare(instancePath, rootPath) {\n  var absolutePath = getAbsolutePath(instancePath, rootPath);\n\n  if (absolutePath === false) {\n    return instancePath;\n  }\n\n  return absolutePath;\n}\n\nfunction index (babel) {\n  var t = babel.types;\n  return {\n    name: 'emotion',\n    inherits: require('babel-plugin-syntax-jsx'),\n    visitor: {\n      ImportDeclaration: function ImportDeclaration(path, state) {\n        var hasFilepath = path.hub.file.opts.filename && path.hub.file.opts.filename !== 'unknown';\n        var dirname = hasFilepath ? nodePath.dirname(path.hub.file.opts.filename) : '';\n\n        if (!state.pluginMacros[path.node.source.value] && state.emotionInstancePaths.indexOf(getInstancePathToCompare(path.node.source.value, dirname)) !== -1) {\n          state.pluginMacros[path.node.source.value] = createEmotionMacro(path.node.source.value);\n        }\n\n        var pluginMacros = state.pluginMacros; // most of this is from https://github.com/kentcdodds/babel-plugin-macros/blob/master/src/index.js\n\n        if (pluginMacros[path.node.source.value] === undefined) {\n          return;\n        }\n\n        if (t.isImportNamespaceSpecifier(path.node.specifiers[0])) {\n          return;\n        }\n\n        var imports = path.node.specifiers.map(function (s) {\n          return {\n            localName: s.local.name,\n            importedName: s.type === 'ImportDefaultSpecifier' ? 'default' : s.imported.name\n          };\n        });\n        var shouldExit = false;\n        var hasReferences = false;\n        var referencePathsByImportName = imports.reduce(function (byName, _ref2) {\n          var importedName = _ref2.importedName,\n              localName = _ref2.localName;\n          var binding = path.scope.getBinding(localName);\n\n          if (!binding) {\n            shouldExit = true;\n            return byName;\n          }\n\n          byName[importedName] = binding.referencePaths;\n          hasReferences = hasReferences || Boolean(byName[importedName].length);\n          return byName;\n        }, {});\n\n        if (!hasReferences || shouldExit) {\n          return;\n        }\n        /**\n         * Other plugins that run before babel-plugin-macros might use path.replace, where a path is\n         * put into its own replacement. Apparently babel does not update the scope after such\n         * an operation. As a remedy, the whole scope is traversed again with an empty \"Identifier\"\n         * visitor - this makes the problem go away.\n         *\n         * See: https://github.com/kentcdodds/import-all.macro/issues/7\n         */\n\n\n        state.file.scope.path.traverse({\n          Identifier: function Identifier() {}\n        });\n        pluginMacros[path.node.source.value]({\n          references: referencePathsByImportName,\n          state: state,\n          babel: babel,\n          isBabelMacrosCall: true,\n          isEmotionCall: true\n        });\n\n        if (!pluginMacros[path.node.source.value].keepImport) {\n          path.remove();\n        }\n      },\n      Program: function Program(path, state) {\n        state.emotionInstancePaths = (state.opts.instances || []).map(function (instancePath) {\n          return getInstancePathToCompare(instancePath, process.cwd());\n        });\n        state.pluginMacros = {\n          '@emotion/css': cssMacro,\n          '@emotion/styled': webStyledMacro,\n          '@emotion/core': emotionCoreMacroThatsNotARealMacro,\n          '@emotion/primitives': primitivesStyledMacro,\n          '@emotion/native': nativeStyledMacro,\n          emotion: createEmotionMacro('emotion')\n        };\n\n        if (state.opts.cssPropOptimization === undefined) {\n          for (var _iterator = path.node.body, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref3;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref3 = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref3 = _i.value;\n            }\n\n            var node = _ref3;\n\n            if (t.isImportDeclaration(node) && node.source.value === '@emotion/core' && node.specifiers.some(function (x) {\n              return t.isImportSpecifier(x) && x.imported.name === 'jsx';\n            })) {\n              state.transformCssProp = true;\n              break;\n            }\n          }\n        } else {\n          state.transformCssProp = state.opts.cssPropOptimization;\n        }\n\n        if (state.opts.sourceMap === false) {\n          state.emotionSourceMap = false;\n        } else {\n          state.emotionSourceMap = true;\n        }\n      },\n      JSXAttribute: function JSXAttribute(path, state) {\n        if (path.node.name.name !== 'css' || !state.transformCssProp) {\n          return;\n        }\n\n        if (t.isJSXExpressionContainer(path.node.value) && (t.isObjectExpression(path.node.value.expression) || t.isArrayExpression(path.node.value.expression))) {\n          var expressionPath = path.get('value.expression');\n          var sourceMap = state.emotionSourceMap && path.node.loc !== undefined ? getSourceMap(path.node.loc.start, state) : '';\n          expressionPath.replaceWith(t.callExpression( // the name of this identifier doesn't really matter at all\n          // it'll never appear in generated code\n          t.identifier('___shouldNeverAppearCSS'), [path.node.value.expression]));\n          transformCssCallExpression({\n            babel: babel,\n            state: state,\n            path: expressionPath,\n            sourceMap: sourceMap\n          });\n\n          if (t.isCallExpression(expressionPath)) {\n            if (!state.cssIdentifier) {\n              state.cssIdentifier = addNamed(path, 'css', '@emotion/core', {\n                nameHint: 'css'\n              });\n            }\n\n            expressionPath.get('callee').replaceWith(t.cloneDeep(state.cssIdentifier));\n          }\n        }\n      },\n      CallExpression: {\n        exit: function exit(path, state) {\n          try {\n            if (path.node.callee && path.node.callee.property && path.node.callee.property.name === 'withComponent') {\n              switch (path.node.arguments.length) {\n                case 1:\n                case 2:\n                  {\n                    path.node.arguments[1] = getStyledOptions(t, path, state);\n                  }\n              }\n            }\n          } catch (e) {\n            throw path.buildCodeFrameError(e);\n          }\n        }\n      }\n    }\n  };\n}\n\nexport default index;\nexport { macros };\n", "module.exports = require('babel-plugin-emotion').macros.createStyledMacro({\n  importPath: '@emotion/styled-base',\n  originalImportPath: '@emotion/styled',\n  isWeb: true\n})\n"],
  "mappings": "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,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,IAAG,GAAE,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE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ACO,aAASC,kBACdX,QAA6B,MACR;AACrB,cAAO,GAAAf,cAAAA,SAAkC;QACvCC,MAAM;QACNc;MACF,CAAC;IACH;AACO,aAASY,oBAAyC;AACvD,aAAO;QACL1B,MAAM;MACR;IACF;AACO,aAAS2B,iBACdL,MACAX,MACoB;AACpB,cAAO,GAAAZ,cAAAA,SAAiC;QACtCC,MAAM;QACNsB;QACAX;MACF,CAAC;IACH;AACO,aAASiB,iBAAmC;AACjD,aAAO;QACL5B,MAAM;MACR;IACF;AACO,aAAS6B,oBACdC,YACuB;AACvB,cAAO,GAAA/B,cAAAA,SAAoC;QACzCC,MAAM;QACN8B;MACF,CAAC;IACH;AACO,aAASC,KACdC,UACAC,WAAyD,MACzDC,SAA4B,MACpB;AACR,cAAO,GAAAnC,cAAAA,SAAqB;QAC1BC,MAAM;QACNgC,SAAAA;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASC,eACdhC,MACAC,OACAO,MACkB;AAClB,cAAO,GAAAZ,cAAAA,SAA+B;QACpCC,MAAM;QACNG;QACAC;QACAO;MACF,CAAC;IACH;AACO,aAASyB,aACdC,OAAgE,MAChEf,OAAwC,MACxCgB,SAA0C,MAC1C3B,MACgB;AAChB,cAAO,GAAAZ,cAAAA,SAA6B;QAClCC,MAAM;QACNqC;QACAf;QACAgB;QACA3B;MACF,CAAC;IACH;AACO,aAAS4B,oBACdC,KAAsC,MACtCC,QACA9B,MACA+B,YAAqB,OACrBC,QAAiB,OACM;AACvB,cAAO,GAAA5C,cAAAA,SAAoC;QACzCC,MAAM;QACNwC;QACAC;QACA9B;QACA+B;QACAC;MACF,CAAC;IACH;AACO,aAASC,mBACdJ,KAAsC,MACtCC,QACA9B,MACA+B,YAAqB,OACrBC,QAAiB,OACK;AACtB,cAAO,GAAA5C,cAAAA,SAAmC;QACxCC,MAAM;QACNwC;QACAC;QACA9B;QACA+B;QACAC;MACF,CAAC;IACH;AACO,aAASE,WAAWC,MAA4B;AACrD,cAAO,GAAA/C,cAAAA,SAA2B;QAChCC,MAAM;QACN8C;MACF,CAAC;IACH;AACO,aAASC,YACdzB,MACAC,YACAC,YAAgC,MACjB;AACf,cAAO,GAAAzB,cAAAA,SAA4B;QACjCC,MAAM;QACNsB;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASwB,iBACdlC,OACAH,MACoB;AACpB,cAAO,GAAAZ,cAAAA,SAAiC;QACtCC,MAAM;QACNc;QACAH;MACF,CAAC;IACH;AACO,aAASsC,cAAc1C,QAAgC;AAC5D,cAAO,GAAAR,cAAAA,SAA8B;QACnCC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAAS2C,eAAe3C,QAAiC;AAC9D,cAAO,GAAAR,cAAAA,SAA+B;QACpCC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAAS4C,cAA6B;AAC3C,aAAO;QACLnD,MAAM;MACR;IACF;AACO,aAASoD,eAAe7C,QAAkC;AAC/D,cAAO,GAAAR,cAAAA,SAA+B;QACpCC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAAS8C,cACdC,SACAC,QAAgB,IACC;AACjB,cAAO,GAAAxD,cAAAA,SAA8B;QACnCC,MAAM;QACNsD;QACAC;MACF,CAAC;IACH;AACO,aAASC,kBACdtD,UACAC,MACAC,OACqB;AACrB,cAAO,GAAAL,cAAAA,SAAkC;QACvCC,MAAM;QACNE;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASqD,iBACdC,QACAC,UACAC,WAAoB,OACpBC,WAAgC,MACZ;AACpB,cAAO,GAAA9D,cAAAA,SAAiC;QACtCC,MAAM;QACN0D;QACAC;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASC,cACd9C,QACAC,YAGiB;AACjB,cAAO,GAAAlB,cAAAA,SAA8B;QACnCC,MAAM;QACNgB;QACAE,WAAWD;MACb,CAAC;IACH;AACO,aAASe,QACdrB,MACAC,aAAiC,CAAA,GACjCmD,aAAkC,UAClCC,cAA6C,MAClC;AACX,cAAO,GAAAjE,cAAAA,SAAwB;QAC7BC,MAAM;QACNW;QACAC;QACAmD;QACAC;QACAC,YAAY;MACd,CAAC;IACH;AACO,aAASC,iBACdC,YACoB;AACpB,cAAO,GAAApE,cAAAA,SAAiC;QACtCC,MAAM;QACNmE;MACF,CAAC;IACH;AACO,aAASC,aACdC,OAA6C,UAC7CC,KAMA7B,QACA9B,MACAiD,WAAoB,OACpBlB,YAAqB,OACrBC,QAAiB,OACD;AAChB,cAAO,GAAA5C,cAAAA,SAA6B;QAClCC,MAAM;QACNqE;QACAC;QACA7B;QACA9B;QACAiD;QACAlB;QACAC;MACF,CAAC;IACH;AACO,aAAS4B,eACdD,KAQA/D,QACAqD,WAAoB,OACpBY,YAAqB,OACrBC,aAAwC,MACtB;AAClB,cAAO,GAAA1E,cAAAA,SAA+B;QACpCC,MAAM;QACNsE;QACA/D,OAAAA;QACAqD;QACAY;QACAC;MACF,CAAC;IACH;AACO,aAASC,YAAYC,UAAiC;AAC3D,cAAO,GAAA5E,cAAAA,SAA4B;QACjCC,MAAM;QACN2E;MACF,CAAC;IACH;AACO,aAASC,gBACdD,WAAgC,MACb;AACnB,cAAO,GAAA5E,cAAAA,SAAgC;QACrCC,MAAM;QACN2E;MACF,CAAC;IACH;AACO,aAASE,mBACdC,aACsB;AACtB,cAAO,GAAA/E,cAAAA,SAAmC;QACxCC,MAAM;QACN8E;MACF,CAAC;IACH;AACO,aAASC,wBACdjD,YAC2B;AAC3B,cAAO,GAAA/B,cAAAA,SAAwC;QAC7CC,MAAM;QACN8B;MACF,CAAC;IACH;AACO,aAASkD,WACd1D,OAAwC,MACxCC,YACc;AACd,cAAO,GAAAxB,cAAAA,SAA2B;QAChCC,MAAM;QACNsB;QACAC;MACF,CAAC;IACH;AACO,aAAS0D,gBACdC,cACAC,OACmB;AACnB,cAAO,GAAApF,cAAAA,SAAgC;QACrCC,MAAM;QACNkF;QACAC;MACF,CAAC;IACH;AACO,aAASC,iBAAmC;AACjD,aAAO;QACLpF,MAAM;MACR;IACF;AACO,aAASqF,eAAeV,UAA0C;AACvE,cAAO,GAAA5E,cAAAA,SAA+B;QACpCC,MAAM;QACN2E;MACF,CAAC;IACH;AACO,aAASW,aACdC,OACAC,UAAgC,MAChCC,YAAqC,MACrB;AAChB,cAAO,GAAA1F,cAAAA,SAA6B;QAClCC,MAAM;QACNuF;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASC,gBACdxF,UACAyE,UACAgB,SAAkB,MACC;AACnB,cAAO,GAAA5F,cAAAA,SAAgC;QACrCC,MAAM;QACNE;QACAyE;QACAgB;MACF,CAAC;IACH;AACO,aAASC,iBACd1F,UACAyE,UACAgB,SAAkB,OACE;AACpB,cAAO,GAAA5F,cAAAA,SAAiC;QACtCC,MAAM;QACNE;QACAyE;QACAgB;MACF,CAAC;IACH;AACO,aAASE,oBACdxB,MACAyB,cACuB;AACvB,cAAO,GAAA/F,cAAAA,SAAoC;QACzCC,MAAM;QACNqE;QACAyB;MACF,CAAC;IACH;AACO,aAASC,mBACdvD,IACAH,OAA4B,MACN;AACtB,cAAO,GAAAtC,cAAAA,SAAmC;QACxCC,MAAM;QACNwC;QACAH;MACF,CAAC;IACH;AACO,aAAS2D,eACd1E,MACAX,MACkB;AAClB,cAAO,GAAAZ,cAAAA,SAA+B;QACpCC,MAAM;QACNsB;QACAX;MACF,CAAC;IACH;AACO,aAASsF,cACdvC,QACA/C,MACiB;AACjB,cAAO,GAAAZ,cAAAA,SAA8B;QACnCC,MAAM;QACN0D;QACA/C;MACF,CAAC;IACH;AACO,aAASuF,kBACd/F,MASAC,OACqB;AACrB,cAAO,GAAAL,cAAAA,SAAkC;QACvCC,MAAM;QACNG;QACAC;MACF,CAAC;IACH;AACO,aAAS+F,aACdrG,UACgB;AAChB,cAAO,GAAAC,cAAAA,SAA6B;QAClCC,MAAM;QACNF;MACF,CAAC;IACH;AACO,aAASsG,wBACd3D,QACA9B,MACAgC,QAAiB,OACU;AAC3B,cAAO,GAAA5C,cAAAA,SAAwC;QAC7CC,MAAM;QACNyC;QACA9B;QACAgC;QACAb,YAAY;MACd,CAAC;IACH;AACO,aAASuE,UACd1F,MAUa;AACb,cAAO,GAAAZ,cAAAA,SAA0B;QAC/BC,MAAM;QACNW;MACF,CAAC;IACH;AACO,aAAS2F,gBACd9D,KAAsC,MACtC+D,aAA8C,MAC9C5F,MACA8D,aAAwC,MACrB;AACnB,cAAO,GAAA1E,cAAAA,SAAgC;QACrCC,MAAM;QACNwC;QACA+D;QACA5F;QACA8D;MACF,CAAC;IACH;AACO,aAAS+B,iBACdhE,IACA+D,aAA8C,MAC9C5F,MACA8D,aAAwC,MACpB;AACpB,cAAO,GAAA1E,cAAAA,SAAiC;QACtCC,MAAM;QACNwC;QACA+D;QACA5F;QACA8D;MACF,CAAC;IACH;AACO,aAASgC,qBACdC,QACwB;AACxB,cAAO,GAAA3G,cAAAA,SAAqC;QAC1CC,MAAM;QACN0G;MACF,CAAC;IACH;AACO,aAASC,yBACdC,aAK4B;AAC5B,cAAO,GAAA7G,cAAAA,SAAyC;QAC9CC,MAAM;QACN4G;MACF,CAAC;IACH;AACO,aAASC,uBACdD,cAAoC,MACpCE,aAEI,CAAA,GACJJ,SAAiC,MACP;AAC1B,cAAO,GAAA3G,cAAAA,SAAuC;QAC5CC,MAAM;QACN4G;QACAE;QACAJ;MACF,CAAC;IACH;AACO,aAASK,gBACdC,OACAC,UACmB;AACnB,cAAO,GAAAlH,cAAAA,SAAgC;QACrCC,MAAM;QACNgH;QACAC;MACF,CAAC;IACH;AACO,aAASC,eACd/G,MACAC,OACAO,MACAwG,SAAkB,OACA;AAClB,cAAO,GAAApH,cAAAA,SAA+B;QACpCC,MAAM;QACNG;QACAC;QACAO;QACAyG,OAAOD;MACT,CAAC;IACH;AACO,aAASE,kBACdP,YAGAJ,QACqB;AACrB,cAAO,GAAA3G,cAAAA,SAAkC;QACvCC,MAAM;QACN8G;QACAJ;MACF,CAAC;IACH;AACO,aAASY,uBACdN,OAC0B;AAC1B,cAAO,GAAAjH,cAAAA,SAAuC;QAC5CC,MAAM;QACNgH;MACF,CAAC;IACH;AACO,aAASO,yBACdP,OAC4B;AAC5B,cAAO,GAAAjH,cAAAA,SAAyC;QAC9CC,MAAM;QACNgH;MACF,CAAC;IACH;AACO,aAASQ,gBACdR,OACAS,UACmB;AACnB,cAAO,GAAA1H,cAAAA,SAAgC;QACrCC,MAAM;QACNgH;QACAS;MACF,CAAC;IACH;AACO,aAASC,aACdC,MACAhE,UACgB;AAChB,cAAO,GAAA5D,cAAAA,SAA6B;QAClCC,MAAM;QACN2H;QACAhE;MACF,CAAC;IACH;AACO,aAASiE,YACdvD,OAA6D,UAC7DC,KAMA7B,QAGA9B,MACAiD,WAAoB,OACpBiE,UAAmB,OACnBnF,YAAqB,OACrBC,QAAiB,OACF;AACf,cAAO,GAAA5C,cAAAA,SAA4B;QACjCC,MAAM;QACNqE;QACAC;QACA7B;QACA9B;QACAiD;QACAkE,QAAQD;QACRnF;QACAC;MACF,CAAC;IACH;AACO,aAASoF,cACd5D,YACiB;AACjB,cAAO,GAAApE,cAAAA,SAA8B;QACnCC,MAAM;QACNmE;MACF,CAAC;IACH;AACO,aAAS6D,cAAcrD,UAAyC;AACrE,cAAO,GAAA5E,cAAAA,SAA8B;QACnCC,MAAM;QACN2E;MACF,CAAC;IACH;AACA,aAASsD,SAAkB;AACzB,aAAO;QACLjI,MAAM;MACR;IACF;AAEO,aAASkI,yBACdC,KACAC,OAC4B;AAC5B,cAAO,GAAArI,cAAAA,SAAyC;QAC9CC,MAAM;QACNmI;QACAC;MACF,CAAC;IACH;AACO,aAASC,gBACd9H,QACA+H,OAAgB,OACG;AACnB,cAAO,GAAAvI,cAAAA,SAAgC;QACrCC,MAAM;QACNO,OAAAA;QACA+H;MACF,CAAC;IACH;AACO,aAASC,gBACdC,QACA1D,aACmB;AACnB,cAAO,GAAA/E,cAAAA,SAAgC;QACrCC,MAAM;QACNwI;QACA1D;MACF,CAAC;IACH;AACO,aAAS2D,gBACd9D,WAAgC,MAChC+D,WAAoB,OACD;AACnB,cAAO,GAAA3I,cAAAA,SAAgC;QACrCC,MAAM;QACN2E;QACA+D;MACF,CAAC;IACH;AACO,aAASC,gBAAgBhE,UAA2C;AACzE,cAAO,GAAA5E,cAAAA,SAAgC;QACrCC,MAAM;QACN2E;MACF,CAAC;IACH;AACA,aAASiE,UAAoB;AAC3B,aAAO;QACL5I,MAAM;MACR;IACF;AAEO,aAAS6I,cAActI,QAAgC;AAC5D,cAAO,GAAAR,cAAAA,SAA8B;QACnCC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAASuI,yBACd7B,UAC4B;AAC5B,cAAO,GAAAlH,cAAAA,SAAyC;QAC9CC,MAAM;QACNiH;MACF,CAAC;IACH;AACO,aAAS8B,yBACdrF,QACAC,UACAC,WAAgC,OAChCC,UAC4B;AAC5B,cAAO,GAAA9D,cAAAA,SAAyC;QAC9CC,MAAM;QACN0D;QACAC;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASmF,uBACdhI,QACAC,YAGA4C,UAC0B;AAC1B,cAAO,GAAA9D,cAAAA,SAAuC;QAC5CC,MAAM;QACNgB;QACAE,WAAWD;QACX4C;MACF,CAAC;IACH;AACO,aAASoF,cACd3E,KAMA/D,SAA6B,MAC7B2I,kBAAwE,MACxEzE,aAAwC,MACxCb,WAAoB,OACpBiE,UAAmB,OACF;AACjB,cAAO,GAAA9H,cAAAA,SAA8B;QACnCC,MAAM;QACNsE;QACA/D,OAAAA;QACA2I,gBAAAA;QACAzE;QACAb;QACAkE,QAAQD;MACV,CAAC;IACH;AACO,aAASsB,sBACd7E,KAOA/D,SAA6B,MAC7B2I,kBAAwE,MACxEzE,aAAwC,MACxCb,WAAoB,OACpBiE,UAAmB,OACM;AACzB,cAAO,GAAA9H,cAAAA,SAAsC;QAC3CC,MAAM;QACNsE;QACA/D,OAAAA;QACA2I,gBAAAA;QACAzE;QACAb;QACAkE,QAAQD;MACV,CAAC;IACH;AACO,aAASuB,qBACd9E,KACA/D,SAA6B,MAC7BkE,aAAwC,MACxCoD,UAAmB,OACK;AACxB,cAAO,GAAA9H,cAAAA,SAAqC;QAC1CC,MAAM;QACNsE;QACA/D,OAAAA;QACAkE;QACAqD,QAAQD;MACV,CAAC;IACH;AACO,aAASwB,mBACdhF,OAA6C,UAC7CC,KACA7B,QAGA9B,MACAkH,UAAmB,OACG;AACtB,cAAO,GAAA9H,cAAAA,SAAmC;QACxCC,MAAM;QACNqE;QACAC;QACA7B;QACA9B;QACAmH,QAAQD;MACV,CAAC;IACH;AACO,aAASyB,YAAY9G,IAAiC;AAC3D,cAAO,GAAAzC,cAAAA,SAA4B;QACjCC,MAAM;QACNwC;MACF,CAAC;IACH;AACO,aAAS+G,YAAY5I,MAAyC;AACnE,cAAO,GAAAZ,cAAAA,SAA4B;QACjCC,MAAM;QACNW;MACF,CAAC;IACH;AACO,aAAS6I,oBAAyC;AACvD,aAAO;QACLxJ,MAAM;MACR;IACF;AACO,aAASyJ,oBACdC,aACuB;AACvB,cAAO,GAAA3J,cAAAA,SAAoC;QACzCC,MAAM;QACN0J;MACF,CAAC;IACH;AACO,aAASC,wBAAiD;AAC/D,aAAO;QACL3J,MAAM;MACR;IACF;AACO,aAAS4J,6BACdrJ,QACgC;AAChC,cAAO,GAAAR,cAAAA,SAA6C;QAClDC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAASsJ,4BAAyD;AACvE,aAAO;QACL7J,MAAM;MACR;IACF;AACO,aAAS8J,gBACdtH,IACAuH,iBAAsD,MACnC;AACnB,cAAO,GAAAhK,cAAAA,SAAgC;QACrCC,MAAM;QACNwC;QACAuH;MACF,CAAC;IACH;AACO,aAASC,aACdxH,IACAuH,iBAAgE,MAChEE,WAAyD,MACzDtJ,MACgB;AAChB,cAAO,GAAAZ,cAAAA,SAA6B;QAClCC,MAAM;QACNwC;QACAuH;QACAG,SAASD;QACTtJ;MACF,CAAC;IACH;AACO,aAASwJ,gBAAgB3H,IAAqC;AACnE,cAAO,GAAAzC,cAAAA,SAAgC;QACrCC,MAAM;QACNwC;MACF,CAAC;IACH;AACO,aAAS4H,iBACd5H,IACAuH,iBAAgE,MAChEE,WAAyD,MACzDtJ,MACoB;AACpB,cAAO,GAAAZ,cAAAA,SAAiC;QACtCC,MAAM;QACNwC;QACAuH;QACAG,SAASD;QACTtJ;MACF,CAAC;IACH;AACO,aAAS0J,cACd7H,IACA7B,MACA0D,OAAiC,MAChB;AACjB,cAAO,GAAAtE,cAAAA,SAA8B;QACnCC,MAAM;QACNwC;QACA7B;QACA0D;MACF,CAAC;IACH;AACO,aAASiG,qBACdpB,iBACwB;AACxB,cAAO,GAAAnJ,cAAAA,SAAqC;QAC1CC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AACO,aAASqB,iBACd/H,IACAuH,iBAAgE,MAChE3J,OACoB;AACpB,cAAO,GAAAL,cAAAA,SAAiC;QACtCC,MAAM;QACNwC;QACAuH;QACA3J;MACF,CAAC;IACH;AACO,aAASoK,kBACdhI,IACAuH,iBAAoD,MACpDU,YAA+B,MACV;AACrB,cAAO,GAAA1K,cAAAA,SAAkC;QACvCC,MAAM;QACNwC;QACAuH;QACAU;MACF,CAAC;IACH;AACO,aAASC,gBAAgBlI,IAAqC;AACnE,cAAO,GAAAzC,cAAAA,SAAgC;QACrCC,MAAM;QACNwC;MACF,CAAC;IACH;AACO,aAASmI,yBACd/D,cAA6B,MAC7BE,aAEW,MACXJ,SAAiC,MACL;AAC5B,cAAO,GAAA3G,cAAAA,SAAyC;QAC9CC,MAAM;QACN4G;QACAE;QACAJ;MACF,CAAC;IACH;AACO,aAASkE,4BACdlE,QAC+B;AAC/B,cAAO,GAAA3G,cAAAA,SAA4C;QACjDC,MAAM;QACN0G;MACF,CAAC;IACH;AACO,aAASmE,kBAAkBtK,QAAoC;AACpE,cAAO,GAAAR,cAAAA,SAAkC;QACvCC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAASuK,uBAA+C;AAC7D,aAAO;QACL9K,MAAM;MACR;IACF;AACO,aAAS+K,uBACdhB,iBAAgE,MAChEtH,QACAuI,OAA+C,MAC/CC,YAC0B;AAC1B,cAAO,GAAAlL,cAAAA,SAAuC;QAC5CC,MAAM;QACN+J;QACAtH;QACAuI;QACAC;MACF,CAAC;IACH;AACO,aAASC,kBACdpI,OAAwC,MACxCoG,iBACqB;AACrB,cAAO,GAAAnJ,cAAAA,SAAkC;QACvCC,MAAM;QACN8C;QACAoG,gBAAAA;MACF,CAAC;IACH;AACO,aAASiC,sBACd3I,IACAuH,iBAAsD,MAC7B;AACzB,cAAO,GAAAhK,cAAAA,SAAsC;QAC3CC,MAAM;QACNwC;QACAuH;MACF,CAAC;IACH;AACO,aAASqB,oBAAyC;AACvD,aAAO;QACLpL,MAAM;MACR;IACF;AACO,aAASqL,iBACd7I,IACAuH,iBAAsD,MAClC;AACpB,cAAO,GAAAhK,cAAAA,SAAiC;QACtCC,MAAM;QACNwC;QACAuH;MACF,CAAC;IACH;AACO,aAASuB,qBACd9I,IACAuH,iBAAgE,MAChEE,WAAyD,MACzDtJ,MACwB;AACxB,cAAO,GAAAZ,cAAAA,SAAqC;QAC1CC,MAAM;QACNwC;QACAuH;QACAG,SAASD;QACTtJ;MACF,CAAC;IACH;AACO,aAAS4K,wBACdtB,WAAyD,MACzDtJ,MAC2B;AAC3B,cAAO,GAAAZ,cAAAA,SAAwC;QAC7CC,MAAM;QACNkK,SAASD;QACTtJ;MACF,CAAC;IACH;AACO,aAAS6K,2BACdC,OAC8B;AAC9B,cAAO,GAAA1L,cAAAA,SAA2C;QAChDC,MAAM;QACNyL;MACF,CAAC;IACH;AACO,aAASC,sBAA6C;AAC3D,aAAO;QACL1L,MAAM;MACR;IACF;AACO,aAAS2L,sBAA6C;AAC3D,aAAO;QACL3L,MAAM;MACR;IACF;AACO,aAAS4L,uBACd1C,iBAC0B;AAC1B,cAAO,GAAAnJ,cAAAA,SAAuC;QAC5CC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AACO,aAAS2C,4BACdtL,QAC+B;AAC/B,cAAO,GAAAR,cAAAA,SAA4C;QACjDC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAASuL,uBAA+C;AAC7D,aAAO;QACL9L,MAAM;MACR;IACF;AACO,aAAS+L,qBACd5H,YACA6H,WAAuC,CAAA,GACvCC,iBAAkD,CAAA,GAClDC,gBAAiD,CAAA,GACjDC,QAAiB,OACO;AACxB,cAAO,GAAApM,cAAAA,SAAqC;QAC1CC,MAAM;QACNmE;QACA6H;QACAC;QACAC;QACAC;MACF,CAAC;IACH;AACO,aAASC,uBACd5J,IACAjC,QACAsD,UACAgE,SACAwE,QAC0B;AAC1B,cAAO,GAAAtM,cAAAA,SAAuC;QAC5CC,MAAM;QACNwC;QACAjC,OAAAA;QACAsD;QACAiE,QAAQD;QACRwE;MACF,CAAC;IACH;AACO,aAASC,uBACd/L,QAC0B;AAC1B,cAAO,GAAAR,cAAAA,SAAuC;QAC5CC,MAAM;QACNO,OAAAA;QACAuH,QAAQ;MACV,CAAC;IACH;AACO,aAASyE,kBACd/J,KAAsC,MACtC8B,KACA/D,QACAiM,YAA8B,MACT;AACrB,cAAO,GAAAzM,cAAAA,SAAkC;QACvCC,MAAM;QACNwC;QACA8B;QACA/D,OAAAA;QACAiM,UAAAA;QACA1E,QAAQ;MACV,CAAC;IACH;AACO,aAAS2E,mBACdnI,KACA/D,QACAiM,YAA8B,MACR;AACtB,cAAO,GAAAzM,cAAAA,SAAmC;QACxCC,MAAM;QACNsE;QACA/D,OAAAA;QACAiM,UAAAA;QACAnI,MAAM;QACNgI,QAAQ;QACRxI,UAAU;QACV6I,OAAO;QACP5E,QAAQ;MACV,CAAC;IACH;AACO,aAAS6E,yBACdhI,UAC4B;AAC5B,cAAO,GAAA5E,cAAAA,SAAyC;QAC9CC,MAAM;QACN2E;MACF,CAAC;IACH;AACO,aAASiI,WACdpK,IACAuH,iBAAgE,MAChEU,YAA2C,MAC3CoC,UACc;AACd,cAAO,GAAA9M,cAAAA,SAA2B;QAChCC,MAAM;QACNwC;QACAuH;QACAU;QACAoC;MACF,CAAC;IACH;AACO,aAASC,wBACdtK,IACAuK,eAC2B;AAC3B,cAAO,GAAAhN,cAAAA,SAAwC;QAC7CC,MAAM;QACNwC;QACAuK;MACF,CAAC;IACH;AACO,aAASC,4BACdzM,QAC+B;AAC/B,cAAO,GAAAR,cAAAA,SAA4C;QACjDC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAAS0M,uBAA+C;AAC7D,aAAO;QACLjN,MAAM;MACR;IACF;AACO,aAASkN,uBAA+C;AAC7D,aAAO;QACLlN,MAAM;MACR;IACF;AACO,aAASmN,qBAA2C;AACzD,aAAO;QACLnN,MAAM;MACR;IACF;AACO,aAASoN,oBACd3B,OACuB;AACvB,cAAO,GAAA1L,cAAAA,SAAoC;QACzCC,MAAM;QACNyL;MACF,CAAC;IACH;AACO,aAAS4B,qBACd1I,UACwB;AACxB,cAAO,GAAA5E,cAAAA,SAAqC;QAC1CC,MAAM;QACN2E;MACF,CAAC;IACH;AACO,aAAS2I,UACd9K,IACAuH,iBAAgE,MAChE3J,OACa;AACb,cAAO,GAAAL,cAAAA,SAA0B;QAC/BC,MAAM;QACNwC;QACAuH;QACA3J;MACF,CAAC;IACH;AACO,aAAS8I,eAAeA,iBAA8C;AAC3E,cAAO,GAAAnJ,cAAAA,SAA+B;QACpCC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AACO,aAASqE,mBACdzL,YACAoH,iBACsB;AACtB,cAAO,GAAAnJ,cAAAA,SAAmC;QACxCC,MAAM;QACN8B;QACAoH,gBAAAA;MACF,CAAC;IACH;AACO,aAASsE,cACdC,QAAiC,MACjCC,WAA8B,MAC9BlB,YAA8B,MACb;AACjB,cAAO,GAAAzM,cAAAA,SAA8B;QACnCC,MAAM;QACNyN;QACAE,SAASD;QACTlB,UAAAA;QACA1J,MAAM;MACR,CAAC;IACH;AACO,aAAS8K,yBACdnL,QAC4B;AAC5B,cAAO,GAAA1C,cAAAA,SAAyC;QAC9CC,MAAM;QACNyC;MACF,CAAC;IACH;AACO,aAASoL,2BACdpL,QAC8B;AAC9B,cAAO,GAAA1C,cAAAA,SAA2C;QAChDC,MAAM;QACNyC;MACF,CAAC;IACH;AACO,aAASqL,oBACdrC,OACuB;AACvB,cAAO,GAAA1L,cAAAA,SAAoC;QACzCC,MAAM;QACNyL;MACF,CAAC;IACH;AACO,aAASe,SAASnI,MAAoC;AAC3D,cAAO,GAAAtE,cAAAA,SAAyB;QAC9BC,MAAM;QACNqE;MACF,CAAC;IACH;AACO,aAAS0J,qBAA2C;AACzD,aAAO;QACL/N,MAAM;MACR;IACF;AACO,aAASgO,gBACdxL,IACA7B,MAKmB;AACnB,cAAO,GAAAZ,cAAAA,SAAgC;QACrCC,MAAM;QACNwC;QACA7B;MACF,CAAC;IACH;AACO,aAASsN,gBACdC,SACmB;AACnB,cAAO,GAAAnO,cAAAA,SAAgC;QACrCC,MAAM;QACNkO;QACAC,cAAc;QACdC,mBAAmB;MACrB,CAAC;IACH;AACO,aAASC,eACdH,SACkB;AAClB,cAAO,GAAAnO,cAAAA,SAA+B;QACpCC,MAAM;QACNkO;QACAC,cAAc;QACdC,mBAAmB;MACrB,CAAC;IACH;AACO,aAASE,eACdJ,SACkB;AAClB,cAAO,GAAAnO,cAAAA,SAA+B;QACpCC,MAAM;QACNkO;QACAC,cAAc;QACdC,mBAAmB;MACrB,CAAC;IACH;AACO,aAASG,eACdL,SACkB;AAClB,cAAO,GAAAnO,cAAAA,SAA+B;QACpCC,MAAM;QACNkO;QACAE,mBAAmB;MACrB,CAAC;IACH;AACO,aAASI,kBAAkBhM,IAAuC;AACvE,cAAO,GAAAzC,cAAAA,SAAkC;QACvCC,MAAM;QACNwC;QACAH,MAAM;MACR,CAAC;IACH;AACO,aAASoM,iBACdjM,IACAH,MACoB;AACpB,cAAO,GAAAtC,cAAAA,SAAiC;QACtCC,MAAM;QACNwC;QACAH;MACF,CAAC;IACH;AACO,aAASqM,iBACdlM,IACAH,MACoB;AACpB,cAAO,GAAAtC,cAAAA,SAAiC;QACtCC,MAAM;QACNwC;QACAH;MACF,CAAC;IACH;AACO,aAASsM,oBAAoBnM,IAAyC;AAC3E,cAAO,GAAAzC,cAAAA,SAAoC;QACzCC,MAAM;QACNwC;MACF,CAAC;IACH;AACO,aAASoM,kBACdC,YACAC,WACqB;AACrB,cAAO,GAAA/O,cAAAA,SAAkC;QACvCC,MAAM;QACN6O;QACAC;MACF,CAAC;IACH;AACO,aAASC,0BACdF,YACAC,WAC6B;AAC7B,cAAO,GAAA/O,cAAAA,SAA0C;QAC/CC,MAAM;QACN6O;QACAC;QACAjL,UAAU;MACZ,CAAC;IACH;AACO,aAASmL,aACdlM,MACAvC,SAKW,MACK;AAChB,cAAO,GAAAR,cAAAA,SAA6B;QAClCC,MAAM;QACN8C;QACAvC,OAAAA;MACF,CAAC;IACH;AAEO,aAAS0O,kBACdnM,MACqB;AACrB,cAAO,GAAA/C,cAAAA,SAAkC;QACvCC,MAAM;QACN8C;MACF,CAAC;IACH;AAEO,aAASoM,WACdC,gBACAC,iBAAyD,MACzDC,UAOAC,cAA8B,MAChB;AACd,cAAO,GAAAvP,cAAAA,SAA2B;QAChCC,MAAM;QACNmP;QACAC;QACAC;QACAC;MACF,CAAC;IACH;AAEO,aAASC,qBAA2C;AACzD,aAAO;QACLvP,MAAM;MACR;IACF;AAEO,aAASwP,uBACd1N,YAC0B;AAC1B,cAAO,GAAA/B,cAAAA,SAAuC;QAC5CC,MAAM;QACN8B;MACF,CAAC;IACH;AAEO,aAAS2N,eAAe3N,YAA4C;AACzE,cAAO,GAAA/B,cAAAA,SAA+B;QACpCC,MAAM;QACN8B;MACF,CAAC;IACH;AAEO,aAAS4N,cAAc5M,MAA+B;AAC3D,cAAO,GAAA/C,cAAAA,SAA8B;QACnCC,MAAM;QACN8C;MACF,CAAC;IACH;AAEO,aAAS6M,oBACdjM,QACAC,UACuB;AACvB,cAAO,GAAA5D,cAAAA,SAAoC;QACzCC,MAAM;QACN0D;QACAC;MACF,CAAC;IACH;AAEO,aAASiM,kBACdC,WACA/M,MACqB;AACrB,cAAO,GAAA/C,cAAAA,SAAkC;QACvCC,MAAM;QACN6P;QACA/M;MACF,CAAC;IACH;AAEO,aAASgN,kBACdhN,MACAiN,YACAT,cAAuB,OACF;AACrB,cAAO,GAAAvP,cAAAA,SAAkC;QACvCC,MAAM;QACN8C;QACAiN;QACAT;MACF,CAAC;IACH;AAEO,aAASU,mBACdrL,UACsB;AACtB,cAAO,GAAA5E,cAAAA,SAAmC;QACxCC,MAAM;QACN2E;MACF,CAAC;IACH;AAEO,aAASsL,QAAQ1P,QAA0B;AAChD,cAAO,GAAAR,cAAAA,SAAwB;QAC7BC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AAEO,aAAS2P,YACdC,iBACAC,iBACAf,UAOe;AACf,cAAO,GAAAtP,cAAAA,SAA4B;QACjCC,MAAM;QACNmQ;QACAC;QACAf;MACF,CAAC;IACH;AAEO,aAASgB,qBAA2C;AACzD,aAAO;QACLrQ,MAAM;MACR;IACF;AAEO,aAASsQ,qBAA2C;AACzD,aAAO;QACLtQ,MAAM;MACR;IACF;AAEO,aAASuQ,OAAe;AAC7B,aAAO;QACLvQ,MAAM;MACR;IACF;AACO,aAASwQ,YACdC,cASA3N,MACe;AACf,cAAO,GAAA/C,cAAAA,SAA4B;QACjCC,MAAM;QACNyQ;QACA3N;MACF,CAAC;IACH;AACO,aAAS4N,sBAAsB5N,MAAuC;AAC3E,cAAO,GAAA/C,cAAAA,SAAsC;QAC3CC,MAAM;QACN8C;MACF,CAAC;IACH;AACO,aAAS6N,sBAA6C;AAC3D,aAAO;QACL3Q,MAAM;MACR;IACF;AACO,aAAS4Q,eACdlN,QACA1C,QACkB;AAClB,cAAO,GAAAjB,cAAAA,SAA+B;QACpCC,MAAM;QACN0D;QACA1C;MACF,CAAC;IACH;AACO,aAAS6P,gBACdvM,KACA/D,QACmB;AACnB,cAAO,GAAAR,cAAAA,SAAgC;QACrCC,MAAM;QACNsE;QACA/D,OAAAA;MACF,CAAC;IACH;AACO,aAASuQ,UAAUhP,YAAuC;AAC/D,cAAO,GAAA/B,cAAAA,SAA0B;QAC/BC,MAAM;QACN8B;MACF,CAAC;IACH;AACO,aAASiP,aACdpQ,MACAgC,QAAiB,OACD;AAChB,cAAO,GAAA5C,cAAAA,SAA6B;QAClCC,MAAM;QACNW;QACAgC;MACF,CAAC;IACH;AACO,aAASqO,uBACd/J,UAC0B;AAC1B,cAAO,GAAAlH,cAAAA,SAAuC;QAC5CC,MAAM;QACNiH;MACF,CAAC;IACH;AACO,aAASgK,iBACd9M,YACoB;AACpB,cAAO,GAAApE,cAAAA,SAAiC;QACtCC,MAAM;QACNmE;MACF,CAAC;IACH;AACO,aAAS+M,gBACdpR,WAAkD,CAAA,GAC/B;AACnB,cAAO,GAAAC,cAAAA,SAAgC;QACrCC,MAAM;QACNF;MACF,CAAC;IACH;AACO,aAASqR,eAAe5Q,QAAiC;AAC9D,cAAO,GAAAR,cAAAA,SAA+B;QACpCC,MAAM;QACNO,OAAAA;MACF,CAAC;IACH;AACO,aAAS6Q,iBAAiBzQ,MAAqC;AACpE,cAAO,GAAAZ,cAAAA,SAAiC;QACtCC,MAAM;QACNW;MACF,CAAC;IACH;AACO,aAAS0Q,iBAAmC;AACjD,aAAO;QACLrR,MAAM;MACR;IACF;AACO,aAASsR,wBACdxP,YAC2B;AAC3B,cAAO,GAAA/B,cAAAA,SAAwC;QAC7CC,MAAM;QACN8B;MACF,CAAC;IACH;AACO,aAASyP,qBACdvQ,QACwB;AACxB,cAAO,GAAAjB,cAAAA,SAAqC;QAC1CC,MAAM;QACNgB;MACF,CAAC;IACH;AACO,aAASwQ,gCAAiE;AAC/E,aAAO;QACLxR,MAAM;MACR;IACF;AACO,aAASyR,oBACdC,WACuB;AACvB,cAAO,GAAA3R,cAAAA,SAAoC;QACzCC,MAAM;QACN0R;MACF,CAAC;IACH;AAEO,aAASC,kBACdnP,KAAsC,MACtCuH,iBAIgB,MAChBtH,QACAwI,aAAiD,MAC5B;AACrB,cAAO,GAAAlL,cAAAA,SAAkC;QACvCC,MAAM;QACNwC;QACAuH;QACAtH;QACAwI;MACF,CAAC;IACH;AAEO,aAAS2G,gBACdnN,aAAoD,MACpDH,KAMAyF,iBAIgB,MAChBtH,QAGAwI,aAAiD,MAC9B;AACnB,cAAO,GAAAlL,cAAAA,SAAgC;QACrCC,MAAM;QACNyE;QACAH;QACAyF;QACAtH;QACAwI;MACF,CAAC;IACH;AAEO,aAAS4G,gBACd1R,MACAC,OACmB;AACnB,cAAO,GAAAL,cAAAA,SAAgC;QACrCC,MAAM;QACNG;QACAC;MACF,CAAC;IACH;AAEO,aAAS0R,2BACd/H,iBAAkE,MAClEgI,YACA7I,kBAA4C,MACd;AAC9B,cAAO,GAAAnJ,cAAAA,SAA2C;QAChDC,MAAM;QACN+J;QACAgI;QACA7I,gBAAAA;MACF,CAAC;IACH;AAEO,aAAS8I,gCACdjI,iBAAkE,MAClEgI,YACA7I,kBAA4C,MACT;AACnC,cAAO,GAAAnJ,cAAAA,SAAgD;QACrDC,MAAM;QACN+J;QACAgI;QACA7I,gBAAAA;MACF,CAAC;IACH;AAEO,aAAS+I,oBACd3N,KACA4E,kBAA4C,MAC5CgJ,cAAmC,MACZ;AACvB,cAAO,GAAAnS,cAAAA,SAAoC;QACzCC,MAAM;QACNsE;QACA4E,gBAAAA;QACAgJ;QACA7N,MAAM;MACR,CAAC;IACH;AAEO,aAAS8N,kBACd7N,KACAyF,iBAAkE,MAClEgI,YACA7I,kBAA4C,MACvB;AACrB,cAAO,GAAAnJ,cAAAA,SAAkC;QACvCC,MAAM;QACNsE;QACAyF;QACAgI;QACA7I,gBAAAA;QACA7E,MAAM;MACR,CAAC;IACH;AAEO,aAAS+N,iBACdL,YACA7I,kBAA4C,MACxB;AACpB,cAAO,GAAAnJ,cAAAA,SAAiC;QACtCC,MAAM;QACN+R;QACA7I,gBAAAA;MACF,CAAC;IACH;AAEO,aAASmJ,eAA+B;AAC7C,aAAO;QACLrS,MAAM;MACR;IACF;AAEO,aAASsS,mBAAuC;AACrD,aAAO;QACLtS,MAAM;MACR;IACF;AAEO,aAASuS,kBAAqC;AACnD,aAAO;QACLvS,MAAM;MACR;IACF;AAEO,aAASwS,qBAA2C;AACzD,aAAO;QACLxS,MAAM;MACR;IACF;AAEO,aAASyS,iBAAmC;AACjD,aAAO;QACLzS,MAAM;MACR;IACF;AAEO,aAAS0S,gBAAiC;AAC/C,aAAO;QACL1S,MAAM;MACR;IACF;AAEO,aAAS2S,kBAAqC;AACnD,aAAO;QACL3S,MAAM;MACR;IACF;AAEO,aAAS4S,kBAAqC;AACnD,aAAO;QACL5S,MAAM;MACR;IACF;AAEO,aAAS6S,kBAAqC;AACnD,aAAO;QACL7S,MAAM;MACR;IACF;AAEO,aAAS8S,kBAAqC;AACnD,aAAO;QACL9S,MAAM;MACR;IACF;AAEO,aAAS+S,qBAA2C;AACzD,aAAO;QACL/S,MAAM;MACR;IACF;AAEO,aAASgT,mBAAuC;AACrD,aAAO;QACLhT,MAAM;MACR;IACF;AAEO,aAASiT,gBAAiC;AAC/C,aAAO;QACLjT,MAAM;MACR;IACF;AAEO,aAASkT,aAA2B;AACzC,aAAO;QACLlT,MAAM;MACR;IACF;AAEO,aAASmT,eACdpJ,iBAAkE,MAClEgI,YACA7I,kBAA4C,MAC1B;AAClB,cAAO,GAAAnJ,cAAAA,SAA+B;QACpCC,MAAM;QACN+J;QACAgI;QACA7I,gBAAAA;MACF,CAAC;IACH;AAEO,aAASkK,kBACdrJ,iBAAkE,MAClEgI,YACA7I,kBAA4C,MACvB;AACrB,cAAO,GAAAnJ,cAAAA,SAAkC;QACvCC,MAAM;QACN+J;QACAgI;QACA7I,gBAAAA;MACF,CAAC;IACH;AAEO,aAASmK,gBACdC,UACAvJ,iBAAwD,MACrC;AACnB,cAAO,GAAAhK,cAAAA,SAAgC;QACrCC,MAAM;QACNsT;QACAvJ;MACF,CAAC;IACH;AAEO,aAASwJ,gBACdC,eACAtK,kBAA4C,MAC5CuK,UAA0B,MACP;AACnB,cAAO,GAAA1T,cAAAA,SAAgC;QACrCC,MAAM;QACNwT;QACAtK,gBAAAA;QACAuK;MACF,CAAC;IACH;AAEO,aAASC,YACdC,UACA5J,iBAAwD,MACzC;AACf,cAAO,GAAAhK,cAAAA,SAA4B;QACjCC,MAAM;QACN2T;QACA5J;MACF,CAAC;IACH;AAEO,aAAS6J,cACd1F,SACiB;AACjB,cAAO,GAAAnO,cAAAA,SAA8B;QACnCC,MAAM;QACNkO;MACF,CAAC;IACH;AAEO,aAAS2F,YAAYnK,aAAsC;AAChE,cAAO,GAAA3J,cAAAA,SAA4B;QACjCC,MAAM;QACN0J;MACF,CAAC;IACH;AAEO,aAASoK,YACdC,cACe;AACf,cAAO,GAAAhU,cAAAA,SAA4B;QACjCC,MAAM;QACN+T;MACF,CAAC;IACH;AAEO,aAASC,eAAe9K,iBAA4C;AACzE,cAAO,GAAAnJ,cAAAA,SAA+B;QACpCC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AAEO,aAAS+K,WAAW/K,iBAAwC;AACjE,cAAO,GAAAnJ,cAAAA,SAA2B;QAChCC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AAEO,aAASgL,mBACdpT,OACA4I,aACA7F,WAAoB,OACE;AACtB,cAAO,GAAA9D,cAAAA,SAAmC;QACxCC,MAAM;QACNc;QACA4I;QACA7F;MACF,CAAC;IACH;AAEO,aAASsQ,YAAY1I,OAAuC;AACjE,cAAO,GAAA1L,cAAAA,SAA4B;QACjCC,MAAM;QACNyL;MACF,CAAC;IACH;AAEO,aAAS2I,mBACd3I,OACsB;AACtB,cAAO,GAAA1L,cAAAA,SAAmC;QACxCC,MAAM;QACNyL;MACF,CAAC;IACH;AAEO,aAAS4I,kBACdC,WACAC,aACAC,UACAC,WACqB;AACrB,cAAO,GAAA1U,cAAAA,SAAkC;QACvCC,MAAM;QACNsU;QACAC;QACAC;QACAC;MACF,CAAC;IACH;AAEO,aAASC,YAAYlH,gBAAiD;AAC3E,cAAO,GAAAzN,cAAAA,SAA4B;QACjCC,MAAM;QACNwN,eAAAA;MACF,CAAC;IACH;AAEO,aAASmH,oBACdzL,iBACuB;AACvB,cAAO,GAAAnJ,cAAAA,SAAoC;QACzCC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AAEO,aAAS0L,eAAe1L,iBAA4C;AACzE,cAAO,GAAAnJ,cAAAA,SAA+B;QACpCC,MAAM;QACNkJ,gBAAAA;QACAhJ,UAAU;MACZ,CAAC;IACH;AAEO,aAAS2U,oBACdhG,YACAC,WACuB;AACvB,cAAO,GAAA/O,cAAAA,SAAoC;QACzCC,MAAM;QACN6O;QACAC;MACF,CAAC;IACH;AAEO,aAASgG,aACdtH,gBACAtE,kBAAkC,MAClC6L,WAA4B,MACZ;AAChB,cAAO,GAAAhV,cAAAA,SAA6B;QAClCC,MAAM;QACNwN,eAAAA;QACAtE,gBAAAA;QACA6L;MACF,CAAC;IACH;AAEO,aAASC,cACdC,SAOiB;AACjB,cAAO,GAAAlV,cAAAA,SAA8B;QACnCC,MAAM;QACNiV;MACF,CAAC;IACH;AAEO,aAASC,8BACdpT,YACAiI,iBAAwD,MACvB;AACjC,cAAO,GAAAhK,cAAAA,SAA8C;QACnDC,MAAM;QACN8B;QACAiI;MACF,CAAC;IACH;AAEO,aAASoL,uBACd3S,IACAuH,iBAAkE,MAClEE,WAAsE,MACtEtJ,MAC0B;AAC1B,cAAO,GAAAZ,cAAAA,SAAuC;QAC5CC,MAAM;QACNwC;QACAuH;QACAG,SAASD;QACTtJ;MACF,CAAC;IACH;AAEO,aAASyU,gBACdzU,MACmB;AACnB,cAAO,GAAAZ,cAAAA,SAAgC;QACrCC,MAAM;QACNW;MACF,CAAC;IACH;AAEO,aAAS0U,uBACd7S,IACAuH,iBAAkE,MAClEb,iBAC0B;AAC1B,cAAO,GAAAnJ,cAAAA,SAAuC;QAC5CC,MAAM;QACNwC;QACAuH;QACAb,gBAAAA;MACF,CAAC;IACH;AAEO,aAASoM,0BACdxT,YACAiI,iBAAwD,MAC3B;AAC7B,cAAO,GAAAhK,cAAAA,SAA0C;QAC/CC,MAAM;QACN8B;QACAiI;MACF,CAAC;IACH;AAEO,aAASwL,eACdzT,YACAoH,iBACkB;AAClB,cAAO,GAAAnJ,cAAAA,SAA+B;QACpCC,MAAM;QACN8B;QACAoH,gBAAAA;MACF,CAAC;IACH;AAEO,aAASsM,sBACd1T,YACAoH,iBACyB;AACzB,cAAO,GAAAnJ,cAAAA,SAAsC;QAC3CC,MAAM;QACN8B;QACAoH,gBAAAA;MACF,CAAC;IACH;AAEO,aAASuM,gBACdvM,iBACApH,YACmB;AACnB,cAAO,GAAA/B,cAAAA,SAAgC;QACrCC,MAAM;QACNkJ,gBAAAA;QACApH;MACF,CAAC;IACH;AAEO,aAAS4T,kBACdlT,IACA0L,SACqB;AACrB,cAAO,GAAAnO,cAAAA,SAAkC;QACvCC,MAAM;QACNwC;QACA0L;MACF,CAAC;IACH;AAEO,aAASyH,aACdnT,IACA0P,cAAmC,MACnB;AAChB,cAAO,GAAAnS,cAAAA,SAA6B;QAClCC,MAAM;QACNwC;QACA0P;MACF,CAAC;IACH;AAEO,aAAS0D,oBACdpT,IACA7B,MACuB;AACvB,cAAO,GAAAZ,cAAAA,SAAoC;QACzCC,MAAM;QACNwC;QACA7B;MACF,CAAC;IACH;AAEO,aAASkV,cAAclV,MAA2C;AACvE,cAAO,GAAAZ,cAAAA,SAA8B;QACnCC,MAAM;QACNW;MACF,CAAC;IACH;AAEO,aAASmV,aACdnR,UACAoR,YAAmC,MACnChM,iBAAwD,MACxC;AAChB,cAAO,GAAAhK,cAAAA,SAA6B;QAClCC,MAAM;QACN2E;QACAoR;QACAhM;MACF,CAAC;IACH;AAEO,aAASiM,0BACdxT,IACAyT,iBAC6B;AAC7B,cAAO,GAAAlW,cAAAA,SAA0C;QAC/CC,MAAM;QACNwC;QACAyT;QACAC,UAAU;MACZ,CAAC;IACH;AAEO,aAASC,0BACdrU,YAC6B;AAC7B,cAAO,GAAA/B,cAAAA,SAA0C;QAC/CC,MAAM;QACN8B;MACF,CAAC;IACH;AAEO,aAASsU,oBACdtU,YACuB;AACvB,cAAO,GAAA/B,cAAAA,SAAoC;QACzCC,MAAM;QACN8B;MACF,CAAC;IACH;AAEO,aAASuU,mBACdvU,YACsB;AACtB,cAAO,GAAA/B,cAAAA,SAAmC;QACxCC,MAAM;QACN8B;MACF,CAAC;IACH;AAEO,aAASwU,6BACd9T,IACgC;AAChC,cAAO,GAAAzC,cAAAA,SAA6C;QAClDC,MAAM;QACNwC;MACF,CAAC;IACH;AAEO,aAAS+T,iBAAiBrN,iBAA8C;AAC7E,cAAO,GAAAnJ,cAAAA,SAAiC;QACtCC,MAAM;QACNkJ,gBAAAA;MACF,CAAC;IACH;AAEO,aAASsN,6BACd/T,QACgC;AAChC,cAAO,GAAA1C,cAAAA,SAA6C;QAClDC,MAAM;QACNyC;MACF,CAAC;IACH;AAEO,aAASgU,2BACdhU,QAC8B;AAC9B,cAAO,GAAA1C,cAAAA,SAA2C;QAChDC,MAAM;QACNyC;MACF,CAAC;IACH;AAEO,aAASiU,gBACdC,aAA0C,MAC1CjJ,WAAwC,MACxC5K,MACmB;AACnB,cAAO,GAAA/C,cAAAA,SAAgC;QACrCC,MAAM;QACN2W;QACAhJ,SAASD;QACT5K;MACF,CAAC;IACH;AAGA,aAAS8T,cAAcrW,QAAe;AACpC,OAAA,GAAAsW,oBAAAA,SAAmB,iBAAiB,kBAAkB,gBAAgB;AACtE,aAAO3T,eAAe3C,MAAK;IAC7B;AAGA,aAASuW,aAAaxT,SAAiBC,QAAgB,IAAI;AACzD,OAAA,GAAAsT,oBAAAA,SAAmB,gBAAgB,iBAAiB,gBAAgB;AACpE,aAAOxT,cAAcC,SAASC,KAAK;IACrC;AAGA,aAASwT,aAAapS,UAAkB;AACtC,OAAA,GAAAkS,oBAAAA,SAAmB,gBAAgB,eAAe,gBAAgB;AAClE,aAAOnS,YAAYC,QAAQ;IAC7B;AAGA,aAASqS,eAAerS,UAAwB;AAC9C,OAAA,GAAAkS,oBAAAA,SAAmB,kBAAkB,iBAAiB,gBAAgB;AACtE,aAAO7O,cAAcrD,QAAQ;IAC/B;;;;;;;;;;;;AC1+EA,QAAAsS,aAAAC;AAEA,QAAAC,IAAAD;AAEe,aAASE,4BACtBC,OACAC,MACA;AACA,YAAMC,QAAQF,MAAMG,MAAMC,MAAM,YAAY;AAE5C,UAAIC,mBAAmB;AAEvB,eAASC,IAAI,GAAGA,IAAIJ,MAAMK,QAAQD,KAAK;AACrC,YAAIJ,MAAMI,CAAC,EAAEE,MAAM,QAAQ,GAAG;AAC5BH,6BAAmBC;QACrB;MACF;AAEA,UAAIG,MAAM;AAEV,eAASH,IAAI,GAAGA,IAAIJ,MAAMK,QAAQD,KAAK;AACrC,cAAMI,OAAOR,MAAMI,CAAC;AAEpB,cAAMK,cAAcL,MAAM;AAC1B,cAAMM,aAAaN,MAAMJ,MAAMK,SAAS;AACxC,cAAMM,qBAAqBP,MAAMD;AAGjC,YAAIS,cAAcJ,KAAKK,QAAQ,OAAO,GAAG;AAGzC,YAAI,CAACJ,aAAa;AAChBG,wBAAcA,YAAYC,QAAQ,SAAS,EAAE;QAC/C;AAGA,YAAI,CAACH,YAAY;AACfE,wBAAcA,YAAYC,QAAQ,SAAS,EAAE;QAC/C;AAEA,YAAID,aAAa;AACf,cAAI,CAACD,oBAAoB;AACvBC,2BAAe;UACjB;AAEAL,iBAAOK;QACT;MACF;AAEA,UAAIL;AAAKR,aAAKe,MAAK,GAAAC,EAAAA,WAAS,GAAAC,WAAAA,eAAcT,GAAG,GAAGT,KAAK,CAAC;IACxD;;;;;;;;;;;;AClDA,QAAAmB,aAAAC;AAKA,QAAAC,+BAAAD;AASe,aAASE,cACtBC,MACiB;AACjB,YAAMC,WAAW,CAAA;AAEjB,eAASC,IAAI,GAAGA,IAAIF,KAAKG,SAASC,QAAQF,KAAK;AAC7C,YAAIG,QAAaL,KAAKG,SAASD,CAAC;AAEhC,aAAI,GAAAI,WAAAA,WAAUD,KAAK,GAAG;AACpB,WAAA,GAAAE,6BAAAA,SAA4BF,OAAOJ,QAAQ;AAC3C;QACF;AAEA,aAAI,GAAAO,WAAAA,0BAAyBH,KAAK;AAAGA,kBAAQA,MAAMI;AACnD,aAAI,GAAAC,WAAAA,sBAAqBL,KAAK;AAAG;AAEjCJ,iBAASU,KAAKN,KAAK;MACrB;AAEA,aAAOJ;IACT;;;;;;;;;;;;AClCA,QAAAW,eAAAC;AAGe,aAASC,OAAOC,MAA2B;AACxD,aAAO,CAAC,EAAEA,QAAQC,aAAAA,aAAaD,KAAKE,IAAI;IAC1C;;;;;;;;;;;;ACLA,QAAAC,UAAAC;AAGe,aAASC,WAAWC,MAAoC;AACrE,UAAI,EAAC,GAAAC,QAAAA,SAAOD,IAAI,GAAG;AAAA,YAAAE;AACjB,cAAMC,QAAID,aAAGF,QAAI,OAAA,SAAJA,KAAMG,SAAI,OAAAD,aAAIE,KAAKC,UAAUL,IAAI;AAC9C,cAAM,IAAIM,UAAW,6BAA4BH,OAAO;MAC1D;IACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA,QAAAI,MAAAC;AAEA,QAAAC,sBAAAD;AAEA,aAASE,OAAOC,MAAcC,MAAWC,MAAkB;AACzD,UAAI,EAAC,GAAAC,IAAAA,SAAGH,MAAMC,MAAMC,IAAI,GAAG;AACzB,cAAM,IAAIE,MACP,kBAAiBJ,qBAAqBK,KAAKC,UAAUJ,IAAI,uBACpCD,KAAKD,QAC7B;MACF;IACF;AAEO,aAASO,sBACdN,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASM,2BACdP,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASO,uBACdR,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASQ,2BACdT,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASS,gBACdV,MACAC,MAC6B;AAC7BH,aAAO,aAAaE,MAAMC,IAAI;IAChC;AACO,aAASU,uBACdX,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASW,qBACdZ,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASY,qBACdb,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASa,qBACdd,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASc,kBACdf,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAASe,4BACdhB,MACAC,MACyC;AACzCH,aAAO,yBAAyBE,MAAMC,IAAI;IAC5C;AACO,aAASgB,wBACdjB,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASiB,wBACdlB,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASkB,uBACdnB,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASmB,qBACdpB,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASoB,0BACdrB,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASqB,WACdtB,MACAC,MACwB;AACxBH,aAAO,QAAQE,MAAMC,IAAI;IAC3B;AACO,aAASsB,qBACdvB,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASuB,mBACdxB,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASwB,0BACdzB,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASyB,yBACd1B,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS0B,iBACd3B,MACAC,MAC8B;AAC9BH,aAAO,cAAcE,MAAMC,IAAI;IACjC;AACO,aAAS2B,kBACd5B,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAAS4B,uBACd7B,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAAS6B,oBACd9B,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAAS8B,qBACd/B,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAAS+B,kBACdhC,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAASgC,qBACdjC,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASiC,oBACdlC,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASkC,wBACdnC,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASmC,uBACdpC,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASoC,oBACdrC,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASqC,cACdtC,MACAC,MAC2B;AAC3BH,aAAO,WAAWE,MAAMC,IAAI;IAC9B;AACO,aAASsC,uBACdvC,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASuC,mBACdxC,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASwC,qBACdzC,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASyC,kBACd1C,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAAS0C,sBACd3C,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS2C,yBACd5C,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS4C,8BACd7C,MACAC,MAC2C;AAC3CH,aAAO,2BAA2BE,MAAMC,IAAI;IAC9C;AACO,aAAS6C,iBACd9C,MACAC,MAC8B;AAC9BH,aAAO,cAAcE,MAAMC,IAAI;IACjC;AACO,aAAS8C,sBACd/C,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS+C,qBACdhD,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASgD,qBACdjD,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASiD,mBACdlD,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASkD,sBACdnD,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASmD,uBACdpD,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASoD,0BACdrD,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASqD,yBACdtD,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASsD,qBACdvD,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASuD,oBACdxD,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASwD,wBACdzD,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASyD,mBACd1D,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAAS0D,8BACd3D,MACAC,MAC2C;AAC3CH,aAAO,2BAA2BE,MAAMC,IAAI;IAC9C;AACO,aAAS2D,gBACd5D,MACAC,MAC6B;AAC7BH,aAAO,aAAaE,MAAMC,IAAI;IAChC;AACO,aAAS4D,sBACd7D,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS6D,uBACd9D,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAAS8D,2BACd/D,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAAS+D,+BACdhE,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAASgE,6BACdjE,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAASiE,sBACdlE,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASkE,qBACdnE,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASmE,wBACdpE,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASoE,6BACdrE,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAASqE,+BACdtE,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAASsE,sBACdvE,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASuE,mBACdxE,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASwE,kBACdzE,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAASyE,oBACd1E,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAAS0E,oBACd3E,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAAS2E,YACd5E,MACAC,MACyB;AACzBH,aAAO,SAASE,MAAMC,IAAI;IAC5B;AACO,aAAS4E,+BACd7E,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAAS6E,sBACd9E,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS8E,sBACd/E,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS+E,sBACdhF,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASgF,sBACdjF,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASiF,aACdlF,MACAC,MAC0B;AAC1BH,aAAO,UAAUE,MAAMC,IAAI;IAC7B;AACO,aAASkF,oBACdnF,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASmF,+BACdpF,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAASoF,+BACdrF,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAASqF,6BACdtF,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAASsF,oBACdvF,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASuF,4BACdxF,MACAC,MACyC;AACzCH,aAAO,yBAAyBE,MAAMC,IAAI;IAC5C;AACO,aAASwF,2BACdzF,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASyF,yBACd1F,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS0F,kBACd3F,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAAS2F,kBACd5F,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAAS4F,wBACd7F,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAAS6F,0BACd9F,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAAS8F,4BACd/F,MACAC,MACyC;AACzCH,aAAO,yBAAyBE,MAAMC,IAAI;IAC5C;AACO,aAAS+F,mCACdhG,MACAC,MACgD;AAChDH,aAAO,gCAAgCE,MAAMC,IAAI;IACnD;AACO,aAASgG,gCACdjG,MACAC,MAC6C;AAC7CH,aAAO,6BAA6BE,MAAMC,IAAI;IAChD;AACO,aAASiG,sBACdlG,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASkG,mBACdnG,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASmG,sBACdpG,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASoG,uBACdrG,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASqG,oBACdtG,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASsG,2BACdvG,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASuG,uBACdxG,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASwG,wBACdzG,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASyG,sBACd1G,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS0G,+BACd3G,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAAS2G,kCACd5G,MACAC,MAC+C;AAC/CH,aAAO,+BAA+BE,MAAMC,IAAI;IAClD;AACO,aAAS4G,wBACd7G,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAAS6G,2BACd9G,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAAS8G,6BACd/G,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAAS+G,wBACdhH,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASgH,4BACdjH,MACAC,MACyC;AACzCH,aAAO,yBAAyBE,MAAMC,IAAI;IAC5C;AACO,aAASiH,wBACdlH,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASkH,uBACdnH,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASmH,2BACdpH,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASoH,8BACdrH,MACAC,MAC2C;AAC3CH,aAAO,2BAA2BE,MAAMC,IAAI;IAC9C;AACO,aAASqH,iCACdtH,MACAC,MAC8C;AAC9CH,aAAO,8BAA8BE,MAAMC,IAAI;IACjD;AACO,aAASsH,0BACdvH,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASuH,0BACdxH,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASwH,6BACdzH,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAASyH,kCACd1H,MACAC,MAC+C;AAC/CH,aAAO,+BAA+BE,MAAMC,IAAI;IAClD;AACO,aAAS0H,2BACd3H,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAAS2H,2BACd5H,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAAS4H,6BACd7H,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAAS6H,6BACd9H,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAAS8H,wBACd/H,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAAS+H,yBACdhI,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASgI,+BACdjI,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAASiI,iBACdlI,MACAC,MAC8B;AAC9BH,aAAO,cAAcE,MAAMC,IAAI;IACjC;AACO,aAASkI,8BACdnI,MACAC,MAC2C;AAC3CH,aAAO,2BAA2BE,MAAMC,IAAI;IAC9C;AACO,aAASmI,kCACdpI,MACAC,MAC+C;AAC/CH,aAAO,+BAA+BE,MAAMC,IAAI;IAClD;AACO,aAASoI,2BACdrI,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASqI,2BACdtI,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASsI,yBACdvI,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASuI,0BACdxI,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASwI,2BACdzI,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAASyI,gBACd1I,MACAC,MAC6B;AAC7BH,aAAO,aAAaE,MAAMC,IAAI;IAChC;AACO,aAAS0I,qBACd3I,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAAS2I,yBACd5I,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS4I,oBACd7I,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAAS6I,+BACd9I,MACAC,MAC4C;AAC5CH,aAAO,4BAA4BE,MAAMC,IAAI;IAC/C;AACO,aAAS8I,iCACd/I,MACAC,MAC8C;AAC9CH,aAAO,8BAA8BE,MAAMC,IAAI;IACjD;AACO,aAAS+I,0BACdhJ,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASgJ,eACdjJ,MACAC,MAC4B;AAC5BH,aAAO,YAAYE,MAAMC,IAAI;IAC/B;AACO,aAASiJ,yBACdlJ,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASkJ,sBACdnJ,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASmJ,sBACdpJ,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASoJ,qBACdrJ,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASqJ,qBACdtJ,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASsJ,qBACdvJ,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASuJ,wBACdxJ,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASwJ,uBACdzJ,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASyJ,uBACd1J,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAAS0J,0BACd3J,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAAS2J,wBACd5J,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAAS4J,gCACd7J,MACAC,MAC6C;AAC7CH,aAAO,6BAA6BE,MAAMC,IAAI;IAChD;AACO,aAAS6J,mBACd9J,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAAS8J,wBACd/J,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAAS+J,iBACdhK,MACAC,MAC8B;AAC9BH,aAAO,cAAcE,MAAMC,IAAI;IACjC;AACO,aAASgK,yBACdjK,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASiK,6BACdlK,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAASkK,qBACdnK,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASmK,oBACdpK,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAASoK,0BACdrK,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASqK,wBACdtK,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASsK,wBACdvK,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASuK,yBACdxK,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASwK,cACdzK,MACAC,MAC2B;AAC3BH,aAAO,WAAWE,MAAMC,IAAI;IAC9B;AACO,aAASyK,kBACd1K,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAAS0K,yBACd3K,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS2K,yBACd5K,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS4K,WACd7K,MACAC,MACwB;AACxBH,aAAO,QAAQE,MAAMC,IAAI;IAC3B;AACO,aAAS6K,kBACd9K,MACAC,MAC+B;AAC/BH,aAAO,eAAeE,MAAMC,IAAI;IAClC;AACO,aAAS8K,4BACd/K,MACAC,MACyC;AACzCH,aAAO,yBAAyBE,MAAMC,IAAI;IAC5C;AACO,aAAS+K,0BACdhL,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASgL,qBACdjL,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASiL,sBACdlL,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASkL,gBACdnL,MACAC,MAC6B;AAC7BH,aAAO,aAAaE,MAAMC,IAAI;IAChC;AACO,aAASmL,mBACdpL,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASoL,6BACdrL,MACAC,MAC0C;AAC1CH,aAAO,0BAA0BE,MAAMC,IAAI;IAC7C;AACO,aAASqL,uBACdtL,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASsL,sBACdvL,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASuL,qBACdxL,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAASwL,uBACdzL,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASyL,qBACd1L,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAAS0L,8BACd3L,MACAC,MAC2C;AAC3CH,aAAO,2BAA2BE,MAAMC,IAAI;IAC9C;AACO,aAAS2L,2BACd5L,MACAC,MACwC;AACxCH,aAAO,wBAAwBE,MAAMC,IAAI;IAC3C;AACO,aAAS4L,oCACd7L,MACAC,MACiD;AACjDH,aAAO,iCAAiCE,MAAMC,IAAI;IACpD;AACO,aAAS6L,0BACd9L,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAAS8L,wBACd/L,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAAS+L,sBACdhM,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASgM,sBACdjM,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASiM,iCACdlM,MACAC,MAC8C;AAC9CH,aAAO,8BAA8BE,MAAMC,IAAI;IACjD;AACO,aAASkM,sCACdnM,MACAC,MACmD;AACnDH,aAAO,mCAAmCE,MAAMC,IAAI;IACtD;AACO,aAASmM,0BACdpM,MACAC,MACuC;AACvCH,aAAO,uBAAuBE,MAAMC,IAAI;IAC1C;AACO,aAASoM,wBACdrM,MACAC,MACqC;AACrCH,aAAO,qBAAqBE,MAAMC,IAAI;IACxC;AACO,aAASqM,uBACdtM,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASsM,mBACdvM,MACAC,MACgC;AAChCH,aAAO,gBAAgBE,MAAMC,IAAI;IACnC;AACO,aAASuM,uBACdxM,MACAC,MACoC;AACpCH,aAAO,oBAAoBE,MAAMC,IAAI;IACvC;AACO,aAASwM,sBACdzM,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASyM,yBACd1M,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAAS0M,qBACd3M,MACAC,MACkC;AAClCH,aAAO,kBAAkBE,MAAMC,IAAI;IACrC;AACO,aAAS2M,oBACd5M,MACAC,MACiC;AACjCH,aAAO,iBAAiBE,MAAMC,IAAI;IACpC;AACO,aAAS4M,sBACd7M,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS6M,sBACd9M,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS8M,sBACd/M,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAAS+M,sBACdhN,MACAC,MACmC;AACnCH,aAAO,mBAAmBE,MAAMC,IAAI;IACtC;AACO,aAASgN,yBACdjN,MACAC,MACsC;AACtCH,aAAO,sBAAsBE,MAAMC,IAAI;IACzC;AACO,aAASiN,uBACdlN,MACAC,MACoC;A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",
  "names": ["index", "set", "SourceMapGenerator", "sourceFile", "map", "index", "index", "value", "needle", "section", "SourceMapGenerator", "map", "json", "value", "m", "findRoot", "require_util", "x", "warned", "set", "value", "timestamp", "value", "strict", "shallowEqual", "actual", "expected", "keys", "Object", "key", "warnings", "Set", "deprecationWarning", "oldName", "newName", "prefix", "has", "add", "internal", "trace", "captureShortStackTrace", "console", "warn", "skip", "length", "stackTraceLimit", "prepareStackTrace", "Error", "stackTrace", "err", "stack", "shortStackTrace", "slice", "test", "getFileName", "map", "frame", "join", "_shallowEqual", "require", "_deprecationWarning", "isArrayExpression", "node", "opts", "type", "shallowEqual", "isAssignmentExpression", "isBinaryExpression", "isInterpreterDirective", "isDirective", "isDirectiveLiteral", "isBlockStatement", "isBreakStatement", "isCallExpression", "isCatchClause", "isConditionalExpression", "isContinueStatement", "isDebuggerStatement", "isDoWhileStatement", "isEmptyStatement", "isExpressionStatement", "isFile", "isForInStatement", "isForStatement", "isFunctionDeclaration", "isFunctionExpression", "isIdentifier", "isIfStatement", "isLabeledStatement", "isStringLiteral", "isNumericLiteral", "isNullLiteral", "isBooleanLiteral", "isRegExpLiteral", "isLogicalExpression", "isMemberExpression", "isNewExpression", "isProgram", "isObjectExpression", "isObjectMethod", "isObjectProperty", "isRestElement", "isReturnStatement", "isSequenceExpression", "isParenthesizedExpression", "isSwitchCase", "isSwitchStatement", "isThisExpression", "isThrowStatement", "isTryStatement", "isUnaryExpression", "isUpdateExpression", "isVariableDeclaration", "isVariableDeclarator", "isWhileStatement", "isWithStatement", "isAssignmentPattern", "isArrayPattern", "isArrowFunctionExpression", "isClassBody", "isClassExpression", "isClassDeclaration", "isExportAllDeclaration", "isExportDefaultDeclaration", "isExportNamedDeclaration", "isExportSpecifier", "isForOfStatement", "isImportDeclaration", "isImportDefaultSpecifier", "isImportNamespaceSpecifier", "isImportSpecifier", "isMetaProperty", "isClassMethod", "isObjectPattern", "isSpreadElement", "isSuper", "isTaggedTemplateExpression", "isTemplateElement", "isTemplateLiteral", "isYieldExpression", "isAwaitExpression", "isImport", "isBigIntLiteral", "isExportNamespaceSpecifier", "isOptionalMemberExpression", "isOptionalCallExpression", "isClassProperty", "isClassAccessorProperty", "isClassPrivateProperty", "isClassPrivateMethod", "isPrivateName", "isStaticBlock", "isAnyTypeAnnotation", "isArrayTypeAnnotation", "isBooleanTypeAnnotation", "isBooleanLiteralTypeAnnotation", "isNullLiteralTypeAnnotation", "isClassImplements", "isDeclareClass", "isDeclareFunction", "isDeclareInterface", "isDeclareModule", "isDeclareModuleExports", "isDeclareTypeAlias", "isDeclareOpaqueType", "isDeclareVariable", "isDeclareExportDeclaration", "isDeclareExportAllDeclaration", "isDeclaredPredicate", "isExistsTypeAnnotation", "isFunctionTypeAnnotation", "isFunctionTypeParam", "isGenericTypeAnnotation", "isInferredPredicate", "isInterfaceExtends", "isInterfaceDeclaration", "isInterfaceTypeAnnotation", "isIntersectionTypeAnnotation", "isMixedTypeAnnotation", "isEmptyTypeAnnotation", "isNullableTypeAnnotation", "isNumberLiteralTypeAnnotation", "isNumberTypeAnnotation", "isObjectTypeAnnotation", "isObjectTypeInternalSlot", "isObjectTypeCallProperty", "isObjectTypeIndexer", "isObjectTypeProperty", "isObjectTypeSpreadProperty", "isOpaqueType", "isQualifiedTypeIdentifier", "isStringLiteralTypeAnnotation", "isStringTypeAnnotation", "isSymbolTypeAnnotation", "isThisTypeAnnotation", "isTupleTypeAnnotation", "isTypeofTypeAnnotation", "isTypeAlias", "isTypeAnnotation", "isTypeCastExpression", "isTypeParameter", "isTypeParameterDeclaration", "isTypeParameterInstantiation", "isUnionTypeAnnotation", "isVariance", "isVoidTypeAnnotation", "isEnumDeclaration", "isEnumBooleanBody", "isEnumNumberBody", "isEnumStringBody", "isEnumSymbolBody", "isEnumBooleanMember", "isEnumNumberMember", "isEnumStringMember", "isEnumDefaultedMember", "isIndexedAccessType", "isOptionalIndexedAccessType", "isJSXAttribute", "isJSXClosingElement", "isJSXElement", "isJSXEmptyExpression", "isJSXExpressionContainer", "isJSXSpreadChild", "isJSXIdentifier", "isJSXMemberExpression", "isJSXNamespacedName", "isJSXOpeningElement", "isJSXSpreadAttribute", "isJSXText", "isJSXFragment", "isJSXOpeningFragment", "isJSXClosingFragment", "isNoop", "isPlaceholder", "isV8IntrinsicIdentifier", "isArgumentPlaceholder", "isBindExpression", "isImportAttribute", "isDecorator", "isDoExpression", "isExportDefaultSpecifier", "isRecordExpression", "isTupleExpression", "isDecimalLiteral", "isModuleExpression", "isTopicReference", "isPipelineTopicExpression", "isPipelineBareFunction", "isPipelinePrimaryTopicReference", "isTSParameterProperty", "isTSDeclareFunction", "isTSDeclareMethod", "isTSQualifiedName", "isTSCallSignatureDeclaration", "isTSConstructSignatureDeclaration", "isTSPropertySignature", "isTSMethodSignature", "isTSIndexSignature", "isTSAnyKeyword", "isTSBooleanKeyword", "isTSBigIntKeyword", "isTSIntrinsicKeyword", "isTSNeverKeyword", "isTSNullKeyword", "isTSNumberKeyword", "isTSObjectKeyword", "isTSStringKeyword", "isTSSymbolKeyword", "isTSUndefinedKeyword", "isTSUnknownKeyword", "isTSVoidKeyword", "isTSThisType", "isTSFunctionType", "isTSConstructorType", "isTSTypeReference", "isTSTypePredicate", "isTSTypeQuery", "isTSTypeLiteral", "isTSArrayType", "isTSTupleType", "isTSOptionalType", "isTSRestType", "isTSNamedTupleMember", "isTSUnionType", "isTSIntersectionType", "isTSConditionalType", "isTSInferType", "isTSParenthesizedType", "isTSTypeOperator", "isTSIndexedAccessType", "isTSMappedType", "isTSLiteralType", "isTSExpressionWithTypeArguments", "isTSInterfaceDeclaration", "isTSInterfaceBody", "isTSTypeAliasDeclaration", "isTSInstantiationExpression", "isTSAsExpression", "isTSSatisfiesExpression", "isTSTypeAssertion", "isTSEnumDeclaration", "isTSEnumMember", "isTSModuleDeclaration", "isTSModuleBlock", "isTSImportType", "isTSImportEqualsDeclaration", "isTSExternalModuleReference", "isTSNonNullExpression", "isTSExportAssignment", "isTSNamespaceExportDeclaration", "isTSTypeAnnotation", "isTSTypeParameterInstantiation", "isTSTypeParameterDeclaration", "isTSTypeParameter", "isStandardized", "expectedNode", "isExpression", "isBinary", "isScopable", "isBlockParent", "isBlock", "isStatement", "isTerminatorless", "isCompletionStatement", "isConditional", "isLoop", "isWhile", "isExpressionWrapper", "isFor", "isForXStatement", "isFunction", "isFunctionParent", "isPureish", "isDeclaration", "isPatternLike", "isLVal", "isTSEntityName", "isLiteral", "isImmutable", "isUserWhitespacable", "isMethod", "isObjectMember", "isProperty", "isUnaryLike", "isPattern", "isClass", "isImportOrExportDeclaration", "isExportDeclaration", "isModuleSpecifier", "isAccessor", "isPrivate", "isFlow", "isFlowType", "isFlowBaseAnnotation", "isFlowDeclaration", "isFlowPredicate", "isEnumBody", "isEnumMember", "isJSX", "isMiscellaneous", "isTypeScript", "isTSTypeElement", "isTSType", "isTSBaseType", "isNumberLiteral", "deprecationWarning", "isRegexLiteral", "isRestProperty", "isSpreadProperty", "isModuleDeclaration", "_generated", "require", "matchesPattern", "member", "match", "allowPartial", "isMemberExpression", "parts", "Array", "isArray", "split", "nodes", "node", "object", "push", "property", "length", "i", "j", "value", "isIdentifier", "name", "isStringLiteral", "isThisExpression", "_matchesPattern", "require", "buildMatchMemberExpression", "match", "allowPartial", "parts", "split", "member", "matchesPattern", "_buildMatchMemberExpression", "require", "isReactComponent", "buildMatchMemberExpression", "_default", "exports", "default", "isCompatTag", "tagName", "test", "_definitions", "require", "isType", "nodeType", "targetType", "ALIAS_KEYS", "aliases", "FLIPPED_ALIAS_KEYS", "alias", "_definitions", "require", "isPlaceholderType", "placeholderType", "targetType", "aliases", "PLACEHOLDERS_ALIAS", "alias", "_shallowEqual", "require", "_isType", "_isPlaceholderType", "_definitions", "is", "type", "node", "opts", "matches", "isType", "FLIPPED_ALIAS_KEYS", "isPlaceholderType", "expectedNode", "shallowEqual", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "RegExp", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "code", "set", "pos", "i", "length", "isIdentifierStart", "test", "String", "fromCharCode", "isIdentifierChar", "isIdentifierName", "name", "isFirst", "cp", "charCodeAt", "trail", "reservedWords", "keyword", "strict", "strictBind", "keywords", "Set", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "_identifier", "require", "_keyword", "_helperValidatorIdentifier", "require", "isValidIdentifier", "name", "reserved", "isKeyword", "isStrictReservedWord", "isIdentifierName", "isDigit", "code", "forbiddenNumericSeparatorSiblings", "decBinOct", "Set", "hex", "isAllowedNumericSeparatorSibling", "bin", "ch", "oct", "dec", "readStringContents", "type", "input", "pos", "lineStart", "curLine", "errors", "initialPos", "initialLineStart", "initialCurLine", "out", "firstInvalidLoc", "chunkStart", "length", "unterminated", "slice", "charCodeAt", "isStringEnd", "res", "readEscapedChar", "str", "containsInvalid", "inTemplate", "throwOnInvalid", "readHexChar", "String", "fromCharCode", "readCodePoint", "fromCodePoint", "strictNumericEscape", "startPos", "match", "octalStr", "octal", "parseInt", "next", "len", "forceLen", "n", "readInt", "invalidEscapeSequence", "radix", "allowNumSeparator", "bailOnError", "start", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "i", "e", "Infinity", "val", "prev", "numericSeparatorInEscapeSequence", "Number", "isNaN", "has", "unexpectedNumericSeparator", "_isDigit", "invalidDigit", "indexOf", "invalidCodePoint", "STATEMENT_OR_BLOCK_KEYS", "exports", "FLATTENABLE_KEYS", "FOR_INIT_KEYS", "COMMENT_KEYS", "LOGICAL_OPERATORS", "UPDATE_OPERATORS", "BOOLEAN_NUMBER_BINARY_OPERATORS", "EQUALITY_BINARY_OPERATORS", "COMPARISON_BINARY_OPERATORS", "BOOLEAN_BINARY_OPERATORS", "NUMBER_BINARY_OPERATORS", "BINARY_OPERATORS", "ASSIGNMENT_OPERATORS", "map", "op", "BOOLEAN_UNARY_OPERATORS", "NUMBER_UNARY_OPERATORS", "STRING_UNARY_OPERATORS", "UNARY_OPERATORS", "INHERIT_KEYS", "optional", "force", "BLOCK_SCOPED_SYMBOL", "Symbol", "for", "NOT_LOCAL_BINDING", "_is", "require", "_validate", "VISITOR_KEYS", "exports", "ALIAS_KEYS", "FLIPPED_ALIAS_KEYS", "NODE_FIELDS", "BUILDER_KEYS", "DEPRECATED_KEYS", "NODE_PARENT_VALIDATIONS", "getType", "val", "Array", "isArray", "validate", "typeIs", "typeName", "assertNodeType", "validateType", "validateOptional", "optional", "validateOptionalType", "arrayOf", "elementType", "chain", "assertValueType", "assertEach", "arrayOfType", "validateArrayOfType", "callback", "validator", "node", "key", "i", "length", "subkey", "v", "process", "env", "BABEL_TYPES_8_BREAKING", "validateChild", "each", "assertOneOf", "values", "indexOf", "TypeError", "JSON", "stringify", "oneOf", "types", "type", "is", "oneOfNodeTypes", "assertNodeOrValueType", "oneOfNodeOrValueTypes", "valid", "assertShape", "shape", "errors", "property", "Object", "keys", "validateField", "error", "push", "message", "join", "shapeOf", "assertOptionalChainStart", "_current", "current", "callee", "object", "fns", "args", "fn", "chainOf", "Error", "validTypeOpts", "validFieldKeys", "store", "defineAliasedType", "aliases", "opts", "defined", "_store$opts$inherits$", "_defined", "inherits", "slice", "additional", "filter", "a", "includes", "unshift", "defineType", "fields", "getOwnPropertyNames", "field", "def", "default", "deprecated", "visitor", "builder", "k", "deprecatedAlias", "concat", "undefined", "forEach", "alias", "_is", "require", "_isValidIdentifier", "_helperValidatorIdentifier", "_helperStringParser", "_constants", "_utils", "defineType", "defineAliasedType", "fields", "elements", "validate", "chain", "assertValueType", "assertEach", "assertNodeOrValueType", "default", "process", "env", "BABEL_TYPES_8_BREAKING", "undefined", "visitor", "aliases", "operator", "identifier", "assertOneOf", "ASSIGNMENT_OPERATORS", "pattern", "node", "key", "val", "validator", "is", "left", "assertNodeType", "right", "builder", "BINARY_OPERATORS", "expression", "inOp", "Object", "assign", "oneOfNodeTypes", "value", "directives", "body", "label", "optional", "callee", "arguments", "typeArguments", "typeParameters", "param", "test", "consequent", "alternate", "program", "comments", "each", "tokens", "type", "init", "update", "functionCommon", "params", "generator", "async", "exports", "functionTypeAnnotationCommon", "returnType", "functionDeclarationCommon", "declare", "id", "predicate", "parent", "inherits", "patternLikeCommon", "typeAnnotation", "decorators", "name", "isValidIdentifier", "TypeError", "match", "exec", "parentKey", "nonComp", "computed", "imported", "meta", "isKeyword", "isReservedWord", "deprecatedAlias", "flags", "invalid", "LOGICAL_OPERATORS", "object", "property", "normal", "sourceFile", "sourceType", "interpreter", "properties", "kind", "shorthand", "argument", "Error", "listKey", "index", "length", "expressions", "discriminant", "cases", "block", "handler", "finalizer", "prefix", "UNARY_OPERATORS", "UPDATE_OPERATORS", "declarations", "without", "definite", "superClass", "superTypeParameters", "implements", "mixins", "abstract", "source", "exportKind", "validateOptional", "attributes", "assertions", "declaration", "specifiers", "sourced", "sourceless", "local", "exported", "lval", "await", "module", "importKind", "classMethodOrPropertyCommon", "accessibility", "static", "override", "classMethodOrDeclareMethodCommon", "access", "tag", "quasi", "assertShape", "raw", "cooked", "templateElementCookedValidator", "unterminatedCalled", "error", "str", "firstInvalidLoc", "readStringContents", "unterminated", "strictNumericEscape", "invalidEscapeSequence", "numericSeparatorInEscapeSequence", "unexpectedNumericSeparator", "invalidDigit", "invalidCodePoint", "tail", "quasis", "delegate", "assertOptionalChainStart", "readonly", "variance", "_utils", "require", "defineType", "defineAliasedType", "defineInterfaceishType", "name", "isDeclareClass", "builder", "visitor", "aliases", "fields", "Object", "assign", "id", "validateType", "typeParameters", "validateOptionalType", "extends", "validateOptional", "arrayOfType", "mixins", "implements", "body", "elementType", "value", "validate", "assertValueType", "predicate", "kind", "assertOneOf", "typeAnnotation", "right", "supertype", "impltype", "declaration", "specifiers", "source", "default", "exportKind", "params", "rest", "this", "returnType", "optional", "types", "properties", "indexers", "callProperties", "internalSlots", "exact", "inexact", "static", "method", "key", "variance", "proto", "argument", "qualification", "expression", "bound", "explicitType", "members", "validateArrayOfType", "hasUnknownMembers", "init", "objectType", "indexType", "_utils", "require", "defineType", "defineAliasedType", "visitor", "aliases", "fields", "name", "validate", "assertNodeType", "value", "optional", "builder", "Object", "assign", "openingElement", "closingElement", "children", "chain", "assertValueType", "assertEach", "selfClosing", "expression", "object", "property", "namespace", "default", "attributes", "typeParameters", "argument", "openingFragment", "closingFragment", "_utils", "require", "PLACEHOLDERS", "exports", "PLACEHOLDERS_ALIAS", "Declaration", "Pattern", "type", "alias", "ALIAS_KEYS", "length", "PLACEHOLDERS_FLIPPED_ALIAS", "Object", "keys", "forEach", "hasOwnProperty", "call", "push", "_utils", "require", "_placeholders", "defineType", "defineAliasedType", "visitor", "builder", "fields", "name", "validate", "assertNodeType", "expectedNode", "assertOneOf", "PLACEHOLDERS", "assertValueType", "_utils", "require", "defineType", "visitor", "aliases", "fields", "process", "env", "BABEL_TYPES_8_BREAKING", "object", "validate", "Object", "assign", "oneOfNodeTypes", "callee", "assertNodeType", "key", "value", "expression", "builder", "body", "async", "assertValueType", "default", "exported", "properties", "chain", "assertEach", "elements", "_utils", "require", "_core", "_is", "defineType", "defineAliasedType", "bool", "assertValueType", "tSFunctionTypeAnnotationCommon", "returnType", "validate", "assertNodeType", "optional", "typeParameters", "aliases", "visitor", "fields", "accessibility", "assertOneOf", "readonly", "parameter", "override", "decorators", "chain", "assertEach", "Object", "assign", "functionDeclarationCommon", "classMethodOrDeclareMethodCommon", "left", "validateType", "right", "signatureDeclarationCommon", "validateOptionalType", "validateArrayOfType", "callConstructSignatureDeclaration", "namedTypeElementCommon", "key", "computed", "default", "validateOptional", "typeAnnotation", "initializer", "kind", "static", "parameters", "tsKeywordTypes", "type", "fnOrCtrBase", "abstract", "typeName", "builder", "parameterName", "asserts", "exprName", "members", "elementType", "elementTypes", "label", "unionOrIntersection", "types", "checkType", "extendsType", "trueType", "falseType", "typeParameter", "operator", "objectType", "indexType", "nameType", "literal", "unaryExpression", "unaryOperator", "validator", "parent", "node", "is", "argument", "oneOfNodeTypes", "expression", "declare", "id", "extends", "arrayOfType", "body", "TSTypeExpression", "const", "global", "qualifier", "isExport", "moduleReference", "importKind", "params", "name", "in", "out", "constraint", "DEPRECATED_ALIASES", "ModuleDeclaration", "exports", "_toFastProperties", "require", "_utils", "_placeholders", "_deprecatedAliases", "Object", "keys", "DEPRECATED_ALIASES", "forEach", "deprecatedAlias", "FLIPPED_ALIAS_KEYS", "toFastProperties", "VISITOR_KEYS", "ALIAS_KEYS", "NODE_FIELDS", "BUILDER_KEYS", "DEPRECATED_KEYS", "PLACEHOLDERS_ALIAS", "PLACEHOLDERS_FLIPPED_ALIAS", "TYPES", "concat", "exports", "_definitions", "require", "validate", "node", "key", "val", "fields", "NODE_FIELDS", "type", "field", "validateField", "validateChild", "optional", "NODE_PARENT_VALIDATIONS", "_validate", "require", "_", "validateNode", "node", "keys", "BUILDER_KEYS", "type", "key", "validate", "_validateNode", "require", "_deprecationWarning", "arrayExpression", "elements", "validateNode", "type", "assignmentExpression", "operator", "left", "right", "binaryExpression", "interpreterDirective", "value", "directive", "directiveLiteral", "blockStatement", "body", "directives", "breakStatement", "label", "callExpression", "callee", "_arguments", "arguments", "catchClause", "param", "conditionalExpression", "test", "consequent", "alternate", "continueStatement", "debuggerStatement", "doWhileStatement", "emptyStatement", "expressionStatement", "expression", "file", "program", "comments", "tokens", "forInStatement", "forStatement", "init", "update", "functionDeclaration", "id", "params", "generator", "async", "functionExpression", "identifier", "name", "ifStatement", "labeledStatement", "stringLiteral", "numericLiteral", "nullLiteral", "booleanLiteral", "regExpLiteral", "pattern", "flags", "logicalExpression", "memberExpression", "object", "property", "computed", "optional", "newExpression", "sourceType", "interpreter", "sourceFile", "objectExpression", "properties", "objectMethod", "kind", "key", "objectProperty", "shorthand", "decorators", "restElement", "argument", "returnStatement", "sequenceExpression", "expressions", "parenthesizedExpression", "switchCase", "switchStatement", "discriminant", "cases", "thisExpression", "throwStatement", "tryStatement", "block", "handler", "finalizer", "unaryExpression", "prefix", "updateExpression", "variableDeclaration", "declarations", "variableDeclarator", "whileStatement", "withStatement", "assignmentPattern", "arrayPattern", "arrowFunctionExpression", "classBody", "classExpression", "superClass", "classDeclaration", "exportAllDeclaration", "source", "exportDefaultDeclaration", "declaration", "exportNamedDeclaration", "specifiers", "exportSpecifier", "local", "exported", "forOfStatement", "_await", "await", "importDeclaration", "importDefaultSpecifier", "importNamespaceSpecifier", "importSpecifier", "imported", "metaProperty", "meta", "classMethod", "_static", "static", "objectPattern", "spreadElement", "_super", "taggedTemplateExpression", "tag", "quasi", "templateElement", "tail", "templateLiteral", "quasis", "yieldExpression", "delegate", "awaitExpression", "_import", "bigIntLiteral", "exportNamespaceSpecifier", "optionalMemberExpression", "optionalCallExpression", "classProperty", "typeAnnotation", "classAccessorProperty", "classPrivateProperty", "classPrivateMethod", "privateName", "staticBlock", "anyTypeAnnotation", "arrayTypeAnnotation", "elementType", "booleanTypeAnnotation", "booleanLiteralTypeAnnotation", "nullLiteralTypeAnnotation", "classImplements", "typeParameters", "declareClass", "_extends", "extends", "declareFunction", "declareInterface", "declareModule", "declareModuleExports", "declareTypeAlias", "declareOpaqueType", "supertype", "declareVariable", "declareExportDeclaration", "declareExportAllDeclaration", "declaredPredicate", "existsTypeAnnotation", "functionTypeAnnotation", "rest", "returnType", "functionTypeParam", "genericTypeAnnotation", "inferredPredicate", "interfaceExtends", "interfaceDeclaration", "interfaceTypeAnnotation", "intersectionTypeAnnotation", "types", "mixedTypeAnnotation", "emptyTypeAnnotation", "nullableTypeAnnotation", "numberLiteralTypeAnnotation", "numberTypeAnnotation", "objectTypeAnnotation", "indexers", "callProperties", "internalSlots", "exact", "objectTypeInternalSlot", "method", "objectTypeCallProperty", "objectTypeIndexer", "variance", "objectTypeProperty", "proto", "objectTypeSpreadProperty", "opaqueType", "impltype", "qualifiedTypeIdentifier", "qualification", "stringLiteralTypeAnnotation", "stringTypeAnnotation", "symbolTypeAnnotation", "thisTypeAnnotation", "tupleTypeAnnotation", "typeofTypeAnnotation", "typeAlias", "typeCastExpression", "typeParameter", "bound", "_default", "default", "typeParameterDeclaration", "typeParameterInstantiation", "unionTypeAnnotation", "voidTypeAnnotation", "enumDeclaration", "enumBooleanBody", "members", "explicitType", "hasUnknownMembers", "enumNumberBody", "enumStringBody", "enumSymbolBody", "enumBooleanMember", "enumNumberMember", "enumStringMember", "enumDefaultedMember", "indexedAccessType", "objectType", "indexType", "optionalIndexedAccessType", "jsxAttribute", "jsxClosingElement", "jsxElement", "openingElement", "closingElement", "children", "selfClosing", "jsxEmptyExpression", "jsxExpressionContainer", "jsxSpreadChild", "jsxIdentifier", "jsxMemberExpression", "jsxNamespacedName", "namespace", "jsxOpeningElement", "attributes", "jsxSpreadAttribute", "jsxText", "jsxFragment", "openingFragment", "closingFragment", "jsxOpeningFragment", "jsxClosingFragment", "noop", "placeholder", "expectedNode", "v8IntrinsicIdentifier", "argumentPlaceholder", "bindExpression", "importAttribute", "decorator", "doExpression", "exportDefaultSpecifier", "recordExpression", "tupleExpression", "decimalLiteral", "moduleExpression", "topicReference", "pipelineTopicExpression", "pipelineBareFunction", "pipelinePrimaryTopicReference", "tsParameterProperty", "parameter", "tsDeclareFunction", "tsDeclareMethod", "tsQualifiedName", "tsCallSignatureDeclaration", "parameters", "tsConstructSignatureDeclaration", "tsPropertySignature", "initializer", "tsMethodSignature", "tsIndexSignature", "tsAnyKeyword", "tsBooleanKeyword", "tsBigIntKeyword", "tsIntrinsicKeyword", "tsNeverKeyword", "tsNullKeyword", "tsNumberKeyword", "tsObjectKeyword", "tsStringKeyword", "tsSymbolKeyword", "tsUndefinedKeyword", "tsUnknownKeyword", "tsVoidKeyword", "tsThisType", "tsFunctionType", "tsConstructorType", "tsTypeReference", "typeName", "tsTypePredicate", "parameterName", "asserts", "tsTypeQuery", "exprName", "tsTypeLiteral", "tsArrayType", "tsTupleType", "elementTypes", "tsOptionalType", "tsRestType", "tsNamedTupleMember", "tsUnionType", "tsIntersectionType", "tsConditionalType", "checkType", "extendsType", "trueType", "falseType", "tsInferType", "tsParenthesizedType", "tsTypeOperator", "tsIndexedAccessType", "tsMappedType", "nameType", "tsLiteralType", "literal", "tsExpressionWithTypeArguments", "tsInterfaceDeclaration", "tsInterfaceBody", "tsTypeAliasDeclaration", "tsInstantiationExpression", "tsAsExpression", "tsSatisfiesExpression", "tsTypeAssertion", "tsEnumDeclaration", "tsEnumMember", "tsModuleDeclaration", "tsModuleBlock", "tsImportType", "qualifier", "tsImportEqualsDeclaration", "moduleReference", "isExport", "tsExternalModuleReference", "tsNonNullExpression", "tsExportAssignment", "tsNamespaceExportDeclaration", "tsTypeAnnotation", "tsTypeParameterInstantiation", "tsTypeParameterDeclaration", "tsTypeParameter", "constraint", "NumberLiteral", "deprecationWarning", "RegexLiteral", "RestProperty", "SpreadProperty", "_generated", "require", "_", "cleanJSXElementLiteralChild", "child", "args", "lines", "value", "split", "lastNonEmptyLine", "i", "length", "match", "str", "line", "isFirstLine", "isLastLine", "isLastNonEmptyLine", "trimmedLine", "replace", "push", "inherits", "stringLiteral", "_generated", "require", "_cleanJSXElementLiteralChild", "buildChildren", "node", "elements", "i", "children", "length", "child", "isJSXText", "cleanJSXElementLiteralChild", "isJSXExpressionContainer", "expression", "isJSXEmptyExpression", "push", "_definitions", "require", "isNode", "node", "VISITOR_KEYS", "type", "_isNode", "require", "assertNode", "node", "isNode", "_node$type", "type", "JSON", "stringify", "TypeError", "_is", "require", "_deprecationWarning", "assert", "type", "node", "opts", "is", "Error", "JSON", "stringify", "assertArrayExpression", "assertAssignmentExpression", "assertBinaryExpression", "assertInterpreterDirective", "assertDirective", "assertDirectiveLiteral", "assertBlockStatement", "assertBreakStatement", "assertCallExpression", "assertCatchClause", "assertConditionalExpression", "assertContinueStatement", "assertDebuggerStatement", "assertDoWhileStatement", "assertEmptyStatement", "assertExpressionStatement", "assertFile", "assertForInStatement", "assertForStatement", "assertFunctionDeclaration", "assertFunctionExpression", "assertIdentifier", "assertIfStatement", "assertLabeledStatement", "assertStringLiteral", "assertNumericLiteral", "assertNullLiteral", "assertBooleanLiteral", "assertRegExpLiteral", "assertLogicalExpression", "assertMemberExpression", "assertNewExpression", "assertProgram", "assertObjectExpression", "assertObjectMethod", "assertObjectProperty", "assertRestElement", "assertReturnStatement", "assertSequenceExpression", "assertParenthesizedExpression", "assertSwitchCase", "assertSwitchStatement", "assertThisExpression", "assertThrowStatement", "assertTryStatement", "assertUnaryExpression", "assertUpdateExpression", "assertVariableDeclaration", "assertVariableDeclarator", "assertWhileStatement", "assertWithStatement", "assertAssignmentPattern", "assertArrayPattern", "assertArrowFunctionExpression", "assertClassBody", "assertClassExpression", "assertClassDeclaration", "assertExportAllDeclaration", "assertExportDefaultDeclaration", "assertExportNamedDeclaration", "assertExportSpecifier", "assertForOfStatement", "assertImportDeclaration", "assertImportDefaultSpecifier", "assertImportNamespaceSpecifier", "assertImportSpecifier", "assertMetaProperty", "assertClassMethod", "assertObjectPattern", "assertSpreadElement", "assertSuper", "assertTaggedTemplateExpression", "assertTemplateElement", "assertTemplateLiteral", "assertYieldExpression", "assertAwaitExpression", "assertImport", "assertBigIntLiteral", "assertExportNamespaceSpecifier", "assertOptionalMemberExpression", "assertOptionalCallExpression", "assertClassProperty", "assertClassAccessorProperty", "assertClassPrivateProperty", "assertClassPrivateMethod", "assertPrivateName", "assertStaticBlock", "assertAnyTypeAnnotation", "assertArrayTypeAnnotation", "assertBooleanTypeAnnotation", "assertBooleanLiteralTypeAnnotation", "assertNullLiteralTypeAnnotation", "assertClassImplements", "assertDeclareClass", "assertDeclareFunction", "assertDeclareInterface", "assertDeclareModule", "assertDeclareModuleExports", "assertDeclareTypeAlias", "assertDeclareOpaqueType", "assertDeclareVariable", "assertDeclareExportDeclaration", "assertDeclareExportAllDeclaration", "assertDeclaredPredicate", "assertExistsTypeAnnotation", "assertFunctionTypeAnnotation", "assertFunctionTypeParam", "assertGenericTypeAnnotation", "assertInferredPredicate", "assertInterfaceExtends", "assertInterfaceDeclaration", "assertInterfaceTypeAnnotation", "assertIntersectionTypeAnnotation", "assertMixedTypeAnnotation", "assertEmptyTypeAnnotation", "assertNullableTypeAnnotation", "assertNumberLiteralTypeAnnotation", "assertNumberTypeAnnotation", "assertObjectTypeAnnotation", "assertObjectTypeInternalSlot", "assertObjectTypeCallProperty", "assertObjectTypeIndexer", "assertObjectTypeProperty", "assertObjectTypeSpreadProperty", "assertOpaqueType", "assertQualifiedTypeIdentifier", "assertStringLiteralTypeAnnotation", "assertStringTypeAnnotation", "assertSymbolTypeAnnotation", "assertThisTypeAnnotation", "assertTupleTypeAnnotation", "assertTypeofTypeAnnotation", "assertTypeAlias", "assertTypeAnnotation", "assertTypeCastExpression", "assertTypeParameter", "assertTypeParameterDeclaration", "assertTypeParameterInstantiation", "assertUnionTypeAnnotation", "assertVariance", "assertVoidTypeAnnotation", "assertEnumDeclaration", "assertEnumBooleanBody", "assertEnumNumberBody", "assertEnumStringBody", "assertEnumSymbolBody", "assertEnumBooleanMember", "assertEnumNumberMember", "assertEnumStringMember", "assertEnumDefaultedMember", "assertIndexedAccessType", "assertOptionalIndexedAccessType", "assertJSXAttribute", "assertJSXClosingElement", "assertJSXElement", "assertJSXEmptyExpression", "assertJSXExpressionContainer", "assertJSXSpreadChild", "assertJSXIdentifier", "assertJSXMemberExpression", "assertJSXNamespacedName", "assertJSXOpeningElement", "assertJSXSpreadAttribute", "assertJSXText", "assertJSXFragment", "assertJSXOpeningFragment", "assertJSXClosingFragment", "assertNoop", "assertPlaceholder", "assertV8IntrinsicIdentifier", "assertArgumentPlaceholder", "assertBindExpression", "assertImportAttribute", "assertDecorator", "assertDoExpression", "assertExportDefaultSpecifier", "assertRecordExpression", "assertTupleExpression", "assertDecimalLiteral", "assertModuleExpression", "assertTopicReference", "assertPipelineTopicExpression", "assertPipelineBareFunction", "assertPipelinePrimaryTopicReference", "assertTSParameterProperty", "assertTSDeclareFunction", "assertTSDeclareMethod", "assertTSQualifiedName", "assertTSCallSignatureDeclaration", "assertTSConstructSignatureDeclaration", "assertTSPropertySignature", "assertTSMethodSignature", "assertTSIndexSignature", "assertTSAnyKeyword", "assertTSBooleanKeyword", "assertTSBigIntKeyword", "assertTSIntrinsicKeyword", "assertTSNeverKeyword", "assertTSNullKeyword", "assertTSNumberKeyword", "assertTSObjectKeyword", "assertTSStringKeyword", "assertTSSymbolKeyword", "assertTSUndefinedKeyword", "assertTSUnknownKeyword", "assertTSVoidKeyword", "assertTSThisType", "assertTSFunctionType", "assertTSConstructorType", "assertTSTypeReference", "assertTSTypePredicate", "assertTSTypeQuery", "assertTSTypeLiteral", "assertTSArrayType", "assertTSTupleType", "assertTSOptionalType", "assertTSRestType", "assertTSNamedTupleMember", "assertTSUnionType", "assertTSIntersectionType", "assertTSConditionalType", "assertTSInferType", "assertTSParenthesizedType", "assertTSTypeOperator", "assertTSIndexedAccessType", "assertTSMappedType", "assertTSLiteralType", "assertTSExpressionWithTypeArguments", "assertTSInterfaceDeclaration", "assertTSInterfaceBody", "assertTSTypeAliasDeclaration", "assertTSInstantiationExpression", "assertTSAsExpression", "assertTSSatisfiesExpression", "assertTSTypeAssertion", "assertTSEnumDeclaration", "assertTSEnumMember", "assertTSModuleDeclaration", "assertTSModuleBlock", "assertTSImportType", "assertTSImportEqualsDeclaration", "assertTSExternalModuleReference", "assertTSNonNullExpression", "assertTSExportAssignment", "assertTSNamespaceExportDeclaration", "assertTSTypeAnnotation", "assertTSTypeParameterInstantiation", "assertTSTypeParameterDeclaration", "assertTSTypeParameter", "assertStandardized", "assertExpression", "assertBinary", "assertScopable", "assertBlockParent", "assertBlock", "assertStatement", "assertTerminatorless", "assertCompletionStatement", "assertConditional", "assertLoop", "assertWhile", "assertExpressionWrapper", "assertFor", "assertForXStatement", "assertFunction", "assertFunctionParent", "assertPureish", "assertDeclaration", "assertPatternLike", "assertLVal", "assertTSEntityName", "assertLiteral", "assertImmutable", "assertUserWhitespacable", "assertMethod", "assertObjectMember", "assertProperty", "assertUnaryLike", "assertPattern", "assertClass", "assertImportOrExportDeclaration", "assertExportDeclaration", "assertModuleSpecifier", "assertAccessor", "assertPrivate", "assertFlow", "assertFlowType", "assertFlowBaseAnnotation", "assertFlowDeclaration", "assertFlowPredicate", "assertEnumBody", "assertEnumMember", "assertJSX", "assertMiscellaneous", "assertTypeScript", "assertTSTypeElement", "assertTSType", "assertTSBaseType", "assertNumberLiteral", "deprecationWarning", "assertRegexLiteral", "assertRestProperty", "assertSpreadProperty", "assertModuleDeclaration", "_generated", "require", "_default", "createTypeAnnotationBasedOnTypeof", "exports", "default", "type", "stringTypeAnnotation", "numberTypeAnnotation", "voidTypeAnnotation", "booleanTypeAnnotation", "genericTypeAnnotation", "identifier", "anyTypeAnnotation", "Error", "_generated", "require", "getQualifiedName", "node", "isIdentifier", "name", "id", "qualification", "removeTypeDuplicates", "nodesIn", "nodes", "Array", "from", "generics", "Map", "bases", "typeGroups", "Set", "types", "i", "length", "indexOf", "isAnyTypeAnnotation", "isFlowBaseAnnotation", "set", "type", "isUnionTypeAnnotation", "has", "push", "add", "isGenericTypeAnnotation", "existing", "get", "typeParameters", "params", "baseType", "genericName", "_generated", "require", "_removeTypeDuplicates", "createFlowUnionType", "types", "flattened", "removeTypeDuplicates", "length", "unionTypeAnnotation", "_generated", "require", "getQualifiedName", "node", "isIdentifier", "name", "right", "left", "removeTypeDuplicates", "nodesIn", "nodes", "Array", "from", "generics", "Map", "bases", "typeGroups", "Set", "types", "i", "length", "indexOf", "isTSAnyKeyword", "isTSBaseType", "set", "type", "isTSUnionType", "has", "push", "add", "isTSTypeReference", "typeParameters", "typeName", "existing", "get", "params", "baseType", "genericName", "_generated", "require", "_removeTypeDuplicates", "_index", "createTSUnionType", "typeAnnotations", "types", "map", "type", "isTSTypeAnnotation", "typeAnnotation", "flattened", "removeTypeDuplicates", "length", "tsUnionType", "_index", "require", "_definitions", "require", "_generated", "has", "Function", "call", "bind", "Object", "prototype", "hasOwnProperty", "cloneIfNode", "obj", "deep", "withoutLoc", "commentsCache", "type", "cloneNodeInternal", "cloneIfNodeOrArray", "Array", "isArray", "map", "node", "cloneNode", "Map", "newNode", "isIdentifier", "name", "optional", "typeAnnotation", "NODE_FIELDS", "Error", "field", "keys", "isFile", "maybeCloneComments", "comments", "loc", "leadingComments", "innerComments", "trailingComments", "extra", "assign", "comment", "cache", "get", "value", "ret", "set", "_cloneNode", "require", "clone", "node", "cloneNode", "_cloneNode", "require", "cloneDeep", "node", "cloneNode", "_cloneNode", "require", "cloneDeepWithoutLoc", "node", "cloneNode", "_cloneNode", "require", "cloneWithoutLoc", "node", "cloneNode", "addComments", "node", "type", "comments", "key", "concat", "push", "_addComments", "require", "addComment", "node", "type", "content", "line", "addComments", "value", "inherit", "key", "child", "parent", "Array", "from", "Set", "concat", "filter", "Boolean", "_inherit", "require", "inheritInnerComments", "child", "parent", "inherit", "_inherit", "require", "inheritLeadingComments", "child", "parent", "inherit", "_inherit", "require", "inheritTrailingComments", "child", "parent", "inherit", "_inheritTrailingComments", "require", "_inheritLeadingComments", "_inheritInnerComments", "inheritsComments", "child", "parent", "inheritTrailingComments", "inheritLeadingComments", "inheritInnerComments", "_constants", "require", "removeComments", "node", "COMMENT_KEYS", "forEach", "key", "_definitions", "require", "STANDARDIZED_TYPES", "FLIPPED_ALIAS_KEYS", "exports", "EXPRESSION_TYPES", "BINARY_TYPES", "SCOPABLE_TYPES", "BLOCKPARENT_TYPES", "BLOCK_TYPES", "STATEMENT_TYPES", "TERMINATORLESS_TYPES", "COMPLETIONSTATEMENT_TYPES", "CONDITIONAL_TYPES", "LOOP_TYPES", "WHILE_TYPES", "EXPRESSIONWRAPPER_TYPES", "FOR_TYPES", "FORXSTATEMENT_TYPES", "FUNCTION_TYPES", "FUNCTIONPARENT_TYPES", "PUREISH_TYPES", "DECLARATION_TYPES", "PATTERNLIKE_TYPES", "LVAL_TYPES", "TSENTITYNAME_TYPES", "LITERAL_TYPES", "IMMUTABLE_TYPES", "USERWHITESPACABLE_TYPES", "METHOD_TYPES", "OBJECTMEMBER_TYPES", "PROPERTY_TYPES", "UNARYLIKE_TYPES", "PATTERN_TYPES", "CLASS_TYPES", "IMPORTOREXPORTDECLARATION_TYPES", "EXPORTDECLARATION_TYPES", "MODULESPECIFIER_TYPES", "ACCESSOR_TYPES", "PRIVATE_TYPES", "FLOW_TYPES", "FLOWTYPE_TYPES", "FLOWBASEANNOTATION_TYPES", "FLOWDECLARATION_TYPES", "FLOWPREDICATE_TYPES", "ENUMBODY_TYPES", "ENUMMEMBER_TYPES", "JSX_TYPES", "MISCELLANEOUS_TYPES", "TYPESCRIPT_TYPES", "TSTYPEELEMENT_TYPES", "TSTYPE_TYPES", "TSBASETYPE_TYPES", "MODULEDECLARATION_TYPES", "_generated", "require", "_generated2", "toBlock", "node", "parent", "isBlockStatement", "blockNodes", "isEmptyStatement", "isStatement", "isFunction", "returnStatement", "expressionStatement", "blockStatement", "_toBlock", "require", "ensureBlock", "node", "key", "result", "toBlock", "_isValidIdentifier", "require", "_helperValidatorIdentifier", "toIdentifier", "input", "name", "c", "isIdentifierChar", "codePointAt", "replace", "match", "toUpperCase", "isValidIdentifier", "_toIdentifier", "require", "toBindingIdentifierName", "name", "toIdentifier", "_generated", "require", "_generated2", "toComputedKey", "node", "key", "property", "computed", "isIdentifier", "stringLiteral", "name", "_generated", "require", "_default", "toExpression", "exports", "default", "node", "isExpressionStatement", "expression", "isExpression", "isClass", "type", "isFunction", "Error", "_definitions", "require", "traverseFast", "node", "enter", "opts", "keys", "VISITOR_KEYS", "type", "key", "subNode", "Array", "isArray", "_constants", "require", "CLEAR_KEYS", "CLEAR_KEYS_PLUS_COMMENTS", "COMMENT_KEYS", "removeProperties", "node", "opts", "map", "preserveComments", "key", "undefined", "Object", "keys", "symbols", "getOwnPropertySymbols", "sym", "_traverseFast", "require", "_removeProperties", "removePropertiesDeep", "tree", "opts", "traverseFast", "removeProperties", "_generated", "require", "_cloneNode", "_removePropertiesDeep", "toKeyAlias", "node", "key", "alias", "kind", "increment", "isIdentifier", "name", "isStringLiteral", "JSON", "stringify", "value", "removePropertiesDeep", "cloneNode", "computed", "static", "uid", "Number", "MAX_SAFE_INTEGER", "_generated", "require", "getBindingIdentifiers", "node", "duplicates", "outerOnly", "search", "concat", "ids", "Object", "create", "length", "id", "shift", "keys", "type", "isIdentifier", "_ids", "name", "push", "isExportDeclaration", "isExportAllDeclaration", "isDeclaration", "declaration", "isFunctionDeclaration", "isFunctionExpression", "i", "key", "nodes", "Array", "isArray", "DeclareClass", "DeclareFunction", "DeclareModule", "DeclareVariable", "DeclareInterface", "DeclareTypeAlias", "DeclareOpaqueType", "InterfaceDeclaration", "TypeAlias", "OpaqueType", "CatchClause", "LabeledStatement", "UnaryExpression", "AssignmentExpression", "ImportSpecifier", "ImportNamespaceSpecifier", "ImportDefaultSpecifier", "ImportDeclaration", "ExportSpecifier", "ExportNamespaceSpecifier", "ExportDefaultSpecifier", "FunctionDeclaration", "FunctionExpression", "ArrowFunctionExpression", "ObjectMethod", "ClassMethod", "ClassPrivateMethod", "ForInStatement", "ForOfStatement", "ClassDeclaration", "ClassExpression", "RestElement", "UpdateExpression", "ObjectProperty", "AssignmentPattern", "ArrayPattern", "ObjectPattern", "VariableDeclaration", "VariableDeclarator", "_getBindingIdentifiers", "require", "_generated", "_generated2", "_cloneNode", "gatherSequenceExpressions", "nodes", "scope", "declars", "exprs", "ensureLastUndefined", "node", "isEmptyStatement", "isExpression", "push", "isExpressionStatement", "expression", "isVariableDeclaration", "kind", "declar", "declarations", "bindings", "getBindingIdentifiers", "key", "Object", "keys", "id", "cloneNode", "init", "assignmentExpression", "isIfStatement", "consequent", "buildUndefinedNode", "alternate", "conditionalExpression", "test", "isBlockStatement", "body", "indexOf", "length", "sequenceExpression", "_gatherSequenceExpressions", "require", "toSequenceExpression", "nodes", "scope", "length", "declars", "result", "gatherSequenceExpressions", "declar", "push", "_generated", "require", "_generated2", "_default", "toStatement", "exports", "default", "node", "ignore", "isStatement", "mustHaveId", "newType", "isClass", "isFunction", "isAssignmentExpression", "expressionStatement", "id", "Error", "type", "_isValidIdentifier", "require", "_generated", "_default", "valueToNode", "exports", "default", "objectToString", "Function", "call", "bind", "Object", "prototype", "toString", "isRegExp", "value", "isPlainObject", "proto", "getPrototypeOf", "undefined", "identifier", "booleanLiteral", "nullLiteral", "stringLiteral", "result", "Number", "isFinite", "numericLiteral", "Math", "abs", "numerator", "isNaN", "binaryExpression", "is", "unaryExpression", "pattern", "source", "flags", "match", "regExpLiteral", "Array", "isArray", "arrayExpression", "map", "props", "key", "keys", "nodeKey", "isValidIdentifier", "push", "objectProperty", "objectExpression", "Error", "_generated", "require", "appendToMemberExpression", "member", "append", "computed", "object", "memberExpression", "property", "_constants", "require", "_inheritsComments", "inherits", "child", "parent", "key", "INHERIT_KEYS", "optional", "Object", "keys", "force", "inheritsComments", "_generated", "require", "_", "prependToMemberExpression", "member", "prepend", "isSuper", "object", "Error", "memberExpression", "_getBindingIdentifiers", "require", "_default", "getOuterBindingIdentifiers", "exports", "default", "node", "duplicates", "getBindingIdentifiers", "_definitions", "require", "traverse", "node", "handlers", "state", "enter", "exit", "traverseSimpleImpl", "ancestors", "keys", "VISITOR_KEYS", "type", "key", "subNode", "Array", "isArray", "i", "length", "child", "push", "index", "pop", "_getBindingIdentifiers", "require", "isBinding", "node", "parent", "grandparent", "type", "keys", "getBindingIdentifiers", "i", "length", "key", "val", "Array", "isArray", "indexOf", "_generated", "require", "_constants", "isLet", "node", "isVariableDeclaration", "kind", "BLOCK_SCOPED_SYMBOL", "_generated", "require", "_isLet", "isBlockScoped", "node", "isFunctionDeclaration", "isClassDeclaration", "isLet", "_isType", "require", "_generated", "isImmutable", "node", "isType", "type", "isIdentifier", "name", "_definitions", "require", "isNodesEquivalent", "a", "b", "type", "fields", "Object", "keys", "NODE_FIELDS", "visitorKeys", "VISITOR_KEYS", "field", "val_a", "val_b", "Array", "isArray", "length", "i", "includes", "key", "isReferenced", "node", "parent", "grandparent", "type", "property", "computed", "object", "init", "body", "key", "superClass", "right", "source", "local", "id", "_generated", "require", "isScope", "node", "parent", "isBlockStatement", "isFunction", "isCatchClause", "isPattern", "isScopable", "_generated", "require", "isSpecifierDefault", "specifier", "isImportDefaultSpecifier", "isIdentifier", "imported", "exported", "name", "_isValidIdentifier", "require", "RESERVED_WORDS_ES3_ONLY", "Set", "isValidES3Identifier", "name", "isValidIdentifier", "has", "_generated", "require", "_constants", "isVar", "node", "isVariableDeclaration", "kind", "BLOCK_SCOPED_SYMBOL", "_isReactComponent", "require", "_isCompatTag", "_buildChildren", "_assertNode", "_generated", "Object", "keys", "forEach", "key", "prototype", "hasOwnProperty", "call", "_exportNames", "exports", "defineProperty", "enumerable", "get", "_createTypeAnnotationBasedOnTypeof", "_createFlowUnionType", "_createTSUnionType", "_generated2", "_uppercase", "_cloneNode", "_clone", "_cloneDeep", "_cloneDeepWithoutLoc", "_cloneWithoutLoc", "_addComment", "_addComments", "_inheritInnerComments", "_inheritLeadingComments", "_inheritsComments", "_inheritTrailingComments", "_removeComments", "_generated3", "_constants", "_ensureBlock", "_toBindingIdentifierName", "_toBlock", "_toComputedKey", "_toExpression", "_toIdentifier", "_toKeyAlias", "_toSequenceExpression", "_toStatement", "_valueToNode", "_definitions", "_appendToMemberExpression", "_inherits", "_prependToMemberExpression", "_removeProperties", "_removePropertiesDeep", "_removeTypeDuplicates", "_getBindingIdentifiers", "_getOuterBindingIdentifiers", "_traverse", "_traverseFast", "_shallowEqual", "_is", "_isBinding", "_isBlockScoped", "_isImmutable", "_isLet", "_isNode", "_isNodesEquivalent", "_isPlaceholderType", "_isReferenced", "_isScope", "_isSpecifierDefault", "_isType", "_isValidES3Identifier", "_isValidIdentifier", "_isVar", "_matchesPattern", "_validate", "_buildMatchMemberExpression", "_generated4", "_deprecationWarning", "react", "isReactComponent", "isCompatTag", "buildChildren", "_assert", "require", "_t", "callExpression", "cloneNode", "expressionStatement", "identifier", "importDeclaration", "importDefaultSpecifier", "importNamespaceSpecifier", "importSpecifier", "memberExpression", "stringLiteral", "variableDeclaration", "variableDeclarator", "ImportBuilder", "constructor", "importedSource", "scope", "hub", "_statements", "_resultName", "_importedSource", "_scope", "_hub", "done", "statements", "resultName", "import", "push", "namespace", "name", "local", "generateUidIdentifier", "statement", "length", "assert", "type", "specifiers", "default", "id", "named", "importName", "var", "expression", "defaultInterop", "_interop", "addHelper", "wildcardInterop", "callee", "declarations", "init", "fail", "prop", "read", "exports", "isModule", "path", "node", "sourceType", "_assert", "require", "_t", "_importBuilder", "_isModule", "numericLiteral", "sequenceExpression", "ImportInjector", "constructor", "path", "importedSource", "opts", "_defaultOpts", "importedType", "importedInterop", "importingInterop", "ensureLiveReference", "ensureNoContext", "importPosition", "programPath", "find", "p", "isProgram", "_programPath", "_programScope", "scope", "_hub", "hub", "_applyDefaults", "addDefault", "importedSourceIn", "addNamed", "importName", "assert", "_generateImport", "addNamespace", "addSideEffect", "isInit", "newOpts", "Object", "assign", "nameHint", "undefined", "blockHoist", "isDefault", "isNamed", "isNamespace", "name", "isMod", "isModule", "isModuleForNode", "isModuleForBabel", "Error", "builder", "ImportBuilder", "import", "namespace", "named", "es6Default", "default", "var", "wildcardInterop", "defaultInterop", "read", "prop", "statements", "resultName", "done", "_insertStatements", "type", "body", "get", "i", "length", "isImportDeclaration", "insertAfter", "forEach", "node", "_blockHoist", "targetPath", "val", "Number", "isFinite", "insertBefore", "unshiftContainer", "exports", "_importInjector", "require", "_isModule", "addDefault", "path", "importedSource", "opts", "ImportInjector", "addNamed", "name", "addNamespace", "addSideEffect", "stack", "parse", "getNodeModulesDirs", "Empty", "require_core", "maybeRealpath", "defaultReadPackage", "getPackageCandidates", "resolve", "err", "basedir", "m", "pkg", "x", "callback", "cb", "exts", "isdir", "onfile", "require_core", "require_core", "core", "maybeRealpathSync", "defaultReadPackageSync", "getPackageCandidates", "m", "x", "n", "stack", "require_shams", "undefined", "doEval", "value", "stringToPath", "string", "getBaseIntrinsic", "applyBind", "value", "value", "forEachArray", "forEachString", "string", "forEachObject", "forEach", "value", "value", "value", "require_isBufferBrowser", "require_inherits_browser", "require_util", "getOwnPropertyDescriptors", "x", "warned", "set", "value", "timestamp", "resolve", "errorEx", "LinesAndColumns", "string", "index", "require_escape_string_regexp", "convert", "m", "value", "string", "convert", "unescape", "m", "escape", "_jsTokens", "require", "_helperValidatorIdentifier", "_chalk", "sometimesKeywords", "Set", "getDefs", "chalk", "keyword", "cyan", "capitalized", "yellow", "jsxIdentifier", "punctuator", "number", "magenta", "string", "green", "regex", "comment", "grey", "invalid", "white", "bgRed", "bold", "NEWLINE", "BRACKET", "tokenize", "JSX_TAG", "getTokenType", "token", "offset", "text", "type", "isKeyword", "value", "isStrictReservedWord", "has", "test", "slice", "toLowerCase", "match", "jsTokens", "default", "exec", "matchToToken", "index", "highlightTokens", "defs", "highlighted", "colorize", "split", "map", "str", "join", "shouldHighlight", "options", "Chalk", "supportsColor", "forceColor", "getChalk", "constructor", "enabled", "level", "highlight", "code", "require_lib", "string", "index", "string", "index", "obj", "value", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "_construct", "Parent", "args", "Class", "_wrapNativeSuper", "_get", "target", "property", "receiver", "Range", "Node", "YAMLError", "YAMLReferenceError", "YAMLSemanticError", "YAMLSyntaxError", "YAMLWarning", "PlainValue", "parse", "offset", "BlankLine", "parse", "CollectionItem", "value", "Comment", "Collection", "Directive", "Document", "parseDirectives", "parseContents", "Alias", "BlockValue", "FlowCollection", "QuoteDouble", "QuoteSingle", "ParseContext", "value", "res", "tags", "resolve", "json", "m", "_stringify", "Collection", "Alias", "map", "warn", "seq", "Node", "Scalar", "isEmptyPath", "toJSON", "stringify", "nodes", "str", "YAMLSeq", "set", "stringifyKey", "Pair", "getAliasCount", "YAMLMap", "Type", "Merge", "consumeMoreIndentedLines", "getFoldOptions", "containsDocumentMarker", "isCollectionItem", "valueHasPairComment", "seq", "pairs", "value", "omap", "map", "set", "YAMLOMap", "identify", "YAMLSet", "toJSON", "parseSexagesimal", "n", "stringifySexagesimal", "resolve", "stringify", "map", "value", "seq", "intResolve", "intIdentify", "tags", "createNode", "Node", "Alias", "schemas", "identify", "stringify", "resolve", "stringifyJSON", "boolStringify", "sortMapEntriesByKey", "Schema", "p", "tags", "Alias", "Node", "Collection", "copyTagPrefix", "createNode", "value", "Document", "parse", "stringify", "Anchors", "map", "visit", "listTagNames", "set", "warn", "require_browser", "importFresh", "loadJs", "filepath", "undefined", "require", "result", "parseJson", "loadJson", "content", "error", "message", "yaml", "loadYaml", "parse", "prettyErrors", "loaders", "getPropertyByPath", "source", "path", "Object", "prototype", "hasOwnProperty", "call", "parsedPath", "split", "reduce", "previous", "key", "undefined", "ExplorerBase", "constructor", "options", "cache", "loadCache", "Map", "searchCache", "config", "validateConfig", "clearLoadCache", "clear", "clearSearchCache", "clearCaches", "searchPlaces", "forEach", "place", "loaderKey", "path", "extname", "loader", "loaders", "Error", "getExtensionDescription", "shouldSearchStopWithResult", "result", "isEmpty", "ignoreEmptySearchPlaces", "nextDirectoryToSearch", "currentDir", "currentResult", "nextDir", "nextDirUp", "stopDir", "loadPackageProp", "filepath", "content", "parsedContent", "loadJson", "packagePropValue", "packageProp", "getLoaderEntryForFile", "basename", "bind", "loadedContentToCosmiconfigResult", "loadedContent", "undefined", "validateFilePath", "dir", "dirname", "ext", "fsReadFileAsync", "pathname", "encoding", "Promise", "resolve", "reject", "fs", "readFile", "error", "contents", "filepath", "options", "throwNotFound", "content", "code", "readFileSync", "cacheWrapper", "cache", "key", "fn", "cached", "get", "undefined", "result", "set", "cacheWrapperSync", "getDirectory", "filepath", "filePathIsDirectory", "directory", "path", "dirname", "getDirectorySync", "Explorer", "ExplorerBase", "constructor", "options", "search", "searchFrom", "process", "cwd", "startDirectory", "result", "searchFromDirectory", "dir", "absoluteDir", "path", "resolve", "run", "searchDirectory", "nextDir", "nextDirectoryToSearch", "transformResult", "config", "transform", "searchCache", "searchPlaces", "place", "placeResult", "loadSearchPlace", "shouldSearchStopWithResult", "filepath", "join", "fileContents", "createCosmiconfigResult", "loadFileContent", "content", "trim", "undefined", "loader", "getLoaderEntryForFile", "loaderResult", "fileContent", "loadedContentToCosmiconfigResult", "load", "validateFilePath", "absoluteFilePath", "runLoad", "throwNotFound", "loadCache", "ExplorerSync", "ExplorerBase", "constructor", "options", "searchSync", "searchFrom", "process", "cwd", "startDirectory", "result", "searchFromDirectorySync", "dir", "absoluteDir", "path", "resolve", "run", "searchDirectorySync", "nextDir", "nextDirectoryToSearch", "transformResult", "config", "transform", "searchCache", "place", "searchPlaces", "placeResult", "loadSearchPlaceSync", "shouldSearchStopWithResult", "filepath", "join", "content", "createCosmiconfigResultSync", "loadFileContentSync", "trim", "undefined", "loader", "getLoaderEntryForFile", "loaderResult", "fileContent", "loadedContentToCosmiconfigResult", "loadSync", "validateFilePath", "absoluteFilePath", "runLoadSync", "throwNotFound", "cosmiconfigResult", "loadCache", "require_types", "cosmiconfig", "moduleName", "options", "normalizedOptions", "normalizeOptions", "explorer", "Explorer", "search", "bind", "load", "clearLoadCache", "clearSearchCache", "clearCaches", "cosmiconfigSync", "explorerSync", "ExplorerSync", "searchSync", "loadSync", "defaultLoaders", "Object", "freeze", "loaders", "loadJs", "loadJson", "loadYaml", "noExt", "defaults", "packageProp", "searchPlaces", "ignoreEmptySearchPlaces", "stopDir", "os", "homedir", "cache", "transform", "identity", "x", "require_dist", "resolve", "createMacro", "require_lib", "value", "index", "nodePath", "convert", "countOccurences", "reduceSubstr", "stripLineComment", "compressSymbols", "isLineComment", "minify", "interleave", "sanitizeLabelPart", "hashArray", "findRoot", "escapeRegexp", "normalizePath", "appendStringToArguments", "string", "joinStringLiterals", "cloneNode", "transformExpressionWithStyles", "node", "getKnownProperties", "getStyledOptions", "createEmotionMacro", "createStyledMacro", "getStyledIdentifier", "getOriginalImportPathStyledIdentifier", "transformCssCallExpression", "emotionCoreMacroThatsNotARealMacro"]
}
